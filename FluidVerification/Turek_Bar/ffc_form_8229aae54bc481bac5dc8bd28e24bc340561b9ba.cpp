// This code conforms with the UFC specification version 2016.1.0
// and was automatically generated by FFC version 2016.1.0.
// 
// This code was generated with the following parameters:
// 
//   convert_exceptions_to_warnings: False
//   cpp_optimize:                   True
//   cpp_optimize_flags:             '-O2'
//   epsilon:                        1e-14
//   error_control:                  False
//   form_postfix:                   False
//   format:                         'ufc'
//   no-evaluate_basis_derivatives:  True
//   optimize:                       False
//   precision:                      15
//   quadrature_degree:              -1
//   quadrature_rule:                'auto'
//   representation:                 'auto'
//   split:                          False

#include "ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba.h"

// Based on https://gcc.gnu.org/wiki/Visibility
#if defined _WIN32 || defined __CYGWIN__
    #ifdef __GNUC__
        #define DLL_EXPORT __attribute__ ((dllexport))
    #else
        #define DLL_EXPORT __declspec(dllexport)
    #endif
#else
    #define DLL_EXPORT __attribute__ ((visibility ("default")))
#endif

class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0: public ufc::finite_element
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::signature() const
{
    return "FiniteElement('Lagrange', triangle, 1)";
}

ufc::shape ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::space_dimension() const
{
    return 3;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::value_rank() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::value_size() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::degree() const
{
    return 1;
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::family() const
{
    return "Lagrange";
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    *values = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values = 0.0;
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 3; r++)
    {
      _evaluate_basis(r, &dof_values, x, coordinate_dofs, cell_orientation);
      values[r] = dof_values;
    } // end loop over 'r'
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 3; r++)
    {
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 1)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[2];
    for (unsigned int r = 0; r < 2; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 3; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[1];
    vertex_values[2] = dof_values[2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1: public ufc::finite_element
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::signature() const
{
    return "VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2)";
}

ufc::shape ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::space_dimension() const
{
    return 6;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::value_rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::value_size() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::reference_value_size() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::degree() const
{
    return 1;
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::family() const
{
    return "Lagrange";
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, -0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.288675134594813, -0.166666666666667};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[3] = {0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[1] *= std::sqrt(3.0);
      
      // Table(s) of coefficients
      static const double coefficients0[3] = \
      {0.471404520791032, 0.0, 0.333333333333333};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 3; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[2] = {0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2; s++)
      {
        values[r*2 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 6; r++)
    {
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 1)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[4];
    for (unsigned int r = 0; r < 4; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 4:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 5:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[3] = vals[1];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[4] = vals[1];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[1];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[2] = dof_values[1];
    vertex_values[4] = dof_values[2];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[3];
    vertex_values[3] = dof_values[4];
    vertex_values[5] = dof_values[5];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = coordinate_dofs[0];
    dof_coordinates[7] = coordinate_dofs[1];
    dof_coordinates[8] = coordinate_dofs[2];
    dof_coordinates[9] = coordinate_dofs[3];
    dof_coordinates[10] = coordinate_dofs[4];
    dof_coordinates[11] = coordinate_dofs[5];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::num_sub_elements() const
{
    return 2;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_0();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2: public ufc::finite_element
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::signature() const
{
    return "FiniteElement('Lagrange', triangle, 3)";
}

ufc::shape ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::space_dimension() const
{
    return 10;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::value_rank() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::value_size() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::degree() const
{
    return 3;
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::family() const
{
    return "Lagrange";
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    *values = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 6:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 7:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 8:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 9:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values = 0.0;
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 10; r++)
    {
      _evaluate_basis(r, &dof_values, x, coordinate_dofs, cell_orientation);
      values[r] = dof_values;
    } // end loop over 'r'
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 10; r++)
    {
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 3)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[8];
    for (unsigned int r = 0; r < 8; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 10; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 6:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 7:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 8:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 9:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[6] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[7] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[8] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[9] = vals[0];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[1];
    vertex_values[2] = dof_values[2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[7] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[8] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[9] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[10] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[11] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[12] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[13] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[14] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[15] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[16] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[17] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[18] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[19] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3: public ufc::finite_element
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::signature() const
{
    return "VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2)";
}

ufc::shape ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::space_dimension() const
{
    return 20;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::value_rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::value_size() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::reference_value_size() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::degree() const
{
    return 3;
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::family() const
{
    return "Lagrange";
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 6:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 7:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 8:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 9:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 10:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 11:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 12:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 13:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 14:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 15:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 16:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 17:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 18:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 19:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[2] = {0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 20; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2; s++)
      {
        values[r*2 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 20; r++)
    {
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 3)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[16];
    for (unsigned int r = 0; r < 16; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 20; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 2*num_derivatives; s++)
      {
        values[r*2*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 6:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 7:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 8:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 9:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 10:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 11:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 12:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 13:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 14:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 15:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 16:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 17:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 18:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 19:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[2];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[6] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[7] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[8] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[9] = vals[0];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[10] = vals[1];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[11] = vals[1];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[12] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[13] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[14] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[15] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[16] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[17] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[18] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[19] = vals[1];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[2] = dof_values[1];
    vertex_values[4] = dof_values[2];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[10];
    vertex_values[3] = dof_values[11];
    vertex_values[5] = dof_values[12];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[7] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[8] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[9] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[10] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[11] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[12] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[13] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[14] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[15] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[16] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[17] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[18] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[19] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[20] = coordinate_dofs[0];
    dof_coordinates[21] = coordinate_dofs[1];
    dof_coordinates[22] = coordinate_dofs[2];
    dof_coordinates[23] = coordinate_dofs[3];
    dof_coordinates[24] = coordinate_dofs[4];
    dof_coordinates[25] = coordinate_dofs[5];
    dof_coordinates[26] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[27] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[28] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[29] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[30] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[31] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[32] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[33] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[34] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[35] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[36] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[37] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[38] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[39] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::num_sub_elements() const
{
    return 2;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_2();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4: public ufc::finite_element
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::signature() const
{
    return "FiniteElement('Lagrange', triangle, 2)";
}

ufc::shape ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::space_dimension() const
{
    return 6;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::value_rank() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::value_size() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::reference_value_rank() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::reference_value_dimension(std::size_t i) const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::reference_value_size() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::degree() const
{
    return 2;
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::family() const
{
    return "Lagrange";
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    *values = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, -0.173205080756888, -0.1, 0.121716123890037, 0.0942809041582064, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.173205080756888, -0.1, 0.121716123890037, -0.0942809041582063, 0.0544331053951818};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.0, 0.2, 0.0, 0.0, 0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.23094010767585, 0.133333333333333, 0.0, 0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791031, -0.23094010767585, 0.133333333333333, 0.0, -0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.0, -0.266666666666667, -0.243432247780074, 0.0, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        *values += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values = 0.0;
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis(r, &dof_values, x, coordinate_dofs, cell_orientation);
      values[r] = dof_values;
    } // end loop over 'r'
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 6; r++)
    {
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 2)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[4];
    for (unsigned int r = 0; r < 4; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 6; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < num_derivatives; s++)
      {
        values[r*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[1];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[1] = dof_values[1];
    vertex_values[2] = dof_values[2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    dof_coordinates[7] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    dof_coordinates[8] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    dof_coordinates[9] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    dof_coordinates[10] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    dof_coordinates[11] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::num_sub_elements() const
{
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::create_sub_element(std::size_t i) const
{
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5: public ufc::finite_element
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5() override;

  const char * signature() const final override;

  ufc::shape cell_shape() const final override;

  std::size_t topological_dimension() const final override;

  std::size_t geometric_dimension() const final override;

  std::size_t space_dimension() const final override;

  std::size_t value_rank() const final override;

  std::size_t value_dimension(std::size_t i) const final override;

  std::size_t value_size() const final override;

  std::size_t reference_value_rank() const final override;

  std::size_t reference_value_dimension(std::size_t i) const final override;

  std::size_t reference_value_size() const final override;

  std::size_t degree() const final override;

  const char * family() const final override;

  static void _evaluate_basis(std::size_t i,
                              double * values,
                              const double * x,
                              const double * coordinate_dofs,
                              int cell_orientation);

  void evaluate_basis(std::size_t i,
                      double * values,
                      const double * x,
                      const double * coordinate_dofs,
                      int cell_orientation) const final override
  {
    _evaluate_basis(i, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_all(double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation);

  void evaluate_basis_all(double * values,
                          const double * x,
                          const double * coordinate_dofs,
                          int cell_orientation) const final override
  {
    _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives(std::size_t i,
                                          std::size_t n,
                                          double * values,
                                          const double * x,
                                          const double * coordinate_dofs,
                                          int cell_orientation);

  void evaluate_basis_derivatives(std::size_t i,
                                  std::size_t n,
                                  double * values,
                                  const double * x,
                                  const double * coordinate_dofs,
                                  int cell_orientation) const final override
  {
    _evaluate_basis_derivatives(i, n, values, x, coordinate_dofs, cell_orientation);
  }

  static void _evaluate_basis_derivatives_all(std::size_t n,
                                              double * values,
                                              const double * x,
                                              const double * coordinate_dofs,
                                              int cell_orientation);

  void evaluate_basis_derivatives_all(std::size_t n,
                                      double * values,
                                      const double * x,
                                      const double * coordinate_dofs,
                                      int cell_orientation) const final override
  {
    _evaluate_basis_derivatives_all(n, values, x, coordinate_dofs, cell_orientation);
  }

  double evaluate_dof(std::size_t i,
                      const ufc::function& f,
                      const double * coordinate_dofs,
                      int cell_orientation,
                      const ufc::cell& c) const final override;

  void evaluate_dofs(double * values,
                     const ufc::function& f,
                     const double * coordinate_dofs,
                     int cell_orientation,
                     const ufc::cell& c) const final override;

  void interpolate_vertex_values(double * vertex_values,
                                 const double * dof_values,
                                 const double * coordinate_dofs,
                                 int cell_orientation,
                                 const ufc::cell& c) const final override;

  void tabulate_dof_coordinates(double * coordinates,
                                const double * coordinate_dofs) const final override;

  std::size_t num_sub_elements() const final override;

  ufc::finite_element * create_sub_element(std::size_t i) const final override;

  ufc::finite_element * create() const final override;

};

extern "C" DLL_EXPORT ufc::finite_element * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5() : ufc::finite_element()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::signature() const
{
    return "MixedElement(VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2), FiniteElement('Lagrange', triangle, 2))";
}

ufc::shape ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::cell_shape() const
{
    return ufc::shape::triangle;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::geometric_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::space_dimension() const
{
    return 26;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::value_rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 3;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::value_size() const
{
    return 3;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::reference_value_rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::reference_value_dimension(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return 3;
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::reference_value_size() const
{
    return 3;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::degree() const
{
    return 3;
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::family() const
{
    return "Mixed";
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::_evaluate_basis(std::size_t i,
                                    double * values,
                                    const double * x,
                                    const double * coordinate_dofs,
                                    int cell_orientation)
{
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    // Compute constants
    const double C0 = coordinate_dofs[2] + coordinate_dofs[4];
    const double C1 = coordinate_dofs[3] + coordinate_dofs[5];
    
    // Get coordinates and map to the reference (FIAT) element
    double X = (J[1]*(C1 - 2.0*x[1]) + J[3]*(2.0*x[0] - C0)) / detJ;
    double Y = (J[0]*(2.0*x[1] - C1) + J[2]*(C0 - 2.0*x[0])) / detJ;
    
    // Reset values
    values[0] = 0.0;
    values[1] = 0.0;
    values[2] = 0.0;
    switch (i)
    {
    case 0:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 1:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 2:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 3:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 4:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 5:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 6:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 7:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 8:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 9:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[0] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 10:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, -0.0288675134594813, -0.0166666666666667, 0.0782460796435952, 0.0606091526731326, 0.0349927106111883, -0.0601337794302955, -0.0508223195384204, -0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 11:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791031, 0.0288675134594812, -0.0166666666666666, 0.0782460796435952, -0.0606091526731327, 0.0349927106111883, 0.0601337794302955, -0.0508223195384204, 0.0393667994375868, -0.0227284322524248};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 12:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.0471404520791033, 0.0, 0.0333333333333333, 0.0, 0.0, 0.104978131833565, 0.0, 0.0, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 13:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, 0.117369119465393, 0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, -0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 14:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, 0.151522881682832, 0.0262445329583912, 0.0, 0.0, 0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 15:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, 0.117369119465393, -0.0606091526731326, -0.0787335988751736, 0.0, 0.101644639076841, 0.131222664791956, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 16:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.0, 0.3, 0.0, -0.151522881682832, 0.0262445329583912, 0.0, 0.0, -0.131222664791956, -0.136370593514548};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 17:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, -0.259807621135332, -0.15, -0.0782460796435952, 0.090913729009699, 0.0962299541807677, 0.180401338290886, 0.0508223195384204, -0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 18:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.106066017177982, 0.259807621135332, -0.15, -0.0782460796435952, -0.090913729009699, 0.0962299541807678, -0.180401338290886, 0.0508223195384204, 0.0131222664791956, -0.0227284322524247};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 19:
      {
        
      // Array of basisvalues
      double basisvalues[10] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[6] = basisvalues[3]*1.66666666666667*tmp0 - basisvalues[1]*0.666666666666667*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[7] = basisvalues[3]*(2.5 + 3.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[9] = basisvalues[5]*(0.05 + Y*1.75) - basisvalues[2]*0.7;
      basisvalues[8] = basisvalues[4]*(0.54 + Y*2.1) - basisvalues[1]*0.56;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[9] *= std::sqrt(2.0);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[8] *= std::sqrt(6.0);
      basisvalues[3] *= std::sqrt(7.5);
      basisvalues[7] *= std::sqrt(10.0);
      basisvalues[6] *= std::sqrt(14.0);
      
      // Table(s) of coefficients
      static const double coefficients0[10] = \
      {0.636396103067893, 0.0, 0.0, -0.234738238930785, 0.0, -0.262445329583912, 0.0, -0.203289278153681, 0.0, 0.090913729009699};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 10; r++)
      {
        values[1] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 20:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, -0.173205080756888, -0.1, 0.121716123890037, 0.0942809041582064, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 21:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.173205080756888, -0.1, 0.121716123890037, -0.0942809041582063, 0.0544331053951818};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 22:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.0, 0.0, 0.2, 0.0, 0.0, 0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 23:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.23094010767585, 0.133333333333333, 0.0, 0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 24:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791031, -0.23094010767585, 0.133333333333333, 0.0, -0.188561808316413, -0.163299316185545};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    case 25:
      {
        
      // Array of basisvalues
      double basisvalues[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
      
      // Declare helper variables
      double tmp0 = (1.0 + Y + 2.0*X)/2.0;
      double tmp1 = (1.0 - Y)/2.0;
      double tmp2 = tmp1*tmp1;
      
      // Compute basisvalues
      basisvalues[0] = 1.0;
      basisvalues[1] = tmp0;
      basisvalues[3] = basisvalues[1]*1.5*tmp0 - basisvalues[0]*0.5*tmp2;
      basisvalues[2] = basisvalues[0]*(0.5 + 1.5*Y);
      basisvalues[4] = basisvalues[1]*(1.5 + 2.5*Y);
      basisvalues[5] = basisvalues[2]*(0.111111111111111 + Y*1.66666666666667) - basisvalues[0]*0.555555555555556;
      basisvalues[0] *= std::sqrt(0.5);
      basisvalues[2] *= std::sqrt(1.0);
      basisvalues[5] *= std::sqrt(1.5);
      basisvalues[1] *= std::sqrt(3.0);
      basisvalues[4] *= std::sqrt(4.5);
      basisvalues[3] *= std::sqrt(7.5);
      
      // Table(s) of coefficients
      static const double coefficients0[6] = \
      {0.471404520791032, 0.0, -0.266666666666667, -0.243432247780074, 0.0, 0.0544331053951817};
      
      // Compute value(s)
      for (unsigned int r = 0; r < 6; r++)
      {
        values[2] += coefficients0[r]*basisvalues[r];
      } // end loop over 'r'
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::_evaluate_basis_all(double * values,
                                        const double * x,
                                        const double * coordinate_dofs,
                                        int cell_orientation)
{
    // Helper variable to hold values of a single dof.
    double dof_values[3] = {0.0, 0.0, 0.0};
    
    // Loop dofs and call evaluate_basis
    for (unsigned int r = 0; r < 26; r++)
    {
      _evaluate_basis(r, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 3; s++)
      {
        values[r*3 + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::_evaluate_basis_derivatives(std::size_t i,
                                                std::size_t n,
                                                double * values,
                                                const double * x,
                                                const double * coordinate_dofs,
                                                int cell_orientation)
{
throw std::runtime_error("// Function evaluate_basis_derivatives not generated (compiled with -fno-evaluate_basis_derivatives)");
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::_evaluate_basis_derivatives_all(std::size_t n,
                                                    double * values,
                                                    const double * x,
                                                    const double * coordinate_dofs,
                                                    int cell_orientation)
{
    // Call evaluate_basis_all if order of derivatives is equal to zero.
    if (n == 0)
    {
      _evaluate_basis_all(values, x, coordinate_dofs, cell_orientation);
      return ;
    }
    
    // Compute number of derivatives.
    unsigned int num_derivatives = 1;
    for (unsigned int r = 0; r < n; r++)
    {
      num_derivatives *= 2;
    } // end loop over 'r'
    
    // Set values equal to zero.
    for (unsigned int r = 0; r < 26; r++)
    {
      for (unsigned int s = 0; s < 3*num_derivatives; s++)
      {
        values[r*3*num_derivatives + s] = 0.0;
      } // end loop over 's'
    } // end loop over 'r'
    
    // If order of derivatives is greater than the maximum polynomial degree, return zeros.
    if (n > 3)
    {
      return ;
    }
    
    // Helper variable to hold values of a single dof.
    double dof_values[24];
    for (unsigned int r = 0; r < 24; r++)
    {
      dof_values[r] = 0.0;
    } // end loop over 'r'
    
    // Loop dofs and call evaluate_basis_derivatives.
    for (unsigned int r = 0; r < 26; r++)
    {
      _evaluate_basis_derivatives(r, n, dof_values, x, coordinate_dofs, cell_orientation);
      for (unsigned int s = 0; s < 3*num_derivatives; s++)
      {
        values[r*3*num_derivatives + s] = dof_values[s];
      } // end loop over 's'
    } // end loop over 'r'
}

double ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::evaluate_dof(std::size_t i,
                                   const ufc::function& f,
                                   const double * coordinate_dofs,
                                   int cell_orientation,
                                   const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[3];
    
    // Declare variable for physical coordinates
    double y[2];
    switch (i)
    {
    case 0:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 1:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 2:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 3:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 4:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 5:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 6:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 7:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 8:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 9:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[0];
        break;
      }
    case 10:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 11:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 12:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 13:
      {
        y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 14:
      {
        y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 15:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 16:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 17:
      {
        y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
      y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 18:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 19:
      {
        y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
      y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[1];
        break;
      }
    case 20:
      {
        y[0] = coordinate_dofs[0];
      y[1] = coordinate_dofs[1];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 21:
      {
        y[0] = coordinate_dofs[2];
      y[1] = coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 22:
      {
        y[0] = coordinate_dofs[4];
      y[1] = coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 23:
      {
        y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 24:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    case 25:
      {
        y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
      y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
      f.evaluate(vals, y, c);
      return vals[2];
        break;
      }
    }
    
    return 0.0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::evaluate_dofs(double * values,
                                  const ufc::function& f,
                                  const double * coordinate_dofs,
                                  int cell_orientation,
                                  const ufc::cell& c) const
{
    // Declare variables for result of evaluation
    double vals[3];
    
    // Declare variable for physical coordinates
    double y[2];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[0] = vals[0];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[1] = vals[0];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[2] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[3] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[4] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[5] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[6] = vals[0];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[7] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[8] = vals[0];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[9] = vals[0];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[10] = vals[1];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[11] = vals[1];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[12] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[13] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[14] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[15] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[16] = vals[1];
    y[0] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    y[1] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[17] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[18] = vals[1];
    y[0] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    y[1] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[19] = vals[1];
    y[0] = coordinate_dofs[0];
    y[1] = coordinate_dofs[1];
    f.evaluate(vals, y, c);
    values[20] = vals[2];
    y[0] = coordinate_dofs[2];
    y[1] = coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[21] = vals[2];
    y[0] = coordinate_dofs[4];
    y[1] = coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[22] = vals[2];
    y[0] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[23] = vals[2];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    f.evaluate(vals, y, c);
    values[24] = vals[2];
    y[0] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    y[1] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
    f.evaluate(vals, y, c);
    values[25] = vals[2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::interpolate_vertex_values(double * vertex_values,
                                              const double * dof_values,
                                              const double * coordinate_dofs,
                                              int cell_orientation,
                                              const ufc::cell& c) const
{
    // Evaluate function and change variables
    vertex_values[0] = dof_values[0];
    vertex_values[3] = dof_values[1];
    vertex_values[6] = dof_values[2];
    // Evaluate function and change variables
    vertex_values[1] = dof_values[10];
    vertex_values[4] = dof_values[11];
    vertex_values[7] = dof_values[12];
    // Evaluate function and change variables
    vertex_values[2] = dof_values[20];
    vertex_values[5] = dof_values[21];
    vertex_values[8] = dof_values[22];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::tabulate_dof_coordinates(double * dof_coordinates,
                                             const double * coordinate_dofs) const
{
    dof_coordinates[0] = coordinate_dofs[0];
    dof_coordinates[1] = coordinate_dofs[1];
    dof_coordinates[2] = coordinate_dofs[2];
    dof_coordinates[3] = coordinate_dofs[3];
    dof_coordinates[4] = coordinate_dofs[4];
    dof_coordinates[5] = coordinate_dofs[5];
    dof_coordinates[6] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[7] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[8] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[9] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[10] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[11] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[12] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[13] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[14] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[15] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[16] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[17] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[18] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[19] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[20] = coordinate_dofs[0];
    dof_coordinates[21] = coordinate_dofs[1];
    dof_coordinates[22] = coordinate_dofs[2];
    dof_coordinates[23] = coordinate_dofs[3];
    dof_coordinates[24] = coordinate_dofs[4];
    dof_coordinates[25] = coordinate_dofs[5];
    dof_coordinates[26] = 0.666666666666667*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[27] = 0.666666666666667*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[28] = 0.333333333333333*coordinate_dofs[2] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[29] = 0.333333333333333*coordinate_dofs[3] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[30] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[31] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[32] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[4];
    dof_coordinates[33] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[5];
    dof_coordinates[34] = 0.666666666666667*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2];
    dof_coordinates[35] = 0.666666666666667*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3];
    dof_coordinates[36] = 0.333333333333333*coordinate_dofs[0] + 0.666666666666667*coordinate_dofs[2];
    dof_coordinates[37] = 0.333333333333333*coordinate_dofs[1] + 0.666666666666667*coordinate_dofs[3];
    dof_coordinates[38] = 0.333333333333333*coordinate_dofs[0] + 0.333333333333333*coordinate_dofs[2] + 0.333333333333333*coordinate_dofs[4];
    dof_coordinates[39] = 0.333333333333333*coordinate_dofs[1] + 0.333333333333333*coordinate_dofs[3] + 0.333333333333333*coordinate_dofs[5];
    dof_coordinates[40] = coordinate_dofs[0];
    dof_coordinates[41] = coordinate_dofs[1];
    dof_coordinates[42] = coordinate_dofs[2];
    dof_coordinates[43] = coordinate_dofs[3];
    dof_coordinates[44] = coordinate_dofs[4];
    dof_coordinates[45] = coordinate_dofs[5];
    dof_coordinates[46] = 0.5*coordinate_dofs[2] + 0.5*coordinate_dofs[4];
    dof_coordinates[47] = 0.5*coordinate_dofs[3] + 0.5*coordinate_dofs[5];
    dof_coordinates[48] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[4];
    dof_coordinates[49] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[5];
    dof_coordinates[50] = 0.5*coordinate_dofs[0] + 0.5*coordinate_dofs[2];
    dof_coordinates[51] = 0.5*coordinate_dofs[1] + 0.5*coordinate_dofs[3];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::num_sub_elements() const
{
    return 2;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::create_sub_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_3();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_4();
        break;
      }
    }
    
    return 0;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0: public ufc::dofmap
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::signature() const
{
    return "FFC dofmap for FiniteElement('Lagrange', triangle, 1)";
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return false;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return num_global_entities[0];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::num_element_dofs() const
{
    return 3;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::num_facet_dofs() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 1;
        break;
      }
    case 1:
      {
        return 0;
        break;
      }
    case 2:
      {
        return 0;
        break;
      }
    }
    
    return 0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    dofs[0] = entity_indices[0][0];
    dofs[1] = entity_indices[0][1];
    dofs[2] = entity_indices[0][2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1: public ufc::dofmap
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::signature() const
{
    return "FFC dofmap for VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2)";
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return false;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 2*num_global_entities[0];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::num_element_dofs() const
{
    return 6;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::num_facet_dofs() const
{
    return 4;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 2;
        break;
      }
    case 1:
      {
        return 0;
        break;
      }
    case 2:
      {
        return 0;
        break;
      }
    }
    
    return 0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + entity_indices[0][0];
    dofs[4] = offset + entity_indices[0][1];
    dofs[5] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 4;
      dofs[3] = 5;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 5;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 3;
      dofs[3] = 4;
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
        dofs[1] = 3;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
        dofs[1] = 4;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
        dofs[1] = 5;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::num_sub_dofmaps() const
{
    return 2;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_0();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2: public ufc::dofmap
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::signature() const
{
    return "FFC dofmap for FiniteElement('Lagrange', triangle, 3)";
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return num_global_entities[0] + 2*num_global_entities[1] + num_global_entities[2];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::num_element_dofs() const
{
    return 10;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::num_facet_dofs() const
{
    return 4;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 1;
        break;
      }
    case 1:
      {
        return 2;
        break;
      }
    case 2:
      {
        return 1;
        break;
      }
    }
    
    return 0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + 2*entity_indices[1][0];
    dofs[4] = offset + 2*entity_indices[1][0] + 1;
    dofs[5] = offset + 2*entity_indices[1][1];
    dofs[6] = offset + 2*entity_indices[1][1] + 1;
    dofs[7] = offset + 2*entity_indices[1][2];
    dofs[8] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[9] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 4;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 5;
      dofs[3] = 6;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 7;
      dofs[3] = 8;
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
        dofs[1] = 4;
          break;
        }
      case 1:
        {
          dofs[0] = 5;
        dofs[1] = 6;
          break;
        }
      case 2:
        {
          dofs[0] = 7;
        dofs[1] = 8;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 9;
        break;
      }
    }
    
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3: public ufc::dofmap
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::signature() const
{
    return "FFC dofmap for VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2)";
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 2*num_global_entities[0] + 4*num_global_entities[1] + 2*num_global_entities[2];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::num_element_dofs() const
{
    return 20;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::num_facet_dofs() const
{
    return 8;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 2;
        break;
      }
    case 1:
      {
        return 4;
        break;
      }
    case 2:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + 2*entity_indices[1][0];
    dofs[4] = offset + 2*entity_indices[1][0] + 1;
    dofs[5] = offset + 2*entity_indices[1][1];
    dofs[6] = offset + 2*entity_indices[1][1] + 1;
    dofs[7] = offset + 2*entity_indices[1][2];
    dofs[8] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[9] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
    dofs[10] = offset + entity_indices[0][0];
    dofs[11] = offset + entity_indices[0][1];
    dofs[12] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[13] = offset + 2*entity_indices[1][0];
    dofs[14] = offset + 2*entity_indices[1][0] + 1;
    dofs[15] = offset + 2*entity_indices[1][1];
    dofs[16] = offset + 2*entity_indices[1][1] + 1;
    dofs[17] = offset + 2*entity_indices[1][2];
    dofs[18] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[19] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 4;
      dofs[4] = 11;
      dofs[5] = 12;
      dofs[6] = 13;
      dofs[7] = 14;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 5;
      dofs[3] = 6;
      dofs[4] = 10;
      dofs[5] = 12;
      dofs[6] = 15;
      dofs[7] = 16;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 7;
      dofs[3] = 8;
      dofs[4] = 10;
      dofs[5] = 11;
      dofs[6] = 17;
      dofs[7] = 18;
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
        dofs[1] = 10;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
        dofs[1] = 11;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
        dofs[1] = 12;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
        dofs[1] = 4;
        dofs[2] = 13;
        dofs[3] = 14;
          break;
        }
      case 1:
        {
          dofs[0] = 5;
        dofs[1] = 6;
        dofs[2] = 15;
        dofs[3] = 16;
          break;
        }
      case 2:
        {
          dofs[0] = 7;
        dofs[1] = 8;
        dofs[2] = 17;
        dofs[3] = 18;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 9;
      dofs[1] = 19;
        break;
      }
    }
    
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::num_sub_dofmaps() const
{
    return 2;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_2();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4: public ufc::dofmap
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::signature() const
{
    return "FFC dofmap for FiniteElement('Lagrange', triangle, 2)";
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return false;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return num_global_entities[0] + num_global_entities[1];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::num_element_dofs() const
{
    return 6;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::num_facet_dofs() const
{
    return 3;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 1;
        break;
      }
    case 1:
      {
        return 1;
        break;
      }
    case 2:
      {
        return 0;
        break;
      }
    }
    
    return 0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + entity_indices[1][0];
    dofs[4] = offset + entity_indices[1][1];
    dofs[5] = offset + entity_indices[1][2];
    offset += num_global_entities[1];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 4;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 5;
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
          break;
        }
      case 1:
        {
          dofs[0] = 4;
          break;
        }
      case 2:
        {
          dofs[0] = 5;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        
        break;
      }
    }
    
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::num_sub_dofmaps() const
{
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::create_sub_dofmap(std::size_t i) const
{
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5: public ufc::dofmap
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5() override;

  const char * signature() const final override;

  bool needs_mesh_entities(std::size_t d) const final override;

  std::size_t topological_dimension() const final override;

  std::size_t global_dimension(const std::vector<std::size_t>&
                               num_global_entities) const final override;

  std::size_t num_element_dofs() const final override;

  std::size_t num_facet_dofs() const final override;

  std::size_t num_entity_dofs(std::size_t d) const final override;

  void tabulate_dofs(std::size_t * dofs,
                     const std::vector<std::size_t>& num_global_entities,
                     const std::vector<std::vector<std::size_t>>& entity_indices) const final override;

  void tabulate_facet_dofs(std::size_t * dofs,
                           std::size_t facet) const final override;

  void tabulate_entity_dofs(std::size_t * dofs,
                            std::size_t d, std::size_t i) const final override;

  std::size_t num_sub_dofmaps() const final override;

  ufc::dofmap * create_sub_dofmap(std::size_t i) const final override;

  ufc::dofmap * create() const final override;

};

extern "C" DLL_EXPORT ufc::dofmap * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5() : ufc::dofmap()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::signature() const
{
    return "FFC dofmap for MixedElement(VectorElement(FiniteElement('Lagrange', triangle, 3), dim=2), FiniteElement('Lagrange', triangle, 2))";
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::needs_mesh_entities(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return true;
        break;
      }
    case 1:
      {
        return true;
        break;
      }
    case 2:
      {
        return true;
        break;
      }
    }
    
    return false;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::topological_dimension() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::global_dimension(const std::vector<std::size_t>&
                                            num_global_entities) const
{
    return 3*num_global_entities[0] + 5*num_global_entities[1] + 2*num_global_entities[2];
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::num_element_dofs() const
{
    return 26;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::num_facet_dofs() const
{
    return 11;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::num_entity_dofs(std::size_t d) const
{
    switch (d)
    {
    case 0:
      {
        return 3;
        break;
      }
    case 1:
      {
        return 5;
        break;
      }
    case 2:
      {
        return 2;
        break;
      }
    }
    
    return 0;
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::tabulate_dofs(std::size_t * dofs,
                                  const std::vector<std::size_t>& num_global_entities,
                                  const std::vector<std::vector<std::size_t>>& entity_indices) const
{
    unsigned int offset = 0;
    dofs[0] = offset + entity_indices[0][0];
    dofs[1] = offset + entity_indices[0][1];
    dofs[2] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[3] = offset + 2*entity_indices[1][0];
    dofs[4] = offset + 2*entity_indices[1][0] + 1;
    dofs[5] = offset + 2*entity_indices[1][1];
    dofs[6] = offset + 2*entity_indices[1][1] + 1;
    dofs[7] = offset + 2*entity_indices[1][2];
    dofs[8] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[9] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
    dofs[10] = offset + entity_indices[0][0];
    dofs[11] = offset + entity_indices[0][1];
    dofs[12] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[13] = offset + 2*entity_indices[1][0];
    dofs[14] = offset + 2*entity_indices[1][0] + 1;
    dofs[15] = offset + 2*entity_indices[1][1];
    dofs[16] = offset + 2*entity_indices[1][1] + 1;
    dofs[17] = offset + 2*entity_indices[1][2];
    dofs[18] = offset + 2*entity_indices[1][2] + 1;
    offset += 2*num_global_entities[1];
    dofs[19] = offset + entity_indices[2][0];
    offset += num_global_entities[2];
    dofs[20] = offset + entity_indices[0][0];
    dofs[21] = offset + entity_indices[0][1];
    dofs[22] = offset + entity_indices[0][2];
    offset += num_global_entities[0];
    dofs[23] = offset + entity_indices[1][0];
    dofs[24] = offset + entity_indices[1][1];
    dofs[25] = offset + entity_indices[1][2];
    offset += num_global_entities[1];
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::tabulate_facet_dofs(std::size_t * dofs,
                                        std::size_t facet) const
{
    switch (facet)
    {
    case 0:
      {
        dofs[0] = 1;
      dofs[1] = 2;
      dofs[2] = 3;
      dofs[3] = 4;
      dofs[4] = 11;
      dofs[5] = 12;
      dofs[6] = 13;
      dofs[7] = 14;
      dofs[8] = 21;
      dofs[9] = 22;
      dofs[10] = 23;
        break;
      }
    case 1:
      {
        dofs[0] = 0;
      dofs[1] = 2;
      dofs[2] = 5;
      dofs[3] = 6;
      dofs[4] = 10;
      dofs[5] = 12;
      dofs[6] = 15;
      dofs[7] = 16;
      dofs[8] = 20;
      dofs[9] = 22;
      dofs[10] = 24;
        break;
      }
    case 2:
      {
        dofs[0] = 0;
      dofs[1] = 1;
      dofs[2] = 7;
      dofs[3] = 8;
      dofs[4] = 10;
      dofs[5] = 11;
      dofs[6] = 17;
      dofs[7] = 18;
      dofs[8] = 20;
      dofs[9] = 21;
      dofs[10] = 25;
        break;
      }
    }
    
}

void ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::tabulate_entity_dofs(std::size_t * dofs,
                                  std::size_t d, std::size_t i) const
{
    if (d > 2)
    {
    throw std::runtime_error("d is larger than dimension (2)");
    }
    
    switch (d)
    {
    case 0:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 0;
        dofs[1] = 10;
        dofs[2] = 20;
          break;
        }
      case 1:
        {
          dofs[0] = 1;
        dofs[1] = 11;
        dofs[2] = 21;
          break;
        }
      case 2:
        {
          dofs[0] = 2;
        dofs[1] = 12;
        dofs[2] = 22;
          break;
        }
      }
      
        break;
      }
    case 1:
      {
        if (i > 2)
      {
      throw std::runtime_error("i is larger than number of entities (2)");
      }
      
      switch (i)
      {
      case 0:
        {
          dofs[0] = 3;
        dofs[1] = 4;
        dofs[2] = 13;
        dofs[3] = 14;
        dofs[4] = 23;
          break;
        }
      case 1:
        {
          dofs[0] = 5;
        dofs[1] = 6;
        dofs[2] = 15;
        dofs[3] = 16;
        dofs[4] = 24;
          break;
        }
      case 2:
        {
          dofs[0] = 7;
        dofs[1] = 8;
        dofs[2] = 17;
        dofs[3] = 18;
        dofs[4] = 25;
          break;
        }
      }
      
        break;
      }
    case 2:
      {
        if (i > 0)
      {
      throw std::runtime_error("i is larger than number of entities (0)");
      }
      
      dofs[0] = 9;
      dofs[1] = 19;
        break;
      }
    }
    
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::num_sub_dofmaps() const
{
    return 2;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::create_sub_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_3();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_4();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5::create() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5();
}


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_cell_integral_0_otherwise: public ufc::cell_integral
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_cell_integral_0_otherwise() : ufc::cell_integral()
  {
    
  }

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_cell_integral_0_otherwise() override
  {
    
  }

  const std::vector<bool> & enabled_coefficients() const final override
  {
    static const std::vector<bool> enabled({true, true});
    return enabled;
  }

  void tabulate_tensor(double * A,
                       const double * const * w,
                       const double * coordinate_dofs,
                       int cell_orientation) const final override
  {
    // Number of operations (multiply-add pairs) for Jacobian data:      3
    // Number of operations (multiply-add pairs) for geometry tensor:    4318
    // Number of operations (multiply-add pairs) for tensor contraction: 19294
    // Total number of operations (multiply-add pairs):                  23615
    
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    // Set scale factor
    const double det = std::abs(detJ);
    
    // Compute geometry tensor
    const double G0_0_0_0 = det*w[0][0]*K[0]*K[1]*(1.0);
    const double G0_0_0_1 = det*w[0][0]*K[0]*K[3]*(1.0);
    const double G0_0_1_0 = det*w[0][1]*K[0]*K[1]*(1.0);
    const double G0_0_2_1 = det*w[0][2]*K[0]*K[3]*(1.0);
    const double G0_0_3_0 = det*w[0][3]*K[0]*K[1]*(1.0);
    const double G0_0_3_1 = det*w[0][3]*K[0]*K[3]*(1.0);
    const double G0_0_4_0 = det*w[0][4]*K[0]*K[1]*(1.0);
    const double G0_0_4_1 = det*w[0][4]*K[0]*K[3]*(1.0);
    const double G0_0_5_0 = det*w[0][5]*K[0]*K[1]*(1.0);
    const double G0_0_5_1 = det*w[0][5]*K[0]*K[3]*(1.0);
    const double G0_0_6_0 = det*w[0][6]*K[0]*K[1]*(1.0);
    const double G0_0_6_1 = det*w[0][6]*K[0]*K[3]*(1.0);
    const double G0_0_7_0 = det*w[0][7]*K[0]*K[1]*(1.0);
    const double G0_0_7_1 = det*w[0][7]*K[0]*K[3]*(1.0);
    const double G0_0_8_0 = det*w[0][8]*K[0]*K[1]*(1.0);
    const double G0_0_8_1 = det*w[0][8]*K[0]*K[3]*(1.0);
    const double G0_0_9_0 = det*w[0][9]*K[0]*K[1]*(1.0);
    const double G0_0_9_1 = det*w[0][9]*K[0]*K[3]*(1.0);
    const double G0_1_0_0 = det*w[0][0]*K[2]*K[1]*(1.0);
    const double G0_1_0_1 = det*w[0][0]*K[2]*K[3]*(1.0);
    const double G0_1_1_0 = det*w[0][1]*K[2]*K[1]*(1.0);
    const double G0_1_2_1 = det*w[0][2]*K[2]*K[3]*(1.0);
    const double G0_1_3_0 = det*w[0][3]*K[2]*K[1]*(1.0);
    const double G0_1_3_1 = det*w[0][3]*K[2]*K[3]*(1.0);
    const double G0_1_4_0 = det*w[0][4]*K[2]*K[1]*(1.0);
    const double G0_1_4_1 = det*w[0][4]*K[2]*K[3]*(1.0);
    const double G0_1_5_0 = det*w[0][5]*K[2]*K[1]*(1.0);
    const double G0_1_5_1 = det*w[0][5]*K[2]*K[3]*(1.0);
    const double G0_1_6_0 = det*w[0][6]*K[2]*K[1]*(1.0);
    const double G0_1_6_1 = det*w[0][6]*K[2]*K[3]*(1.0);
    const double G0_1_7_0 = det*w[0][7]*K[2]*K[1]*(1.0);
    const double G0_1_7_1 = det*w[0][7]*K[2]*K[3]*(1.0);
    const double G0_1_8_0 = det*w[0][8]*K[2]*K[1]*(1.0);
    const double G0_1_8_1 = det*w[0][8]*K[2]*K[3]*(1.0);
    const double G0_1_9_0 = det*w[0][9]*K[2]*K[1]*(1.0);
    const double G0_1_9_1 = det*w[0][9]*K[2]*K[3]*(1.0);
    const double G1_0_10_0 = det*w[0][10]*K[0]*K[0]*(1.0);
    const double G1_0_10_1 = det*w[0][10]*K[0]*K[2]*(1.0);
    const double G1_0_11_0 = det*w[0][11]*K[0]*K[0]*(1.0);
    const double G1_0_12_1 = det*w[0][12]*K[0]*K[2]*(1.0);
    const double G1_0_13_0 = det*w[0][13]*K[0]*K[0]*(1.0);
    const double G1_0_13_1 = det*w[0][13]*K[0]*K[2]*(1.0);
    const double G1_0_14_0 = det*w[0][14]*K[0]*K[0]*(1.0);
    const double G1_0_14_1 = det*w[0][14]*K[0]*K[2]*(1.0);
    const double G1_0_15_0 = det*w[0][15]*K[0]*K[0]*(1.0);
    const double G1_0_15_1 = det*w[0][15]*K[0]*K[2]*(1.0);
    const double G1_0_16_0 = det*w[0][16]*K[0]*K[0]*(1.0);
    const double G1_0_16_1 = det*w[0][16]*K[0]*K[2]*(1.0);
    const double G1_0_17_0 = det*w[0][17]*K[0]*K[0]*(1.0);
    const double G1_0_17_1 = det*w[0][17]*K[0]*K[2]*(1.0);
    const double G1_0_18_0 = det*w[0][18]*K[0]*K[0]*(1.0);
    const double G1_0_18_1 = det*w[0][18]*K[0]*K[2]*(1.0);
    const double G1_0_19_0 = det*w[0][19]*K[0]*K[0]*(1.0);
    const double G1_0_19_1 = det*w[0][19]*K[0]*K[2]*(1.0);
    const double G1_1_10_0 = det*w[0][10]*K[2]*K[0]*(1.0);
    const double G1_1_10_1 = det*w[0][10]*K[2]*K[2]*(1.0);
    const double G1_1_11_0 = det*w[0][11]*K[2]*K[0]*(1.0);
    const double G1_1_12_1 = det*w[0][12]*K[2]*K[2]*(1.0);
    const double G1_1_13_0 = det*w[0][13]*K[2]*K[0]*(1.0);
    const double G1_1_13_1 = det*w[0][13]*K[2]*K[2]*(1.0);
    const double G1_1_14_0 = det*w[0][14]*K[2]*K[0]*(1.0);
    const double G1_1_14_1 = det*w[0][14]*K[2]*K[2]*(1.0);
    const double G1_1_15_0 = det*w[0][15]*K[2]*K[0]*(1.0);
    const double G1_1_15_1 = det*w[0][15]*K[2]*K[2]*(1.0);
    const double G1_1_16_0 = det*w[0][16]*K[2]*K[0]*(1.0);
    const double G1_1_16_1 = det*w[0][16]*K[2]*K[2]*(1.0);
    const double G1_1_17_0 = det*w[0][17]*K[2]*K[0]*(1.0);
    const double G1_1_17_1 = det*w[0][17]*K[2]*K[2]*(1.0);
    const double G1_1_18_0 = det*w[0][18]*K[2]*K[0]*(1.0);
    const double G1_1_18_1 = det*w[0][18]*K[2]*K[2]*(1.0);
    const double G1_1_19_0 = det*w[0][19]*K[2]*K[0]*(1.0);
    const double G1_1_19_1 = det*w[0][19]*K[2]*K[2]*(1.0);
    const double G2_0_0_0 = det*w[1][0]*K[0]*K[1]*(1.0);
    const double G2_0_0_1 = det*w[1][0]*K[0]*K[3]*(1.0);
    const double G2_0_1_0 = det*w[1][1]*K[0]*K[1]*(1.0);
    const double G2_0_2_1 = det*w[1][2]*K[0]*K[3]*(1.0);
    const double G2_0_3_0 = det*w[1][3]*K[0]*K[1]*(1.0);
    const double G2_0_3_1 = det*w[1][3]*K[0]*K[3]*(1.0);
    const double G2_0_4_0 = det*w[1][4]*K[0]*K[1]*(1.0);
    const double G2_0_4_1 = det*w[1][4]*K[0]*K[3]*(1.0);
    const double G2_0_5_0 = det*w[1][5]*K[0]*K[1]*(1.0);
    const double G2_0_5_1 = det*w[1][5]*K[0]*K[3]*(1.0);
    const double G2_0_6_0 = det*w[1][6]*K[0]*K[1]*(1.0);
    const double G2_0_6_1 = det*w[1][6]*K[0]*K[3]*(1.0);
    const double G2_0_7_0 = det*w[1][7]*K[0]*K[1]*(1.0);
    const double G2_0_7_1 = det*w[1][7]*K[0]*K[3]*(1.0);
    const double G2_0_8_0 = det*w[1][8]*K[0]*K[1]*(1.0);
    const double G2_0_8_1 = det*w[1][8]*K[0]*K[3]*(1.0);
    const double G2_0_9_0 = det*w[1][9]*K[0]*K[1]*(1.0);
    const double G2_0_9_1 = det*w[1][9]*K[0]*K[3]*(1.0);
    const double G2_1_0_0 = det*w[1][0]*K[2]*K[1]*(1.0);
    const double G2_1_0_1 = det*w[1][0]*K[2]*K[3]*(1.0);
    const double G2_1_1_0 = det*w[1][1]*K[2]*K[1]*(1.0);
    const double G2_1_2_1 = det*w[1][2]*K[2]*K[3]*(1.0);
    const double G2_1_3_0 = det*w[1][3]*K[2]*K[1]*(1.0);
    const double G2_1_3_1 = det*w[1][3]*K[2]*K[3]*(1.0);
    const double G2_1_4_0 = det*w[1][4]*K[2]*K[1]*(1.0);
    const double G2_1_4_1 = det*w[1][4]*K[2]*K[3]*(1.0);
    const double G2_1_5_0 = det*w[1][5]*K[2]*K[1]*(1.0);
    const double G2_1_5_1 = det*w[1][5]*K[2]*K[3]*(1.0);
    const double G2_1_6_0 = det*w[1][6]*K[2]*K[1]*(1.0);
    const double G2_1_6_1 = det*w[1][6]*K[2]*K[3]*(1.0);
    const double G2_1_7_0 = det*w[1][7]*K[2]*K[1]*(1.0);
    const double G2_1_7_1 = det*w[1][7]*K[2]*K[3]*(1.0);
    const double G2_1_8_0 = det*w[1][8]*K[2]*K[1]*(1.0);
    const double G2_1_8_1 = det*w[1][8]*K[2]*K[3]*(1.0);
    const double G2_1_9_0 = det*w[1][9]*K[2]*K[1]*(1.0);
    const double G2_1_9_1 = det*w[1][9]*K[2]*K[3]*(1.0);
    const double G3_0_10_0 = det*w[1][10]*K[0]*K[0]*(1.0);
    const double G3_0_10_1 = det*w[1][10]*K[0]*K[2]*(1.0);
    const double G3_0_11_0 = det*w[1][11]*K[0]*K[0]*(1.0);
    const double G3_0_12_1 = det*w[1][12]*K[0]*K[2]*(1.0);
    const double G3_0_13_0 = det*w[1][13]*K[0]*K[0]*(1.0);
    const double G3_0_13_1 = det*w[1][13]*K[0]*K[2]*(1.0);
    const double G3_0_14_0 = det*w[1][14]*K[0]*K[0]*(1.0);
    const double G3_0_14_1 = det*w[1][14]*K[0]*K[2]*(1.0);
    const double G3_0_15_0 = det*w[1][15]*K[0]*K[0]*(1.0);
    const double G3_0_15_1 = det*w[1][15]*K[0]*K[2]*(1.0);
    const double G3_0_16_0 = det*w[1][16]*K[0]*K[0]*(1.0);
    const double G3_0_16_1 = det*w[1][16]*K[0]*K[2]*(1.0);
    const double G3_0_17_0 = det*w[1][17]*K[0]*K[0]*(1.0);
    const double G3_0_17_1 = det*w[1][17]*K[0]*K[2]*(1.0);
    const double G3_0_18_0 = det*w[1][18]*K[0]*K[0]*(1.0);
    const double G3_0_18_1 = det*w[1][18]*K[0]*K[2]*(1.0);
    const double G3_0_19_0 = det*w[1][19]*K[0]*K[0]*(1.0);
    const double G3_0_19_1 = det*w[1][19]*K[0]*K[2]*(1.0);
    const double G3_1_10_0 = det*w[1][10]*K[2]*K[0]*(1.0);
    const double G3_1_10_1 = det*w[1][10]*K[2]*K[2]*(1.0);
    const double G3_1_11_0 = det*w[1][11]*K[2]*K[0]*(1.0);
    const double G3_1_12_1 = det*w[1][12]*K[2]*K[2]*(1.0);
    const double G3_1_13_0 = det*w[1][13]*K[2]*K[0]*(1.0);
    const double G3_1_13_1 = det*w[1][13]*K[2]*K[2]*(1.0);
    const double G3_1_14_0 = det*w[1][14]*K[2]*K[0]*(1.0);
    const double G3_1_14_1 = det*w[1][14]*K[2]*K[2]*(1.0);
    const double G3_1_15_0 = det*w[1][15]*K[2]*K[0]*(1.0);
    const double G3_1_15_1 = det*w[1][15]*K[2]*K[2]*(1.0);
    const double G3_1_16_0 = det*w[1][16]*K[2]*K[0]*(1.0);
    const double G3_1_16_1 = det*w[1][16]*K[2]*K[2]*(1.0);
    const double G3_1_17_0 = det*w[1][17]*K[2]*K[0]*(1.0);
    const double G3_1_17_1 = det*w[1][17]*K[2]*K[2]*(1.0);
    const double G3_1_18_0 = det*w[1][18]*K[2]*K[0]*(1.0);
    const double G3_1_18_1 = det*w[1][18]*K[2]*K[2]*(1.0);
    const double G3_1_19_0 = det*w[1][19]*K[2]*K[0]*(1.0);
    const double G3_1_19_1 = det*w[1][19]*K[2]*K[2]*(1.0);
    const double G4_0_0_0 = det*w[0][0]*K[0]*K[0]*(1.0);
    const double G4_0_0_1 = det*w[0][0]*K[0]*K[2]*(1.0);
    const double G4_0_1_0 = det*w[0][1]*K[0]*K[0]*(1.0);
    const double G4_0_2_1 = det*w[0][2]*K[0]*K[2]*(1.0);
    const double G4_0_3_0 = det*w[0][3]*K[0]*K[0]*(1.0);
    const double G4_0_3_1 = det*w[0][3]*K[0]*K[2]*(1.0);
    const double G4_0_4_0 = det*w[0][4]*K[0]*K[0]*(1.0);
    const double G4_0_4_1 = det*w[0][4]*K[0]*K[2]*(1.0);
    const double G4_0_5_0 = det*w[0][5]*K[0]*K[0]*(1.0);
    const double G4_0_5_1 = det*w[0][5]*K[0]*K[2]*(1.0);
    const double G4_0_6_0 = det*w[0][6]*K[0]*K[0]*(1.0);
    const double G4_0_6_1 = det*w[0][6]*K[0]*K[2]*(1.0);
    const double G4_0_7_0 = det*w[0][7]*K[0]*K[0]*(1.0);
    const double G4_0_7_1 = det*w[0][7]*K[0]*K[2]*(1.0);
    const double G4_0_8_0 = det*w[0][8]*K[0]*K[0]*(1.0);
    const double G4_0_8_1 = det*w[0][8]*K[0]*K[2]*(1.0);
    const double G4_0_9_0 = det*w[0][9]*K[0]*K[0]*(1.0);
    const double G4_0_9_1 = det*w[0][9]*K[0]*K[2]*(1.0);
    const double G4_1_0_0 = det*w[0][0]*K[2]*K[0]*(1.0);
    const double G4_1_0_1 = det*w[0][0]*K[2]*K[2]*(1.0);
    const double G4_1_1_0 = det*w[0][1]*K[2]*K[0]*(1.0);
    const double G4_1_2_1 = det*w[0][2]*K[2]*K[2]*(1.0);
    const double G4_1_3_0 = det*w[0][3]*K[2]*K[0]*(1.0);
    const double G4_1_3_1 = det*w[0][3]*K[2]*K[2]*(1.0);
    const double G4_1_4_0 = det*w[0][4]*K[2]*K[0]*(1.0);
    const double G4_1_4_1 = det*w[0][4]*K[2]*K[2]*(1.0);
    const double G4_1_5_0 = det*w[0][5]*K[2]*K[0]*(1.0);
    const double G4_1_5_1 = det*w[0][5]*K[2]*K[2]*(1.0);
    const double G4_1_6_0 = det*w[0][6]*K[2]*K[0]*(1.0);
    const double G4_1_6_1 = det*w[0][6]*K[2]*K[2]*(1.0);
    const double G4_1_7_0 = det*w[0][7]*K[2]*K[0]*(1.0);
    const double G4_1_7_1 = det*w[0][7]*K[2]*K[2]*(1.0);
    const double G4_1_8_0 = det*w[0][8]*K[2]*K[0]*(1.0);
    const double G4_1_8_1 = det*w[0][8]*K[2]*K[2]*(1.0);
    const double G4_1_9_0 = det*w[0][9]*K[2]*K[0]*(1.0);
    const double G4_1_9_1 = det*w[0][9]*K[2]*K[2]*(1.0);
    const double G5_0_0_0 = det*w[0][0]*K[0]*K[0]*(1.0);
    const double G5_0_0_1 = det*w[0][0]*K[0]*K[2]*(1.0);
    const double G5_0_1_0 = det*w[0][1]*K[0]*K[0]*(1.0);
    const double G5_0_2_1 = det*w[0][2]*K[0]*K[2]*(1.0);
    const double G5_0_3_0 = det*w[0][3]*K[0]*K[0]*(1.0);
    const double G5_0_3_1 = det*w[0][3]*K[0]*K[2]*(1.0);
    const double G5_0_4_0 = det*w[0][4]*K[0]*K[0]*(1.0);
    const double G5_0_4_1 = det*w[0][4]*K[0]*K[2]*(1.0);
    const double G5_0_5_0 = det*w[0][5]*K[0]*K[0]*(1.0);
    const double G5_0_5_1 = det*w[0][5]*K[0]*K[2]*(1.0);
    const double G5_0_6_0 = det*w[0][6]*K[0]*K[0]*(1.0);
    const double G5_0_6_1 = det*w[0][6]*K[0]*K[2]*(1.0);
    const double G5_0_7_0 = det*w[0][7]*K[0]*K[0]*(1.0);
    const double G5_0_7_1 = det*w[0][7]*K[0]*K[2]*(1.0);
    const double G5_0_8_0 = det*w[0][8]*K[0]*K[0]*(1.0);
    const double G5_0_8_1 = det*w[0][8]*K[0]*K[2]*(1.0);
    const double G5_0_9_0 = det*w[0][9]*K[0]*K[0]*(1.0);
    const double G5_0_9_1 = det*w[0][9]*K[0]*K[2]*(1.0);
    const double G5_1_0_0 = det*w[0][0]*K[2]*K[0]*(1.0);
    const double G5_1_0_1 = det*w[0][0]*K[2]*K[2]*(1.0);
    const double G5_1_1_0 = det*w[0][1]*K[2]*K[0]*(1.0);
    const double G5_1_2_1 = det*w[0][2]*K[2]*K[2]*(1.0);
    const double G5_1_3_0 = det*w[0][3]*K[2]*K[0]*(1.0);
    const double G5_1_3_1 = det*w[0][3]*K[2]*K[2]*(1.0);
    const double G5_1_4_0 = det*w[0][4]*K[2]*K[0]*(1.0);
    const double G5_1_4_1 = det*w[0][4]*K[2]*K[2]*(1.0);
    const double G5_1_5_0 = det*w[0][5]*K[2]*K[0]*(1.0);
    const double G5_1_5_1 = det*w[0][5]*K[2]*K[2]*(1.0);
    const double G5_1_6_0 = det*w[0][6]*K[2]*K[0]*(1.0);
    const double G5_1_6_1 = det*w[0][6]*K[2]*K[2]*(1.0);
    const double G5_1_7_0 = det*w[0][7]*K[2]*K[0]*(1.0);
    const double G5_1_7_1 = det*w[0][7]*K[2]*K[2]*(1.0);
    const double G5_1_8_0 = det*w[0][8]*K[2]*K[0]*(1.0);
    const double G5_1_8_1 = det*w[0][8]*K[2]*K[2]*(1.0);
    const double G5_1_9_0 = det*w[0][9]*K[2]*K[0]*(1.0);
    const double G5_1_9_1 = det*w[0][9]*K[2]*K[2]*(1.0);
    const double G6_0_20 = det*w[0][20]*K[0]*(1.0);
    const double G6_0_21 = det*w[0][21]*K[0]*(1.0);
    const double G6_0_22 = det*w[0][22]*K[0]*(1.0);
    const double G6_0_23 = det*w[0][23]*K[0]*(1.0);
    const double G6_0_24 = det*w[0][24]*K[0]*(1.0);
    const double G6_0_25 = det*w[0][25]*K[0]*(1.0);
    const double G6_1_20 = det*w[0][20]*K[2]*(1.0);
    const double G6_1_21 = det*w[0][21]*K[2]*(1.0);
    const double G6_1_22 = det*w[0][22]*K[2]*(1.0);
    const double G6_1_23 = det*w[0][23]*K[2]*(1.0);
    const double G6_1_24 = det*w[0][24]*K[2]*(1.0);
    const double G6_1_25 = det*w[0][25]*K[2]*(1.0);
    const double G7_0_0_0 = det*w[1][0]*K[0]*K[0]*(1.0);
    const double G7_0_0_1 = det*w[1][0]*K[0]*K[2]*(1.0);
    const double G7_0_1_0 = det*w[1][1]*K[0]*K[0]*(1.0);
    const double G7_0_2_1 = det*w[1][2]*K[0]*K[2]*(1.0);
    const double G7_0_3_0 = det*w[1][3]*K[0]*K[0]*(1.0);
    const double G7_0_3_1 = det*w[1][3]*K[0]*K[2]*(1.0);
    const double G7_0_4_0 = det*w[1][4]*K[0]*K[0]*(1.0);
    const double G7_0_4_1 = det*w[1][4]*K[0]*K[2]*(1.0);
    const double G7_0_5_0 = det*w[1][5]*K[0]*K[0]*(1.0);
    const double G7_0_5_1 = det*w[1][5]*K[0]*K[2]*(1.0);
    const double G7_0_6_0 = det*w[1][6]*K[0]*K[0]*(1.0);
    const double G7_0_6_1 = det*w[1][6]*K[0]*K[2]*(1.0);
    const double G7_0_7_0 = det*w[1][7]*K[0]*K[0]*(1.0);
    const double G7_0_7_1 = det*w[1][7]*K[0]*K[2]*(1.0);
    const double G7_0_8_0 = det*w[1][8]*K[0]*K[0]*(1.0);
    const double G7_0_8_1 = det*w[1][8]*K[0]*K[2]*(1.0);
    const double G7_0_9_0 = det*w[1][9]*K[0]*K[0]*(1.0);
    const double G7_0_9_1 = det*w[1][9]*K[0]*K[2]*(1.0);
    const double G7_1_0_0 = det*w[1][0]*K[2]*K[0]*(1.0);
    const double G7_1_0_1 = det*w[1][0]*K[2]*K[2]*(1.0);
    const double G7_1_1_0 = det*w[1][1]*K[2]*K[0]*(1.0);
    const double G7_1_2_1 = det*w[1][2]*K[2]*K[2]*(1.0);
    const double G7_1_3_0 = det*w[1][3]*K[2]*K[0]*(1.0);
    const double G7_1_3_1 = det*w[1][3]*K[2]*K[2]*(1.0);
    const double G7_1_4_0 = det*w[1][4]*K[2]*K[0]*(1.0);
    const double G7_1_4_1 = det*w[1][4]*K[2]*K[2]*(1.0);
    const double G7_1_5_0 = det*w[1][5]*K[2]*K[0]*(1.0);
    const double G7_1_5_1 = det*w[1][5]*K[2]*K[2]*(1.0);
    const double G7_1_6_0 = det*w[1][6]*K[2]*K[0]*(1.0);
    const double G7_1_6_1 = det*w[1][6]*K[2]*K[2]*(1.0);
    const double G7_1_7_0 = det*w[1][7]*K[2]*K[0]*(1.0);
    const double G7_1_7_1 = det*w[1][7]*K[2]*K[2]*(1.0);
    const double G7_1_8_0 = det*w[1][8]*K[2]*K[0]*(1.0);
    const double G7_1_8_1 = det*w[1][8]*K[2]*K[2]*(1.0);
    const double G7_1_9_0 = det*w[1][9]*K[2]*K[0]*(1.0);
    const double G7_1_9_1 = det*w[1][9]*K[2]*K[2]*(1.0);
    const double G8_0_0_0 = det*w[1][0]*K[0]*K[0]*(1.0);
    const double G8_0_0_1 = det*w[1][0]*K[0]*K[2]*(1.0);
    const double G8_0_1_0 = det*w[1][1]*K[0]*K[0]*(1.0);
    const double G8_0_2_1 = det*w[1][2]*K[0]*K[2]*(1.0);
    const double G8_0_3_0 = det*w[1][3]*K[0]*K[0]*(1.0);
    const double G8_0_3_1 = det*w[1][3]*K[0]*K[2]*(1.0);
    const double G8_0_4_0 = det*w[1][4]*K[0]*K[0]*(1.0);
    const double G8_0_4_1 = det*w[1][4]*K[0]*K[2]*(1.0);
    const double G8_0_5_0 = det*w[1][5]*K[0]*K[0]*(1.0);
    const double G8_0_5_1 = det*w[1][5]*K[0]*K[2]*(1.0);
    const double G8_0_6_0 = det*w[1][6]*K[0]*K[0]*(1.0);
    const double G8_0_6_1 = det*w[1][6]*K[0]*K[2]*(1.0);
    const double G8_0_7_0 = det*w[1][7]*K[0]*K[0]*(1.0);
    const double G8_0_7_1 = det*w[1][7]*K[0]*K[2]*(1.0);
    const double G8_0_8_0 = det*w[1][8]*K[0]*K[0]*(1.0);
    const double G8_0_8_1 = det*w[1][8]*K[0]*K[2]*(1.0);
    const double G8_0_9_0 = det*w[1][9]*K[0]*K[0]*(1.0);
    const double G8_0_9_1 = det*w[1][9]*K[0]*K[2]*(1.0);
    const double G8_1_0_0 = det*w[1][0]*K[2]*K[0]*(1.0);
    const double G8_1_0_1 = det*w[1][0]*K[2]*K[2]*(1.0);
    const double G8_1_1_0 = det*w[1][1]*K[2]*K[0]*(1.0);
    const double G8_1_2_1 = det*w[1][2]*K[2]*K[2]*(1.0);
    const double G8_1_3_0 = det*w[1][3]*K[2]*K[0]*(1.0);
    const double G8_1_3_1 = det*w[1][3]*K[2]*K[2]*(1.0);
    const double G8_1_4_0 = det*w[1][4]*K[2]*K[0]*(1.0);
    const double G8_1_4_1 = det*w[1][4]*K[2]*K[2]*(1.0);
    const double G8_1_5_0 = det*w[1][5]*K[2]*K[0]*(1.0);
    const double G8_1_5_1 = det*w[1][5]*K[2]*K[2]*(1.0);
    const double G8_1_6_0 = det*w[1][6]*K[2]*K[0]*(1.0);
    const double G8_1_6_1 = det*w[1][6]*K[2]*K[2]*(1.0);
    const double G8_1_7_0 = det*w[1][7]*K[2]*K[0]*(1.0);
    const double G8_1_7_1 = det*w[1][7]*K[2]*K[2]*(1.0);
    const double G8_1_8_0 = det*w[1][8]*K[2]*K[0]*(1.0);
    const double G8_1_8_1 = det*w[1][8]*K[2]*K[2]*(1.0);
    const double G8_1_9_0 = det*w[1][9]*K[2]*K[0]*(1.0);
    const double G8_1_9_1 = det*w[1][9]*K[2]*K[2]*(1.0);
    const double G9_0_20 = det*w[1][20]*K[0]*(1.0);
    const double G9_0_21 = det*w[1][21]*K[0]*(1.0);
    const double G9_0_22 = det*w[1][22]*K[0]*(1.0);
    const double G9_0_23 = det*w[1][23]*K[0]*(1.0);
    const double G9_0_24 = det*w[1][24]*K[0]*(1.0);
    const double G9_0_25 = det*w[1][25]*K[0]*(1.0);
    const double G9_1_20 = det*w[1][20]*K[2]*(1.0);
    const double G9_1_21 = det*w[1][21]*K[2]*(1.0);
    const double G9_1_22 = det*w[1][22]*K[2]*(1.0);
    const double G9_1_23 = det*w[1][23]*K[2]*(1.0);
    const double G9_1_24 = det*w[1][24]*K[2]*(1.0);
    const double G9_1_25 = det*w[1][25]*K[2]*(1.0);
    const double G10_0_0_0 = det*w[0][0]*K[1]*K[1]*(1.0);
    const double G10_0_0_1 = det*w[0][0]*K[1]*K[3]*(1.0);
    const double G10_0_1_0 = det*w[0][1]*K[1]*K[1]*(1.0);
    const double G10_0_2_1 = det*w[0][2]*K[1]*K[3]*(1.0);
    const double G10_0_3_0 = det*w[0][3]*K[1]*K[1]*(1.0);
    const double G10_0_3_1 = det*w[0][3]*K[1]*K[3]*(1.0);
    const double G10_0_4_0 = det*w[0][4]*K[1]*K[1]*(1.0);
    const double G10_0_4_1 = det*w[0][4]*K[1]*K[3]*(1.0);
    const double G10_0_5_0 = det*w[0][5]*K[1]*K[1]*(1.0);
    const double G10_0_5_1 = det*w[0][5]*K[1]*K[3]*(1.0);
    const double G10_0_6_0 = det*w[0][6]*K[1]*K[1]*(1.0);
    const double G10_0_6_1 = det*w[0][6]*K[1]*K[3]*(1.0);
    const double G10_0_7_0 = det*w[0][7]*K[1]*K[1]*(1.0);
    const double G10_0_7_1 = det*w[0][7]*K[1]*K[3]*(1.0);
    const double G10_0_8_0 = det*w[0][8]*K[1]*K[1]*(1.0);
    const double G10_0_8_1 = det*w[0][8]*K[1]*K[3]*(1.0);
    const double G10_0_9_0 = det*w[0][9]*K[1]*K[1]*(1.0);
    const double G10_0_9_1 = det*w[0][9]*K[1]*K[3]*(1.0);
    const double G10_1_0_0 = det*w[0][0]*K[3]*K[1]*(1.0);
    const double G10_1_0_1 = det*w[0][0]*K[3]*K[3]*(1.0);
    const double G10_1_1_0 = det*w[0][1]*K[3]*K[1]*(1.0);
    const double G10_1_2_1 = det*w[0][2]*K[3]*K[3]*(1.0);
    const double G10_1_3_0 = det*w[0][3]*K[3]*K[1]*(1.0);
    const double G10_1_3_1 = det*w[0][3]*K[3]*K[3]*(1.0);
    const double G10_1_4_0 = det*w[0][4]*K[3]*K[1]*(1.0);
    const double G10_1_4_1 = det*w[0][4]*K[3]*K[3]*(1.0);
    const double G10_1_5_0 = det*w[0][5]*K[3]*K[1]*(1.0);
    const double G10_1_5_1 = det*w[0][5]*K[3]*K[3]*(1.0);
    const double G10_1_6_0 = det*w[0][6]*K[3]*K[1]*(1.0);
    const double G10_1_6_1 = det*w[0][6]*K[3]*K[3]*(1.0);
    const double G10_1_7_0 = det*w[0][7]*K[3]*K[1]*(1.0);
    const double G10_1_7_1 = det*w[0][7]*K[3]*K[3]*(1.0);
    const double G10_1_8_0 = det*w[0][8]*K[3]*K[1]*(1.0);
    const double G10_1_8_1 = det*w[0][8]*K[3]*K[3]*(1.0);
    const double G10_1_9_0 = det*w[0][9]*K[3]*K[1]*(1.0);
    const double G10_1_9_1 = det*w[0][9]*K[3]*K[3]*(1.0);
    const double G11_0_10_0 = det*w[0][10]*K[1]*K[0]*(1.0);
    const double G11_0_10_1 = det*w[0][10]*K[1]*K[2]*(1.0);
    const double G11_0_11_0 = det*w[0][11]*K[1]*K[0]*(1.0);
    const double G11_0_12_1 = det*w[0][12]*K[1]*K[2]*(1.0);
    const double G11_0_13_0 = det*w[0][13]*K[1]*K[0]*(1.0);
    const double G11_0_13_1 = det*w[0][13]*K[1]*K[2]*(1.0);
    const double G11_0_14_0 = det*w[0][14]*K[1]*K[0]*(1.0);
    const double G11_0_14_1 = det*w[0][14]*K[1]*K[2]*(1.0);
    const double G11_0_15_0 = det*w[0][15]*K[1]*K[0]*(1.0);
    const double G11_0_15_1 = det*w[0][15]*K[1]*K[2]*(1.0);
    const double G11_0_16_0 = det*w[0][16]*K[1]*K[0]*(1.0);
    const double G11_0_16_1 = det*w[0][16]*K[1]*K[2]*(1.0);
    const double G11_0_17_0 = det*w[0][17]*K[1]*K[0]*(1.0);
    const double G11_0_17_1 = det*w[0][17]*K[1]*K[2]*(1.0);
    const double G11_0_18_0 = det*w[0][18]*K[1]*K[0]*(1.0);
    const double G11_0_18_1 = det*w[0][18]*K[1]*K[2]*(1.0);
    const double G11_0_19_0 = det*w[0][19]*K[1]*K[0]*(1.0);
    const double G11_0_19_1 = det*w[0][19]*K[1]*K[2]*(1.0);
    const double G11_1_10_0 = det*w[0][10]*K[3]*K[0]*(1.0);
    const double G11_1_10_1 = det*w[0][10]*K[3]*K[2]*(1.0);
    const double G11_1_11_0 = det*w[0][11]*K[3]*K[0]*(1.0);
    const double G11_1_12_1 = det*w[0][12]*K[3]*K[2]*(1.0);
    const double G11_1_13_0 = det*w[0][13]*K[3]*K[0]*(1.0);
    const double G11_1_13_1 = det*w[0][13]*K[3]*K[2]*(1.0);
    const double G11_1_14_0 = det*w[0][14]*K[3]*K[0]*(1.0);
    const double G11_1_14_1 = det*w[0][14]*K[3]*K[2]*(1.0);
    const double G11_1_15_0 = det*w[0][15]*K[3]*K[0]*(1.0);
    const double G11_1_15_1 = det*w[0][15]*K[3]*K[2]*(1.0);
    const double G11_1_16_0 = det*w[0][16]*K[3]*K[0]*(1.0);
    const double G11_1_16_1 = det*w[0][16]*K[3]*K[2]*(1.0);
    const double G11_1_17_0 = det*w[0][17]*K[3]*K[0]*(1.0);
    const double G11_1_17_1 = det*w[0][17]*K[3]*K[2]*(1.0);
    const double G11_1_18_0 = det*w[0][18]*K[3]*K[0]*(1.0);
    const double G11_1_18_1 = det*w[0][18]*K[3]*K[2]*(1.0);
    const double G11_1_19_0 = det*w[0][19]*K[3]*K[0]*(1.0);
    const double G11_1_19_1 = det*w[0][19]*K[3]*K[2]*(1.0);
    const double G12_0_0_0 = det*w[1][0]*K[1]*K[1]*(1.0);
    const double G12_0_0_1 = det*w[1][0]*K[1]*K[3]*(1.0);
    const double G12_0_1_0 = det*w[1][1]*K[1]*K[1]*(1.0);
    const double G12_0_2_1 = det*w[1][2]*K[1]*K[3]*(1.0);
    const double G12_0_3_0 = det*w[1][3]*K[1]*K[1]*(1.0);
    const double G12_0_3_1 = det*w[1][3]*K[1]*K[3]*(1.0);
    const double G12_0_4_0 = det*w[1][4]*K[1]*K[1]*(1.0);
    const double G12_0_4_1 = det*w[1][4]*K[1]*K[3]*(1.0);
    const double G12_0_5_0 = det*w[1][5]*K[1]*K[1]*(1.0);
    const double G12_0_5_1 = det*w[1][5]*K[1]*K[3]*(1.0);
    const double G12_0_6_0 = det*w[1][6]*K[1]*K[1]*(1.0);
    const double G12_0_6_1 = det*w[1][6]*K[1]*K[3]*(1.0);
    const double G12_0_7_0 = det*w[1][7]*K[1]*K[1]*(1.0);
    const double G12_0_7_1 = det*w[1][7]*K[1]*K[3]*(1.0);
    const double G12_0_8_0 = det*w[1][8]*K[1]*K[1]*(1.0);
    const double G12_0_8_1 = det*w[1][8]*K[1]*K[3]*(1.0);
    const double G12_0_9_0 = det*w[1][9]*K[1]*K[1]*(1.0);
    const double G12_0_9_1 = det*w[1][9]*K[1]*K[3]*(1.0);
    const double G12_1_0_0 = det*w[1][0]*K[3]*K[1]*(1.0);
    const double G12_1_0_1 = det*w[1][0]*K[3]*K[3]*(1.0);
    const double G12_1_1_0 = det*w[1][1]*K[3]*K[1]*(1.0);
    const double G12_1_2_1 = det*w[1][2]*K[3]*K[3]*(1.0);
    const double G12_1_3_0 = det*w[1][3]*K[3]*K[1]*(1.0);
    const double G12_1_3_1 = det*w[1][3]*K[3]*K[3]*(1.0);
    const double G12_1_4_0 = det*w[1][4]*K[3]*K[1]*(1.0);
    const double G12_1_4_1 = det*w[1][4]*K[3]*K[3]*(1.0);
    const double G12_1_5_0 = det*w[1][5]*K[3]*K[1]*(1.0);
    const double G12_1_5_1 = det*w[1][5]*K[3]*K[3]*(1.0);
    const double G12_1_6_0 = det*w[1][6]*K[3]*K[1]*(1.0);
    const double G12_1_6_1 = det*w[1][6]*K[3]*K[3]*(1.0);
    const double G12_1_7_0 = det*w[1][7]*K[3]*K[1]*(1.0);
    const double G12_1_7_1 = det*w[1][7]*K[3]*K[3]*(1.0);
    const double G12_1_8_0 = det*w[1][8]*K[3]*K[1]*(1.0);
    const double G12_1_8_1 = det*w[1][8]*K[3]*K[3]*(1.0);
    const double G12_1_9_0 = det*w[1][9]*K[3]*K[1]*(1.0);
    const double G12_1_9_1 = det*w[1][9]*K[3]*K[3]*(1.0);
    const double G13_0_10_0 = det*w[1][10]*K[1]*K[0]*(1.0);
    const double G13_0_10_1 = det*w[1][10]*K[1]*K[2]*(1.0);
    const double G13_0_11_0 = det*w[1][11]*K[1]*K[0]*(1.0);
    const double G13_0_12_1 = det*w[1][12]*K[1]*K[2]*(1.0);
    const double G13_0_13_0 = det*w[1][13]*K[1]*K[0]*(1.0);
    const double G13_0_13_1 = det*w[1][13]*K[1]*K[2]*(1.0);
    const double G13_0_14_0 = det*w[1][14]*K[1]*K[0]*(1.0);
    const double G13_0_14_1 = det*w[1][14]*K[1]*K[2]*(1.0);
    const double G13_0_15_0 = det*w[1][15]*K[1]*K[0]*(1.0);
    const double G13_0_15_1 = det*w[1][15]*K[1]*K[2]*(1.0);
    const double G13_0_16_0 = det*w[1][16]*K[1]*K[0]*(1.0);
    const double G13_0_16_1 = det*w[1][16]*K[1]*K[2]*(1.0);
    const double G13_0_17_0 = det*w[1][17]*K[1]*K[0]*(1.0);
    const double G13_0_17_1 = det*w[1][17]*K[1]*K[2]*(1.0);
    const double G13_0_18_0 = det*w[1][18]*K[1]*K[0]*(1.0);
    const double G13_0_18_1 = det*w[1][18]*K[1]*K[2]*(1.0);
    const double G13_0_19_0 = det*w[1][19]*K[1]*K[0]*(1.0);
    const double G13_0_19_1 = det*w[1][19]*K[1]*K[2]*(1.0);
    const double G13_1_10_0 = det*w[1][10]*K[3]*K[0]*(1.0);
    const double G13_1_10_1 = det*w[1][10]*K[3]*K[2]*(1.0);
    const double G13_1_11_0 = det*w[1][11]*K[3]*K[0]*(1.0);
    const double G13_1_12_1 = det*w[1][12]*K[3]*K[2]*(1.0);
    const double G13_1_13_0 = det*w[1][13]*K[3]*K[0]*(1.0);
    const double G13_1_13_1 = det*w[1][13]*K[3]*K[2]*(1.0);
    const double G13_1_14_0 = det*w[1][14]*K[3]*K[0]*(1.0);
    const double G13_1_14_1 = det*w[1][14]*K[3]*K[2]*(1.0);
    const double G13_1_15_0 = det*w[1][15]*K[3]*K[0]*(1.0);
    const double G13_1_15_1 = det*w[1][15]*K[3]*K[2]*(1.0);
    const double G13_1_16_0 = det*w[1][16]*K[3]*K[0]*(1.0);
    const double G13_1_16_1 = det*w[1][16]*K[3]*K[2]*(1.0);
    const double G13_1_17_0 = det*w[1][17]*K[3]*K[0]*(1.0);
    const double G13_1_17_1 = det*w[1][17]*K[3]*K[2]*(1.0);
    const double G13_1_18_0 = det*w[1][18]*K[3]*K[0]*(1.0);
    const double G13_1_18_1 = det*w[1][18]*K[3]*K[2]*(1.0);
    const double G13_1_19_0 = det*w[1][19]*K[3]*K[0]*(1.0);
    const double G13_1_19_1 = det*w[1][19]*K[3]*K[2]*(1.0);
    const double G14_0_10_0 = det*w[0][10]*K[1]*K[1]*(1.0);
    const double G14_0_10_1 = det*w[0][10]*K[1]*K[3]*(1.0);
    const double G14_0_11_0 = det*w[0][11]*K[1]*K[1]*(1.0);
    const double G14_0_12_1 = det*w[0][12]*K[1]*K[3]*(1.0);
    const double G14_0_13_0 = det*w[0][13]*K[1]*K[1]*(1.0);
    const double G14_0_13_1 = det*w[0][13]*K[1]*K[3]*(1.0);
    const double G14_0_14_0 = det*w[0][14]*K[1]*K[1]*(1.0);
    const double G14_0_14_1 = det*w[0][14]*K[1]*K[3]*(1.0);
    const double G14_0_15_0 = det*w[0][15]*K[1]*K[1]*(1.0);
    const double G14_0_15_1 = det*w[0][15]*K[1]*K[3]*(1.0);
    const double G14_0_16_0 = det*w[0][16]*K[1]*K[1]*(1.0);
    const double G14_0_16_1 = det*w[0][16]*K[1]*K[3]*(1.0);
    const double G14_0_17_0 = det*w[0][17]*K[1]*K[1]*(1.0);
    const double G14_0_17_1 = det*w[0][17]*K[1]*K[3]*(1.0);
    const double G14_0_18_0 = det*w[0][18]*K[1]*K[1]*(1.0);
    const double G14_0_18_1 = det*w[0][18]*K[1]*K[3]*(1.0);
    const double G14_0_19_0 = det*w[0][19]*K[1]*K[1]*(1.0);
    const double G14_0_19_1 = det*w[0][19]*K[1]*K[3]*(1.0);
    const double G14_1_10_0 = det*w[0][10]*K[3]*K[1]*(1.0);
    const double G14_1_10_1 = det*w[0][10]*K[3]*K[3]*(1.0);
    const double G14_1_11_0 = det*w[0][11]*K[3]*K[1]*(1.0);
    const double G14_1_12_1 = det*w[0][12]*K[3]*K[3]*(1.0);
    const double G14_1_13_0 = det*w[0][13]*K[3]*K[1]*(1.0);
    const double G14_1_13_1 = det*w[0][13]*K[3]*K[3]*(1.0);
    const double G14_1_14_0 = det*w[0][14]*K[3]*K[1]*(1.0);
    const double G14_1_14_1 = det*w[0][14]*K[3]*K[3]*(1.0);
    const double G14_1_15_0 = det*w[0][15]*K[3]*K[1]*(1.0);
    const double G14_1_15_1 = det*w[0][15]*K[3]*K[3]*(1.0);
    const double G14_1_16_0 = det*w[0][16]*K[3]*K[1]*(1.0);
    const double G14_1_16_1 = det*w[0][16]*K[3]*K[3]*(1.0);
    const double G14_1_17_0 = det*w[0][17]*K[3]*K[1]*(1.0);
    const double G14_1_17_1 = det*w[0][17]*K[3]*K[3]*(1.0);
    const double G14_1_18_0 = det*w[0][18]*K[3]*K[1]*(1.0);
    const double G14_1_18_1 = det*w[0][18]*K[3]*K[3]*(1.0);
    const double G14_1_19_0 = det*w[0][19]*K[3]*K[1]*(1.0);
    const double G14_1_19_1 = det*w[0][19]*K[3]*K[3]*(1.0);
    const double G15_0_10_0 = det*w[0][10]*K[1]*K[1]*(1.0);
    const double G15_0_10_1 = det*w[0][10]*K[1]*K[3]*(1.0);
    const double G15_0_11_0 = det*w[0][11]*K[1]*K[1]*(1.0);
    const double G15_0_12_1 = det*w[0][12]*K[1]*K[3]*(1.0);
    const double G15_0_13_0 = det*w[0][13]*K[1]*K[1]*(1.0);
    const double G15_0_13_1 = det*w[0][13]*K[1]*K[3]*(1.0);
    const double G15_0_14_0 = det*w[0][14]*K[1]*K[1]*(1.0);
    const double G15_0_14_1 = det*w[0][14]*K[1]*K[3]*(1.0);
    const double G15_0_15_0 = det*w[0][15]*K[1]*K[1]*(1.0);
    const double G15_0_15_1 = det*w[0][15]*K[1]*K[3]*(1.0);
    const double G15_0_16_0 = det*w[0][16]*K[1]*K[1]*(1.0);
    const double G15_0_16_1 = det*w[0][16]*K[1]*K[3]*(1.0);
    const double G15_0_17_0 = det*w[0][17]*K[1]*K[1]*(1.0);
    const double G15_0_17_1 = det*w[0][17]*K[1]*K[3]*(1.0);
    const double G15_0_18_0 = det*w[0][18]*K[1]*K[1]*(1.0);
    const double G15_0_18_1 = det*w[0][18]*K[1]*K[3]*(1.0);
    const double G15_0_19_0 = det*w[0][19]*K[1]*K[1]*(1.0);
    const double G15_0_19_1 = det*w[0][19]*K[1]*K[3]*(1.0);
    const double G15_1_10_0 = det*w[0][10]*K[3]*K[1]*(1.0);
    const double G15_1_10_1 = det*w[0][10]*K[3]*K[3]*(1.0);
    const double G15_1_11_0 = det*w[0][11]*K[3]*K[1]*(1.0);
    const double G15_1_12_1 = det*w[0][12]*K[3]*K[3]*(1.0);
    const double G15_1_13_0 = det*w[0][13]*K[3]*K[1]*(1.0);
    const double G15_1_13_1 = det*w[0][13]*K[3]*K[3]*(1.0);
    const double G15_1_14_0 = det*w[0][14]*K[3]*K[1]*(1.0);
    const double G15_1_14_1 = det*w[0][14]*K[3]*K[3]*(1.0);
    const double G15_1_15_0 = det*w[0][15]*K[3]*K[1]*(1.0);
    const double G15_1_15_1 = det*w[0][15]*K[3]*K[3]*(1.0);
    const double G15_1_16_0 = det*w[0][16]*K[3]*K[1]*(1.0);
    const double G15_1_16_1 = det*w[0][16]*K[3]*K[3]*(1.0);
    const double G15_1_17_0 = det*w[0][17]*K[3]*K[1]*(1.0);
    const double G15_1_17_1 = det*w[0][17]*K[3]*K[3]*(1.0);
    const double G15_1_18_0 = det*w[0][18]*K[3]*K[1]*(1.0);
    const double G15_1_18_1 = det*w[0][18]*K[3]*K[3]*(1.0);
    const double G15_1_19_0 = det*w[0][19]*K[3]*K[1]*(1.0);
    const double G15_1_19_1 = det*w[0][19]*K[3]*K[3]*(1.0);
    const double G16_0_20 = det*w[0][20]*K[1]*(1.0);
    const double G16_0_21 = det*w[0][21]*K[1]*(1.0);
    const double G16_0_22 = det*w[0][22]*K[1]*(1.0);
    const double G16_0_23 = det*w[0][23]*K[1]*(1.0);
    const double G16_0_24 = det*w[0][24]*K[1]*(1.0);
    const double G16_0_25 = det*w[0][25]*K[1]*(1.0);
    const double G16_1_20 = det*w[0][20]*K[3]*(1.0);
    const double G16_1_21 = det*w[0][21]*K[3]*(1.0);
    const double G16_1_22 = det*w[0][22]*K[3]*(1.0);
    const double G16_1_23 = det*w[0][23]*K[3]*(1.0);
    const double G16_1_24 = det*w[0][24]*K[3]*(1.0);
    const double G16_1_25 = det*w[0][25]*K[3]*(1.0);
    const double G17_0_10_0 = det*w[1][10]*K[1]*K[1]*(1.0);
    const double G17_0_10_1 = det*w[1][10]*K[1]*K[3]*(1.0);
    const double G17_0_11_0 = det*w[1][11]*K[1]*K[1]*(1.0);
    const double G17_0_12_1 = det*w[1][12]*K[1]*K[3]*(1.0);
    const double G17_0_13_0 = det*w[1][13]*K[1]*K[1]*(1.0);
    const double G17_0_13_1 = det*w[1][13]*K[1]*K[3]*(1.0);
    const double G17_0_14_0 = det*w[1][14]*K[1]*K[1]*(1.0);
    const double G17_0_14_1 = det*w[1][14]*K[1]*K[3]*(1.0);
    const double G17_0_15_0 = det*w[1][15]*K[1]*K[1]*(1.0);
    const double G17_0_15_1 = det*w[1][15]*K[1]*K[3]*(1.0);
    const double G17_0_16_0 = det*w[1][16]*K[1]*K[1]*(1.0);
    const double G17_0_16_1 = det*w[1][16]*K[1]*K[3]*(1.0);
    const double G17_0_17_0 = det*w[1][17]*K[1]*K[1]*(1.0);
    const double G17_0_17_1 = det*w[1][17]*K[1]*K[3]*(1.0);
    const double G17_0_18_0 = det*w[1][18]*K[1]*K[1]*(1.0);
    const double G17_0_18_1 = det*w[1][18]*K[1]*K[3]*(1.0);
    const double G17_0_19_0 = det*w[1][19]*K[1]*K[1]*(1.0);
    const double G17_0_19_1 = det*w[1][19]*K[1]*K[3]*(1.0);
    const double G17_1_10_0 = det*w[1][10]*K[3]*K[1]*(1.0);
    const double G17_1_10_1 = det*w[1][10]*K[3]*K[3]*(1.0);
    const double G17_1_11_0 = det*w[1][11]*K[3]*K[1]*(1.0);
    const double G17_1_12_1 = det*w[1][12]*K[3]*K[3]*(1.0);
    const double G17_1_13_0 = det*w[1][13]*K[3]*K[1]*(1.0);
    const double G17_1_13_1 = det*w[1][13]*K[3]*K[3]*(1.0);
    const double G17_1_14_0 = det*w[1][14]*K[3]*K[1]*(1.0);
    const double G17_1_14_1 = det*w[1][14]*K[3]*K[3]*(1.0);
    const double G17_1_15_0 = det*w[1][15]*K[3]*K[1]*(1.0);
    const double G17_1_15_1 = det*w[1][15]*K[3]*K[3]*(1.0);
    const double G17_1_16_0 = det*w[1][16]*K[3]*K[1]*(1.0);
    const double G17_1_16_1 = det*w[1][16]*K[3]*K[3]*(1.0);
    const double G17_1_17_0 = det*w[1][17]*K[3]*K[1]*(1.0);
    const double G17_1_17_1 = det*w[1][17]*K[3]*K[3]*(1.0);
    const double G17_1_18_0 = det*w[1][18]*K[3]*K[1]*(1.0);
    const double G17_1_18_1 = det*w[1][18]*K[3]*K[3]*(1.0);
    const double G17_1_19_0 = det*w[1][19]*K[3]*K[1]*(1.0);
    const double G17_1_19_1 = det*w[1][19]*K[3]*K[3]*(1.0);
    const double G18_0_10_0 = det*w[1][10]*K[1]*K[1]*(1.0);
    const double G18_0_10_1 = det*w[1][10]*K[1]*K[3]*(1.0);
    const double G18_0_11_0 = det*w[1][11]*K[1]*K[1]*(1.0);
    const double G18_0_12_1 = det*w[1][12]*K[1]*K[3]*(1.0);
    const double G18_0_13_0 = det*w[1][13]*K[1]*K[1]*(1.0);
    const double G18_0_13_1 = det*w[1][13]*K[1]*K[3]*(1.0);
    const double G18_0_14_0 = det*w[1][14]*K[1]*K[1]*(1.0);
    const double G18_0_14_1 = det*w[1][14]*K[1]*K[3]*(1.0);
    const double G18_0_15_0 = det*w[1][15]*K[1]*K[1]*(1.0);
    const double G18_0_15_1 = det*w[1][15]*K[1]*K[3]*(1.0);
    const double G18_0_16_0 = det*w[1][16]*K[1]*K[1]*(1.0);
    const double G18_0_16_1 = det*w[1][16]*K[1]*K[3]*(1.0);
    const double G18_0_17_0 = det*w[1][17]*K[1]*K[1]*(1.0);
    const double G18_0_17_1 = det*w[1][17]*K[1]*K[3]*(1.0);
    const double G18_0_18_0 = det*w[1][18]*K[1]*K[1]*(1.0);
    const double G18_0_18_1 = det*w[1][18]*K[1]*K[3]*(1.0);
    const double G18_0_19_0 = det*w[1][19]*K[1]*K[1]*(1.0);
    const double G18_0_19_1 = det*w[1][19]*K[1]*K[3]*(1.0);
    const double G18_1_10_0 = det*w[1][10]*K[3]*K[1]*(1.0);
    const double G18_1_10_1 = det*w[1][10]*K[3]*K[3]*(1.0);
    const double G18_1_11_0 = det*w[1][11]*K[3]*K[1]*(1.0);
    const double G18_1_12_1 = det*w[1][12]*K[3]*K[3]*(1.0);
    const double G18_1_13_0 = det*w[1][13]*K[3]*K[1]*(1.0);
    const double G18_1_13_1 = det*w[1][13]*K[3]*K[3]*(1.0);
    const double G18_1_14_0 = det*w[1][14]*K[3]*K[1]*(1.0);
    const double G18_1_14_1 = det*w[1][14]*K[3]*K[3]*(1.0);
    const double G18_1_15_0 = det*w[1][15]*K[3]*K[1]*(1.0);
    const double G18_1_15_1 = det*w[1][15]*K[3]*K[3]*(1.0);
    const double G18_1_16_0 = det*w[1][16]*K[3]*K[1]*(1.0);
    const double G18_1_16_1 = det*w[1][16]*K[3]*K[3]*(1.0);
    const double G18_1_17_0 = det*w[1][17]*K[3]*K[1]*(1.0);
    const double G18_1_17_1 = det*w[1][17]*K[3]*K[3]*(1.0);
    const double G18_1_18_0 = det*w[1][18]*K[3]*K[1]*(1.0);
    const double G18_1_18_1 = det*w[1][18]*K[3]*K[3]*(1.0);
    const double G18_1_19_0 = det*w[1][19]*K[3]*K[1]*(1.0);
    const double G18_1_19_1 = det*w[1][19]*K[3]*K[3]*(1.0);
    const double G19_0_20 = det*w[1][20]*K[1]*(1.0);
    const double G19_0_21 = det*w[1][21]*K[1]*(1.0);
    const double G19_0_22 = det*w[1][22]*K[1]*(1.0);
    const double G19_0_23 = det*w[1][23]*K[1]*(1.0);
    const double G19_0_24 = det*w[1][24]*K[1]*(1.0);
    const double G19_0_25 = det*w[1][25]*K[1]*(1.0);
    const double G19_1_20 = det*w[1][20]*K[3]*(1.0);
    const double G19_1_21 = det*w[1][21]*K[3]*(1.0);
    const double G19_1_22 = det*w[1][22]*K[3]*(1.0);
    const double G19_1_23 = det*w[1][23]*K[3]*(1.0);
    const double G19_1_24 = det*w[1][24]*K[3]*(1.0);
    const double G19_1_25 = det*w[1][25]*K[3]*(1.0);
    const double G20_0_0_0 = det*w[0][0]*w[0][0]*K[0]*(1.0);
    const double G20_0_0_1 = det*w[0][0]*w[0][0]*K[2]*(1.0);
    const double G20_0_1_0 = det*w[0][0]*w[0][1]*K[0]*(1.0);
    const double G20_0_1_1 = det*w[0][0]*w[0][1]*K[2]*(1.0);
    const double G20_0_2_1 = det*w[0][0]*w[0][2]*K[2]*(1.0);
    const double G20_0_3_0 = det*w[0][0]*w[0][3]*K[0]*(1.0);
    const double G20_0_3_1 = det*w[0][0]*w[0][3]*K[2]*(1.0);
    const double G20_0_4_0 = det*w[0][0]*w[0][4]*K[0]*(1.0);
    const double G20_0_4_1 = det*w[0][0]*w[0][4]*K[2]*(1.0);
    const double G20_0_5_0 = det*w[0][0]*w[0][5]*K[0]*(1.0);
    const double G20_0_5_1 = det*w[0][0]*w[0][5]*K[2]*(1.0);
    const double G20_0_6_0 = det*w[0][0]*w[0][6]*K[0]*(1.0);
    const double G20_0_6_1 = det*w[0][0]*w[0][6]*K[2]*(1.0);
    const double G20_0_7_0 = det*w[0][0]*w[0][7]*K[0]*(1.0);
    const double G20_0_7_1 = det*w[0][0]*w[0][7]*K[2]*(1.0);
    const double G20_0_8_0 = det*w[0][0]*w[0][8]*K[0]*(1.0);
    const double G20_0_8_1 = det*w[0][0]*w[0][8]*K[2]*(1.0);
    const double G20_0_9_0 = det*w[0][0]*w[0][9]*K[0]*(1.0);
    const double G20_0_9_1 = det*w[0][0]*w[0][9]*K[2]*(1.0);
    const double G20_1_0_0 = det*w[0][1]*w[0][0]*K[0]*(1.0);
    const double G20_1_0_1 = det*w[0][1]*w[0][0]*K[2]*(1.0);
    const double G20_1_1_0 = det*w[0][1]*w[0][1]*K[0]*(1.0);
    const double G20_1_1_1 = det*w[0][1]*w[0][1]*K[2]*(1.0);
    const double G20_1_2_1 = det*w[0][1]*w[0][2]*K[2]*(1.0);
    const double G20_1_3_0 = det*w[0][1]*w[0][3]*K[0]*(1.0);
    const double G20_1_3_1 = det*w[0][1]*w[0][3]*K[2]*(1.0);
    const double G20_1_4_0 = det*w[0][1]*w[0][4]*K[0]*(1.0);
    const double G20_1_4_1 = det*w[0][1]*w[0][4]*K[2]*(1.0);
    const double G20_1_5_0 = det*w[0][1]*w[0][5]*K[0]*(1.0);
    const double G20_1_5_1 = det*w[0][1]*w[0][5]*K[2]*(1.0);
    const double G20_1_6_0 = det*w[0][1]*w[0][6]*K[0]*(1.0);
    const double G20_1_6_1 = det*w[0][1]*w[0][6]*K[2]*(1.0);
    const double G20_1_7_0 = det*w[0][1]*w[0][7]*K[0]*(1.0);
    const double G20_1_7_1 = det*w[0][1]*w[0][7]*K[2]*(1.0);
    const double G20_1_8_0 = det*w[0][1]*w[0][8]*K[0]*(1.0);
    const double G20_1_8_1 = det*w[0][1]*w[0][8]*K[2]*(1.0);
    const double G20_1_9_0 = det*w[0][1]*w[0][9]*K[0]*(1.0);
    const double G20_1_9_1 = det*w[0][1]*w[0][9]*K[2]*(1.0);
    const double G20_2_0_0 = det*w[0][2]*w[0][0]*K[0]*(1.0);
    const double G20_2_0_1 = det*w[0][2]*w[0][0]*K[2]*(1.0);
    const double G20_2_1_0 = det*w[0][2]*w[0][1]*K[0]*(1.0);
    const double G20_2_1_1 = det*w[0][2]*w[0][1]*K[2]*(1.0);
    const double G20_2_2_1 = det*w[0][2]*w[0][2]*K[2]*(1.0);
    const double G20_2_3_0 = det*w[0][2]*w[0][3]*K[0]*(1.0);
    const double G20_2_3_1 = det*w[0][2]*w[0][3]*K[2]*(1.0);
    const double G20_2_4_0 = det*w[0][2]*w[0][4]*K[0]*(1.0);
    const double G20_2_4_1 = det*w[0][2]*w[0][4]*K[2]*(1.0);
    const double G20_2_5_0 = det*w[0][2]*w[0][5]*K[0]*(1.0);
    const double G20_2_5_1 = det*w[0][2]*w[0][5]*K[2]*(1.0);
    const double G20_2_6_0 = det*w[0][2]*w[0][6]*K[0]*(1.0);
    const double G20_2_6_1 = det*w[0][2]*w[0][6]*K[2]*(1.0);
    const double G20_2_7_0 = det*w[0][2]*w[0][7]*K[0]*(1.0);
    const double G20_2_7_1 = det*w[0][2]*w[0][7]*K[2]*(1.0);
    const double G20_2_8_0 = det*w[0][2]*w[0][8]*K[0]*(1.0);
    const double G20_2_8_1 = det*w[0][2]*w[0][8]*K[2]*(1.0);
    const double G20_2_9_0 = det*w[0][2]*w[0][9]*K[0]*(1.0);
    const double G20_2_9_1 = det*w[0][2]*w[0][9]*K[2]*(1.0);
    const double G20_3_0_0 = det*w[0][3]*w[0][0]*K[0]*(1.0);
    const double G20_3_0_1 = det*w[0][3]*w[0][0]*K[2]*(1.0);
    const double G20_3_1_0 = det*w[0][3]*w[0][1]*K[0]*(1.0);
    const double G20_3_1_1 = det*w[0][3]*w[0][1]*K[2]*(1.0);
    const double G20_3_2_1 = det*w[0][3]*w[0][2]*K[2]*(1.0);
    const double G20_3_3_0 = det*w[0][3]*w[0][3]*K[0]*(1.0);
    const double G20_3_3_1 = det*w[0][3]*w[0][3]*K[2]*(1.0);
    const double G20_3_4_0 = det*w[0][3]*w[0][4]*K[0]*(1.0);
    const double G20_3_4_1 = det*w[0][3]*w[0][4]*K[2]*(1.0);
    const double G20_3_5_0 = det*w[0][3]*w[0][5]*K[0]*(1.0);
    const double G20_3_5_1 = det*w[0][3]*w[0][5]*K[2]*(1.0);
    const double G20_3_6_0 = det*w[0][3]*w[0][6]*K[0]*(1.0);
    const double G20_3_6_1 = det*w[0][3]*w[0][6]*K[2]*(1.0);
    const double G20_3_7_0 = det*w[0][3]*w[0][7]*K[0]*(1.0);
    const double G20_3_7_1 = det*w[0][3]*w[0][7]*K[2]*(1.0);
    const double G20_3_8_0 = det*w[0][3]*w[0][8]*K[0]*(1.0);
    const double G20_3_8_1 = det*w[0][3]*w[0][8]*K[2]*(1.0);
    const double G20_3_9_0 = det*w[0][3]*w[0][9]*K[0]*(1.0);
    const double G20_3_9_1 = det*w[0][3]*w[0][9]*K[2]*(1.0);
    const double G20_4_0_0 = det*w[0][4]*w[0][0]*K[0]*(1.0);
    const double G20_4_0_1 = det*w[0][4]*w[0][0]*K[2]*(1.0);
    const double G20_4_1_0 = det*w[0][4]*w[0][1]*K[0]*(1.0);
    const double G20_4_1_1 = det*w[0][4]*w[0][1]*K[2]*(1.0);
    const double G20_4_2_1 = det*w[0][4]*w[0][2]*K[2]*(1.0);
    const double G20_4_3_0 = det*w[0][4]*w[0][3]*K[0]*(1.0);
    const double G20_4_3_1 = det*w[0][4]*w[0][3]*K[2]*(1.0);
    const double G20_4_4_0 = det*w[0][4]*w[0][4]*K[0]*(1.0);
    const double G20_4_4_1 = det*w[0][4]*w[0][4]*K[2]*(1.0);
    const double G20_4_5_0 = det*w[0][4]*w[0][5]*K[0]*(1.0);
    const double G20_4_5_1 = det*w[0][4]*w[0][5]*K[2]*(1.0);
    const double G20_4_6_0 = det*w[0][4]*w[0][6]*K[0]*(1.0);
    const double G20_4_6_1 = det*w[0][4]*w[0][6]*K[2]*(1.0);
    const double G20_4_7_0 = det*w[0][4]*w[0][7]*K[0]*(1.0);
    const double G20_4_7_1 = det*w[0][4]*w[0][7]*K[2]*(1.0);
    const double G20_4_8_0 = det*w[0][4]*w[0][8]*K[0]*(1.0);
    const double G20_4_8_1 = det*w[0][4]*w[0][8]*K[2]*(1.0);
    const double G20_4_9_0 = det*w[0][4]*w[0][9]*K[0]*(1.0);
    const double G20_4_9_1 = det*w[0][4]*w[0][9]*K[2]*(1.0);
    const double G20_5_0_0 = det*w[0][5]*w[0][0]*K[0]*(1.0);
    const double G20_5_0_1 = det*w[0][5]*w[0][0]*K[2]*(1.0);
    const double G20_5_1_0 = det*w[0][5]*w[0][1]*K[0]*(1.0);
    const double G20_5_1_1 = det*w[0][5]*w[0][1]*K[2]*(1.0);
    const double G20_5_2_1 = det*w[0][5]*w[0][2]*K[2]*(1.0);
    const double G20_5_3_0 = det*w[0][5]*w[0][3]*K[0]*(1.0);
    const double G20_5_3_1 = det*w[0][5]*w[0][3]*K[2]*(1.0);
    const double G20_5_4_0 = det*w[0][5]*w[0][4]*K[0]*(1.0);
    const double G20_5_4_1 = det*w[0][5]*w[0][4]*K[2]*(1.0);
    const double G20_5_5_0 = det*w[0][5]*w[0][5]*K[0]*(1.0);
    const double G20_5_5_1 = det*w[0][5]*w[0][5]*K[2]*(1.0);
    const double G20_5_6_0 = det*w[0][5]*w[0][6]*K[0]*(1.0);
    const double G20_5_6_1 = det*w[0][5]*w[0][6]*K[2]*(1.0);
    const double G20_5_7_0 = det*w[0][5]*w[0][7]*K[0]*(1.0);
    const double G20_5_7_1 = det*w[0][5]*w[0][7]*K[2]*(1.0);
    const double G20_5_8_0 = det*w[0][5]*w[0][8]*K[0]*(1.0);
    const double G20_5_8_1 = det*w[0][5]*w[0][8]*K[2]*(1.0);
    const double G20_5_9_0 = det*w[0][5]*w[0][9]*K[0]*(1.0);
    const double G20_5_9_1 = det*w[0][5]*w[0][9]*K[2]*(1.0);
    const double G20_6_0_0 = det*w[0][6]*w[0][0]*K[0]*(1.0);
    const double G20_6_0_1 = det*w[0][6]*w[0][0]*K[2]*(1.0);
    const double G20_6_1_0 = det*w[0][6]*w[0][1]*K[0]*(1.0);
    const double G20_6_1_1 = det*w[0][6]*w[0][1]*K[2]*(1.0);
    const double G20_6_2_1 = det*w[0][6]*w[0][2]*K[2]*(1.0);
    const double G20_6_3_0 = det*w[0][6]*w[0][3]*K[0]*(1.0);
    const double G20_6_3_1 = det*w[0][6]*w[0][3]*K[2]*(1.0);
    const double G20_6_4_0 = det*w[0][6]*w[0][4]*K[0]*(1.0);
    const double G20_6_4_1 = det*w[0][6]*w[0][4]*K[2]*(1.0);
    const double G20_6_5_0 = det*w[0][6]*w[0][5]*K[0]*(1.0);
    const double G20_6_5_1 = det*w[0][6]*w[0][5]*K[2]*(1.0);
    const double G20_6_6_0 = det*w[0][6]*w[0][6]*K[0]*(1.0);
    const double G20_6_6_1 = det*w[0][6]*w[0][6]*K[2]*(1.0);
    const double G20_6_7_0 = det*w[0][6]*w[0][7]*K[0]*(1.0);
    const double G20_6_7_1 = det*w[0][6]*w[0][7]*K[2]*(1.0);
    const double G20_6_8_0 = det*w[0][6]*w[0][8]*K[0]*(1.0);
    const double G20_6_8_1 = det*w[0][6]*w[0][8]*K[2]*(1.0);
    const double G20_6_9_0 = det*w[0][6]*w[0][9]*K[0]*(1.0);
    const double G20_6_9_1 = det*w[0][6]*w[0][9]*K[2]*(1.0);
    const double G20_7_0_0 = det*w[0][7]*w[0][0]*K[0]*(1.0);
    const double G20_7_0_1 = det*w[0][7]*w[0][0]*K[2]*(1.0);
    const double G20_7_1_0 = det*w[0][7]*w[0][1]*K[0]*(1.0);
    const double G20_7_1_1 = det*w[0][7]*w[0][1]*K[2]*(1.0);
    const double G20_7_2_1 = det*w[0][7]*w[0][2]*K[2]*(1.0);
    const double G20_7_3_0 = det*w[0][7]*w[0][3]*K[0]*(1.0);
    const double G20_7_3_1 = det*w[0][7]*w[0][3]*K[2]*(1.0);
    const double G20_7_4_0 = det*w[0][7]*w[0][4]*K[0]*(1.0);
    const double G20_7_4_1 = det*w[0][7]*w[0][4]*K[2]*(1.0);
    const double G20_7_5_0 = det*w[0][7]*w[0][5]*K[0]*(1.0);
    const double G20_7_5_1 = det*w[0][7]*w[0][5]*K[2]*(1.0);
    const double G20_7_6_0 = det*w[0][7]*w[0][6]*K[0]*(1.0);
    const double G20_7_6_1 = det*w[0][7]*w[0][6]*K[2]*(1.0);
    const double G20_7_7_0 = det*w[0][7]*w[0][7]*K[0]*(1.0);
    const double G20_7_7_1 = det*w[0][7]*w[0][7]*K[2]*(1.0);
    const double G20_7_8_0 = det*w[0][7]*w[0][8]*K[0]*(1.0);
    const double G20_7_8_1 = det*w[0][7]*w[0][8]*K[2]*(1.0);
    const double G20_7_9_0 = det*w[0][7]*w[0][9]*K[0]*(1.0);
    const double G20_7_9_1 = det*w[0][7]*w[0][9]*K[2]*(1.0);
    const double G20_8_0_0 = det*w[0][8]*w[0][0]*K[0]*(1.0);
    const double G20_8_0_1 = det*w[0][8]*w[0][0]*K[2]*(1.0);
    const double G20_8_1_0 = det*w[0][8]*w[0][1]*K[0]*(1.0);
    const double G20_8_1_1 = det*w[0][8]*w[0][1]*K[2]*(1.0);
    const double G20_8_2_1 = det*w[0][8]*w[0][2]*K[2]*(1.0);
    const double G20_8_3_0 = det*w[0][8]*w[0][3]*K[0]*(1.0);
    const double G20_8_3_1 = det*w[0][8]*w[0][3]*K[2]*(1.0);
    const double G20_8_4_0 = det*w[0][8]*w[0][4]*K[0]*(1.0);
    const double G20_8_4_1 = det*w[0][8]*w[0][4]*K[2]*(1.0);
    const double G20_8_5_0 = det*w[0][8]*w[0][5]*K[0]*(1.0);
    const double G20_8_5_1 = det*w[0][8]*w[0][5]*K[2]*(1.0);
    const double G20_8_6_0 = det*w[0][8]*w[0][6]*K[0]*(1.0);
    const double G20_8_6_1 = det*w[0][8]*w[0][6]*K[2]*(1.0);
    const double G20_8_7_0 = det*w[0][8]*w[0][7]*K[0]*(1.0);
    const double G20_8_7_1 = det*w[0][8]*w[0][7]*K[2]*(1.0);
    const double G20_8_8_0 = det*w[0][8]*w[0][8]*K[0]*(1.0);
    const double G20_8_8_1 = det*w[0][8]*w[0][8]*K[2]*(1.0);
    const double G20_8_9_0 = det*w[0][8]*w[0][9]*K[0]*(1.0);
    const double G20_8_9_1 = det*w[0][8]*w[0][9]*K[2]*(1.0);
    const double G20_9_0_0 = det*w[0][9]*w[0][0]*K[0]*(1.0);
    const double G20_9_0_1 = det*w[0][9]*w[0][0]*K[2]*(1.0);
    const double G20_9_1_0 = det*w[0][9]*w[0][1]*K[0]*(1.0);
    const double G20_9_1_1 = det*w[0][9]*w[0][1]*K[2]*(1.0);
    const double G20_9_2_1 = det*w[0][9]*w[0][2]*K[2]*(1.0);
    const double G20_9_3_0 = det*w[0][9]*w[0][3]*K[0]*(1.0);
    const double G20_9_3_1 = det*w[0][9]*w[0][3]*K[2]*(1.0);
    const double G20_9_4_0 = det*w[0][9]*w[0][4]*K[0]*(1.0);
    const double G20_9_4_1 = det*w[0][9]*w[0][4]*K[2]*(1.0);
    const double G20_9_5_0 = det*w[0][9]*w[0][5]*K[0]*(1.0);
    const double G20_9_5_1 = det*w[0][9]*w[0][5]*K[2]*(1.0);
    const double G20_9_6_0 = det*w[0][9]*w[0][6]*K[0]*(1.0);
    const double G20_9_6_1 = det*w[0][9]*w[0][6]*K[2]*(1.0);
    const double G20_9_7_0 = det*w[0][9]*w[0][7]*K[0]*(1.0);
    const double G20_9_7_1 = det*w[0][9]*w[0][7]*K[2]*(1.0);
    const double G20_9_8_0 = det*w[0][9]*w[0][8]*K[0]*(1.0);
    const double G20_9_8_1 = det*w[0][9]*w[0][8]*K[2]*(1.0);
    const double G20_9_9_0 = det*w[0][9]*w[0][9]*K[0]*(1.0);
    const double G20_9_9_1 = det*w[0][9]*w[0][9]*K[2]*(1.0);
    const double G21_0_0_10 = det*w[0][0]*w[0][10]*K[1]*(1.0);
    const double G21_0_0_11 = det*w[0][0]*w[0][11]*K[1]*(1.0);
    const double G21_0_0_12 = det*w[0][0]*w[0][12]*K[1]*(1.0);
    const double G21_0_0_13 = det*w[0][0]*w[0][13]*K[1]*(1.0);
    const double G21_0_0_14 = det*w[0][0]*w[0][14]*K[1]*(1.0);
    const double G21_0_0_15 = det*w[0][0]*w[0][15]*K[1]*(1.0);
    const double G21_0_0_16 = det*w[0][0]*w[0][16]*K[1]*(1.0);
    const double G21_0_0_17 = det*w[0][0]*w[0][17]*K[1]*(1.0);
    const double G21_0_0_18 = det*w[0][0]*w[0][18]*K[1]*(1.0);
    const double G21_0_0_19 = det*w[0][0]*w[0][19]*K[1]*(1.0);
    const double G21_0_1_10 = det*w[0][0]*w[0][10]*K[3]*(1.0);
    const double G21_0_1_11 = det*w[0][0]*w[0][11]*K[3]*(1.0);
    const double G21_0_1_12 = det*w[0][0]*w[0][12]*K[3]*(1.0);
    const double G21_0_1_13 = det*w[0][0]*w[0][13]*K[3]*(1.0);
    const double G21_0_1_14 = det*w[0][0]*w[0][14]*K[3]*(1.0);
    const double G21_0_1_15 = det*w[0][0]*w[0][15]*K[3]*(1.0);
    const double G21_0_1_16 = det*w[0][0]*w[0][16]*K[3]*(1.0);
    const double G21_0_1_17 = det*w[0][0]*w[0][17]*K[3]*(1.0);
    const double G21_0_1_18 = det*w[0][0]*w[0][18]*K[3]*(1.0);
    const double G21_0_1_19 = det*w[0][0]*w[0][19]*K[3]*(1.0);
    const double G21_1_0_10 = det*w[0][1]*w[0][10]*K[1]*(1.0);
    const double G21_1_0_11 = det*w[0][1]*w[0][11]*K[1]*(1.0);
    const double G21_1_0_12 = det*w[0][1]*w[0][12]*K[1]*(1.0);
    const double G21_1_0_13 = det*w[0][1]*w[0][13]*K[1]*(1.0);
    const double G21_1_0_14 = det*w[0][1]*w[0][14]*K[1]*(1.0);
    const double G21_1_0_15 = det*w[0][1]*w[0][15]*K[1]*(1.0);
    const double G21_1_0_16 = det*w[0][1]*w[0][16]*K[1]*(1.0);
    const double G21_1_0_17 = det*w[0][1]*w[0][17]*K[1]*(1.0);
    const double G21_1_0_18 = det*w[0][1]*w[0][18]*K[1]*(1.0);
    const double G21_1_0_19 = det*w[0][1]*w[0][19]*K[1]*(1.0);
    const double G21_1_1_10 = det*w[0][1]*w[0][10]*K[3]*(1.0);
    const double G21_1_1_11 = det*w[0][1]*w[0][11]*K[3]*(1.0);
    const double G21_1_1_12 = det*w[0][1]*w[0][12]*K[3]*(1.0);
    const double G21_1_1_13 = det*w[0][1]*w[0][13]*K[3]*(1.0);
    const double G21_1_1_14 = det*w[0][1]*w[0][14]*K[3]*(1.0);
    const double G21_1_1_15 = det*w[0][1]*w[0][15]*K[3]*(1.0);
    const double G21_1_1_16 = det*w[0][1]*w[0][16]*K[3]*(1.0);
    const double G21_1_1_17 = det*w[0][1]*w[0][17]*K[3]*(1.0);
    const double G21_1_1_18 = det*w[0][1]*w[0][18]*K[3]*(1.0);
    const double G21_1_1_19 = det*w[0][1]*w[0][19]*K[3]*(1.0);
    const double G21_2_1_10 = det*w[0][2]*w[0][10]*K[3]*(1.0);
    const double G21_2_1_11 = det*w[0][2]*w[0][11]*K[3]*(1.0);
    const double G21_2_1_12 = det*w[0][2]*w[0][12]*K[3]*(1.0);
    const double G21_2_1_13 = det*w[0][2]*w[0][13]*K[3]*(1.0);
    const double G21_2_1_14 = det*w[0][2]*w[0][14]*K[3]*(1.0);
    const double G21_2_1_15 = det*w[0][2]*w[0][15]*K[3]*(1.0);
    const double G21_2_1_16 = det*w[0][2]*w[0][16]*K[3]*(1.0);
    const double G21_2_1_17 = det*w[0][2]*w[0][17]*K[3]*(1.0);
    const double G21_2_1_18 = det*w[0][2]*w[0][18]*K[3]*(1.0);
    const double G21_2_1_19 = det*w[0][2]*w[0][19]*K[3]*(1.0);
    const double G21_3_0_10 = det*w[0][3]*w[0][10]*K[1]*(1.0);
    const double G21_3_0_11 = det*w[0][3]*w[0][11]*K[1]*(1.0);
    const double G21_3_0_12 = det*w[0][3]*w[0][12]*K[1]*(1.0);
    const double G21_3_0_13 = det*w[0][3]*w[0][13]*K[1]*(1.0);
    const double G21_3_0_14 = det*w[0][3]*w[0][14]*K[1]*(1.0);
    const double G21_3_0_15 = det*w[0][3]*w[0][15]*K[1]*(1.0);
    const double G21_3_0_16 = det*w[0][3]*w[0][16]*K[1]*(1.0);
    const double G21_3_0_17 = det*w[0][3]*w[0][17]*K[1]*(1.0);
    const double G21_3_0_18 = det*w[0][3]*w[0][18]*K[1]*(1.0);
    const double G21_3_0_19 = det*w[0][3]*w[0][19]*K[1]*(1.0);
    const double G21_3_1_10 = det*w[0][3]*w[0][10]*K[3]*(1.0);
    const double G21_3_1_11 = det*w[0][3]*w[0][11]*K[3]*(1.0);
    const double G21_3_1_12 = det*w[0][3]*w[0][12]*K[3]*(1.0);
    const double G21_3_1_13 = det*w[0][3]*w[0][13]*K[3]*(1.0);
    const double G21_3_1_14 = det*w[0][3]*w[0][14]*K[3]*(1.0);
    const double G21_3_1_15 = det*w[0][3]*w[0][15]*K[3]*(1.0);
    const double G21_3_1_16 = det*w[0][3]*w[0][16]*K[3]*(1.0);
    const double G21_3_1_17 = det*w[0][3]*w[0][17]*K[3]*(1.0);
    const double G21_3_1_18 = det*w[0][3]*w[0][18]*K[3]*(1.0);
    const double G21_3_1_19 = det*w[0][3]*w[0][19]*K[3]*(1.0);
    const double G21_4_0_10 = det*w[0][4]*w[0][10]*K[1]*(1.0);
    const double G21_4_0_11 = det*w[0][4]*w[0][11]*K[1]*(1.0);
    const double G21_4_0_12 = det*w[0][4]*w[0][12]*K[1]*(1.0);
    const double G21_4_0_13 = det*w[0][4]*w[0][13]*K[1]*(1.0);
    const double G21_4_0_14 = det*w[0][4]*w[0][14]*K[1]*(1.0);
    const double G21_4_0_15 = det*w[0][4]*w[0][15]*K[1]*(1.0);
    const double G21_4_0_16 = det*w[0][4]*w[0][16]*K[1]*(1.0);
    const double G21_4_0_17 = det*w[0][4]*w[0][17]*K[1]*(1.0);
    const double G21_4_0_18 = det*w[0][4]*w[0][18]*K[1]*(1.0);
    const double G21_4_0_19 = det*w[0][4]*w[0][19]*K[1]*(1.0);
    const double G21_4_1_10 = det*w[0][4]*w[0][10]*K[3]*(1.0);
    const double G21_4_1_11 = det*w[0][4]*w[0][11]*K[3]*(1.0);
    const double G21_4_1_12 = det*w[0][4]*w[0][12]*K[3]*(1.0);
    const double G21_4_1_13 = det*w[0][4]*w[0][13]*K[3]*(1.0);
    const double G21_4_1_14 = det*w[0][4]*w[0][14]*K[3]*(1.0);
    const double G21_4_1_15 = det*w[0][4]*w[0][15]*K[3]*(1.0);
    const double G21_4_1_16 = det*w[0][4]*w[0][16]*K[3]*(1.0);
    const double G21_4_1_17 = det*w[0][4]*w[0][17]*K[3]*(1.0);
    const double G21_4_1_18 = det*w[0][4]*w[0][18]*K[3]*(1.0);
    const double G21_4_1_19 = det*w[0][4]*w[0][19]*K[3]*(1.0);
    const double G21_5_0_10 = det*w[0][5]*w[0][10]*K[1]*(1.0);
    const double G21_5_0_11 = det*w[0][5]*w[0][11]*K[1]*(1.0);
    const double G21_5_0_12 = det*w[0][5]*w[0][12]*K[1]*(1.0);
    const double G21_5_0_13 = det*w[0][5]*w[0][13]*K[1]*(1.0);
    const double G21_5_0_14 = det*w[0][5]*w[0][14]*K[1]*(1.0);
    const double G21_5_0_15 = det*w[0][5]*w[0][15]*K[1]*(1.0);
    const double G21_5_0_16 = det*w[0][5]*w[0][16]*K[1]*(1.0);
    const double G21_5_0_17 = det*w[0][5]*w[0][17]*K[1]*(1.0);
    const double G21_5_0_18 = det*w[0][5]*w[0][18]*K[1]*(1.0);
    const double G21_5_0_19 = det*w[0][5]*w[0][19]*K[1]*(1.0);
    const double G21_5_1_10 = det*w[0][5]*w[0][10]*K[3]*(1.0);
    const double G21_5_1_11 = det*w[0][5]*w[0][11]*K[3]*(1.0);
    const double G21_5_1_12 = det*w[0][5]*w[0][12]*K[3]*(1.0);
    const double G21_5_1_13 = det*w[0][5]*w[0][13]*K[3]*(1.0);
    const double G21_5_1_14 = det*w[0][5]*w[0][14]*K[3]*(1.0);
    const double G21_5_1_15 = det*w[0][5]*w[0][15]*K[3]*(1.0);
    const double G21_5_1_16 = det*w[0][5]*w[0][16]*K[3]*(1.0);
    const double G21_5_1_17 = det*w[0][5]*w[0][17]*K[3]*(1.0);
    const double G21_5_1_18 = det*w[0][5]*w[0][18]*K[3]*(1.0);
    const double G21_5_1_19 = det*w[0][5]*w[0][19]*K[3]*(1.0);
    const double G21_6_0_10 = det*w[0][6]*w[0][10]*K[1]*(1.0);
    const double G21_6_0_11 = det*w[0][6]*w[0][11]*K[1]*(1.0);
    const double G21_6_0_12 = det*w[0][6]*w[0][12]*K[1]*(1.0);
    const double G21_6_0_13 = det*w[0][6]*w[0][13]*K[1]*(1.0);
    const double G21_6_0_14 = det*w[0][6]*w[0][14]*K[1]*(1.0);
    const double G21_6_0_15 = det*w[0][6]*w[0][15]*K[1]*(1.0);
    const double G21_6_0_16 = det*w[0][6]*w[0][16]*K[1]*(1.0);
    const double G21_6_0_17 = det*w[0][6]*w[0][17]*K[1]*(1.0);
    const double G21_6_0_18 = det*w[0][6]*w[0][18]*K[1]*(1.0);
    const double G21_6_0_19 = det*w[0][6]*w[0][19]*K[1]*(1.0);
    const double G21_6_1_10 = det*w[0][6]*w[0][10]*K[3]*(1.0);
    const double G21_6_1_11 = det*w[0][6]*w[0][11]*K[3]*(1.0);
    const double G21_6_1_12 = det*w[0][6]*w[0][12]*K[3]*(1.0);
    const double G21_6_1_13 = det*w[0][6]*w[0][13]*K[3]*(1.0);
    const double G21_6_1_14 = det*w[0][6]*w[0][14]*K[3]*(1.0);
    const double G21_6_1_15 = det*w[0][6]*w[0][15]*K[3]*(1.0);
    const double G21_6_1_16 = det*w[0][6]*w[0][16]*K[3]*(1.0);
    const double G21_6_1_17 = det*w[0][6]*w[0][17]*K[3]*(1.0);
    const double G21_6_1_18 = det*w[0][6]*w[0][18]*K[3]*(1.0);
    const double G21_6_1_19 = det*w[0][6]*w[0][19]*K[3]*(1.0);
    const double G21_7_0_10 = det*w[0][7]*w[0][10]*K[1]*(1.0);
    const double G21_7_0_11 = det*w[0][7]*w[0][11]*K[1]*(1.0);
    const double G21_7_0_12 = det*w[0][7]*w[0][12]*K[1]*(1.0);
    const double G21_7_0_13 = det*w[0][7]*w[0][13]*K[1]*(1.0);
    const double G21_7_0_14 = det*w[0][7]*w[0][14]*K[1]*(1.0);
    const double G21_7_0_15 = det*w[0][7]*w[0][15]*K[1]*(1.0);
    const double G21_7_0_16 = det*w[0][7]*w[0][16]*K[1]*(1.0);
    const double G21_7_0_17 = det*w[0][7]*w[0][17]*K[1]*(1.0);
    const double G21_7_0_18 = det*w[0][7]*w[0][18]*K[1]*(1.0);
    const double G21_7_0_19 = det*w[0][7]*w[0][19]*K[1]*(1.0);
    const double G21_7_1_10 = det*w[0][7]*w[0][10]*K[3]*(1.0);
    const double G21_7_1_11 = det*w[0][7]*w[0][11]*K[3]*(1.0);
    const double G21_7_1_12 = det*w[0][7]*w[0][12]*K[3]*(1.0);
    const double G21_7_1_13 = det*w[0][7]*w[0][13]*K[3]*(1.0);
    const double G21_7_1_14 = det*w[0][7]*w[0][14]*K[3]*(1.0);
    const double G21_7_1_15 = det*w[0][7]*w[0][15]*K[3]*(1.0);
    const double G21_7_1_16 = det*w[0][7]*w[0][16]*K[3]*(1.0);
    const double G21_7_1_17 = det*w[0][7]*w[0][17]*K[3]*(1.0);
    const double G21_7_1_18 = det*w[0][7]*w[0][18]*K[3]*(1.0);
    const double G21_7_1_19 = det*w[0][7]*w[0][19]*K[3]*(1.0);
    const double G21_8_0_10 = det*w[0][8]*w[0][10]*K[1]*(1.0);
    const double G21_8_0_11 = det*w[0][8]*w[0][11]*K[1]*(1.0);
    const double G21_8_0_12 = det*w[0][8]*w[0][12]*K[1]*(1.0);
    const double G21_8_0_13 = det*w[0][8]*w[0][13]*K[1]*(1.0);
    const double G21_8_0_14 = det*w[0][8]*w[0][14]*K[1]*(1.0);
    const double G21_8_0_15 = det*w[0][8]*w[0][15]*K[1]*(1.0);
    const double G21_8_0_16 = det*w[0][8]*w[0][16]*K[1]*(1.0);
    const double G21_8_0_17 = det*w[0][8]*w[0][17]*K[1]*(1.0);
    const double G21_8_0_18 = det*w[0][8]*w[0][18]*K[1]*(1.0);
    const double G21_8_0_19 = det*w[0][8]*w[0][19]*K[1]*(1.0);
    const double G21_8_1_10 = det*w[0][8]*w[0][10]*K[3]*(1.0);
    const double G21_8_1_11 = det*w[0][8]*w[0][11]*K[3]*(1.0);
    const double G21_8_1_12 = det*w[0][8]*w[0][12]*K[3]*(1.0);
    const double G21_8_1_13 = det*w[0][8]*w[0][13]*K[3]*(1.0);
    const double G21_8_1_14 = det*w[0][8]*w[0][14]*K[3]*(1.0);
    const double G21_8_1_15 = det*w[0][8]*w[0][15]*K[3]*(1.0);
    const double G21_8_1_16 = det*w[0][8]*w[0][16]*K[3]*(1.0);
    const double G21_8_1_17 = det*w[0][8]*w[0][17]*K[3]*(1.0);
    const double G21_8_1_18 = det*w[0][8]*w[0][18]*K[3]*(1.0);
    const double G21_8_1_19 = det*w[0][8]*w[0][19]*K[3]*(1.0);
    const double G21_9_0_10 = det*w[0][9]*w[0][10]*K[1]*(1.0);
    const double G21_9_0_11 = det*w[0][9]*w[0][11]*K[1]*(1.0);
    const double G21_9_0_12 = det*w[0][9]*w[0][12]*K[1]*(1.0);
    const double G21_9_0_13 = det*w[0][9]*w[0][13]*K[1]*(1.0);
    const double G21_9_0_14 = det*w[0][9]*w[0][14]*K[1]*(1.0);
    const double G21_9_0_15 = det*w[0][9]*w[0][15]*K[1]*(1.0);
    const double G21_9_0_16 = det*w[0][9]*w[0][16]*K[1]*(1.0);
    const double G21_9_0_17 = det*w[0][9]*w[0][17]*K[1]*(1.0);
    const double G21_9_0_18 = det*w[0][9]*w[0][18]*K[1]*(1.0);
    const double G21_9_0_19 = det*w[0][9]*w[0][19]*K[1]*(1.0);
    const double G21_9_1_10 = det*w[0][9]*w[0][10]*K[3]*(1.0);
    const double G21_9_1_11 = det*w[0][9]*w[0][11]*K[3]*(1.0);
    const double G21_9_1_12 = det*w[0][9]*w[0][12]*K[3]*(1.0);
    const double G21_9_1_13 = det*w[0][9]*w[0][13]*K[3]*(1.0);
    const double G21_9_1_14 = det*w[0][9]*w[0][14]*K[3]*(1.0);
    const double G21_9_1_15 = det*w[0][9]*w[0][15]*K[3]*(1.0);
    const double G21_9_1_16 = det*w[0][9]*w[0][16]*K[3]*(1.0);
    const double G21_9_1_17 = det*w[0][9]*w[0][17]*K[3]*(1.0);
    const double G21_9_1_18 = det*w[0][9]*w[0][18]*K[3]*(1.0);
    const double G21_9_1_19 = det*w[0][9]*w[0][19]*K[3]*(1.0);
    const double G22_0_10_0 = det*w[0][0]*w[0][10]*K[0]*(1.0);
    const double G22_0_10_1 = det*w[0][0]*w[0][10]*K[2]*(1.0);
    const double G22_0_11_0 = det*w[0][0]*w[0][11]*K[0]*(1.0);
    const double G22_0_11_1 = det*w[0][0]*w[0][11]*K[2]*(1.0);
    const double G22_0_12_1 = det*w[0][0]*w[0][12]*K[2]*(1.0);
    const double G22_0_13_0 = det*w[0][0]*w[0][13]*K[0]*(1.0);
    const double G22_0_13_1 = det*w[0][0]*w[0][13]*K[2]*(1.0);
    const double G22_0_14_0 = det*w[0][0]*w[0][14]*K[0]*(1.0);
    const double G22_0_14_1 = det*w[0][0]*w[0][14]*K[2]*(1.0);
    const double G22_0_15_0 = det*w[0][0]*w[0][15]*K[0]*(1.0);
    const double G22_0_15_1 = det*w[0][0]*w[0][15]*K[2]*(1.0);
    const double G22_0_16_0 = det*w[0][0]*w[0][16]*K[0]*(1.0);
    const double G22_0_16_1 = det*w[0][0]*w[0][16]*K[2]*(1.0);
    const double G22_0_17_0 = det*w[0][0]*w[0][17]*K[0]*(1.0);
    const double G22_0_17_1 = det*w[0][0]*w[0][17]*K[2]*(1.0);
    const double G22_0_18_0 = det*w[0][0]*w[0][18]*K[0]*(1.0);
    const double G22_0_18_1 = det*w[0][0]*w[0][18]*K[2]*(1.0);
    const double G22_0_19_0 = det*w[0][0]*w[0][19]*K[0]*(1.0);
    const double G22_0_19_1 = det*w[0][0]*w[0][19]*K[2]*(1.0);
    const double G22_1_10_0 = det*w[0][1]*w[0][10]*K[0]*(1.0);
    const double G22_1_10_1 = det*w[0][1]*w[0][10]*K[2]*(1.0);
    const double G22_1_11_0 = det*w[0][1]*w[0][11]*K[0]*(1.0);
    const double G22_1_11_1 = det*w[0][1]*w[0][11]*K[2]*(1.0);
    const double G22_1_12_1 = det*w[0][1]*w[0][12]*K[2]*(1.0);
    const double G22_1_13_0 = det*w[0][1]*w[0][13]*K[0]*(1.0);
    const double G22_1_13_1 = det*w[0][1]*w[0][13]*K[2]*(1.0);
    const double G22_1_14_0 = det*w[0][1]*w[0][14]*K[0]*(1.0);
    const double G22_1_14_1 = det*w[0][1]*w[0][14]*K[2]*(1.0);
    const double G22_1_15_0 = det*w[0][1]*w[0][15]*K[0]*(1.0);
    const double G22_1_15_1 = det*w[0][1]*w[0][15]*K[2]*(1.0);
    const double G22_1_16_0 = det*w[0][1]*w[0][16]*K[0]*(1.0);
    const double G22_1_16_1 = det*w[0][1]*w[0][16]*K[2]*(1.0);
    const double G22_1_17_0 = det*w[0][1]*w[0][17]*K[0]*(1.0);
    const double G22_1_17_1 = det*w[0][1]*w[0][17]*K[2]*(1.0);
    const double G22_1_18_0 = det*w[0][1]*w[0][18]*K[0]*(1.0);
    const double G22_1_18_1 = det*w[0][1]*w[0][18]*K[2]*(1.0);
    const double G22_1_19_0 = det*w[0][1]*w[0][19]*K[0]*(1.0);
    const double G22_1_19_1 = det*w[0][1]*w[0][19]*K[2]*(1.0);
    const double G22_2_10_0 = det*w[0][2]*w[0][10]*K[0]*(1.0);
    const double G22_2_10_1 = det*w[0][2]*w[0][10]*K[2]*(1.0);
    const double G22_2_11_0 = det*w[0][2]*w[0][11]*K[0]*(1.0);
    const double G22_2_11_1 = det*w[0][2]*w[0][11]*K[2]*(1.0);
    const double G22_2_12_1 = det*w[0][2]*w[0][12]*K[2]*(1.0);
    const double G22_2_13_0 = det*w[0][2]*w[0][13]*K[0]*(1.0);
    const double G22_2_13_1 = det*w[0][2]*w[0][13]*K[2]*(1.0);
    const double G22_2_14_0 = det*w[0][2]*w[0][14]*K[0]*(1.0);
    const double G22_2_14_1 = det*w[0][2]*w[0][14]*K[2]*(1.0);
    const double G22_2_15_0 = det*w[0][2]*w[0][15]*K[0]*(1.0);
    const double G22_2_15_1 = det*w[0][2]*w[0][15]*K[2]*(1.0);
    const double G22_2_16_0 = det*w[0][2]*w[0][16]*K[0]*(1.0);
    const double G22_2_16_1 = det*w[0][2]*w[0][16]*K[2]*(1.0);
    const double G22_2_17_0 = det*w[0][2]*w[0][17]*K[0]*(1.0);
    const double G22_2_17_1 = det*w[0][2]*w[0][17]*K[2]*(1.0);
    const double G22_2_18_0 = det*w[0][2]*w[0][18]*K[0]*(1.0);
    const double G22_2_18_1 = det*w[0][2]*w[0][18]*K[2]*(1.0);
    const double G22_2_19_0 = det*w[0][2]*w[0][19]*K[0]*(1.0);
    const double G22_2_19_1 = det*w[0][2]*w[0][19]*K[2]*(1.0);
    const double G22_3_10_0 = det*w[0][3]*w[0][10]*K[0]*(1.0);
    const double G22_3_10_1 = det*w[0][3]*w[0][10]*K[2]*(1.0);
    const double G22_3_11_0 = det*w[0][3]*w[0][11]*K[0]*(1.0);
    const double G22_3_11_1 = det*w[0][3]*w[0][11]*K[2]*(1.0);
    const double G22_3_12_1 = det*w[0][3]*w[0][12]*K[2]*(1.0);
    const double G22_3_13_0 = det*w[0][3]*w[0][13]*K[0]*(1.0);
    const double G22_3_13_1 = det*w[0][3]*w[0][13]*K[2]*(1.0);
    const double G22_3_14_0 = det*w[0][3]*w[0][14]*K[0]*(1.0);
    const double G22_3_14_1 = det*w[0][3]*w[0][14]*K[2]*(1.0);
    const double G22_3_15_0 = det*w[0][3]*w[0][15]*K[0]*(1.0);
    const double G22_3_15_1 = det*w[0][3]*w[0][15]*K[2]*(1.0);
    const double G22_3_16_0 = det*w[0][3]*w[0][16]*K[0]*(1.0);
    const double G22_3_16_1 = det*w[0][3]*w[0][16]*K[2]*(1.0);
    const double G22_3_17_0 = det*w[0][3]*w[0][17]*K[0]*(1.0);
    const double G22_3_17_1 = det*w[0][3]*w[0][17]*K[2]*(1.0);
    const double G22_3_18_0 = det*w[0][3]*w[0][18]*K[0]*(1.0);
    const double G22_3_18_1 = det*w[0][3]*w[0][18]*K[2]*(1.0);
    const double G22_3_19_0 = det*w[0][3]*w[0][19]*K[0]*(1.0);
    const double G22_3_19_1 = det*w[0][3]*w[0][19]*K[2]*(1.0);
    const double G22_4_10_0 = det*w[0][4]*w[0][10]*K[0]*(1.0);
    const double G22_4_10_1 = det*w[0][4]*w[0][10]*K[2]*(1.0);
    const double G22_4_11_0 = det*w[0][4]*w[0][11]*K[0]*(1.0);
    const double G22_4_11_1 = det*w[0][4]*w[0][11]*K[2]*(1.0);
    const double G22_4_12_1 = det*w[0][4]*w[0][12]*K[2]*(1.0);
    const double G22_4_13_0 = det*w[0][4]*w[0][13]*K[0]*(1.0);
    const double G22_4_13_1 = det*w[0][4]*w[0][13]*K[2]*(1.0);
    const double G22_4_14_0 = det*w[0][4]*w[0][14]*K[0]*(1.0);
    const double G22_4_14_1 = det*w[0][4]*w[0][14]*K[2]*(1.0);
    const double G22_4_15_0 = det*w[0][4]*w[0][15]*K[0]*(1.0);
    const double G22_4_15_1 = det*w[0][4]*w[0][15]*K[2]*(1.0);
    const double G22_4_16_0 = det*w[0][4]*w[0][16]*K[0]*(1.0);
    const double G22_4_16_1 = det*w[0][4]*w[0][16]*K[2]*(1.0);
    const double G22_4_17_0 = det*w[0][4]*w[0][17]*K[0]*(1.0);
    const double G22_4_17_1 = det*w[0][4]*w[0][17]*K[2]*(1.0);
    const double G22_4_18_0 = det*w[0][4]*w[0][18]*K[0]*(1.0);
    const double G22_4_18_1 = det*w[0][4]*w[0][18]*K[2]*(1.0);
    const double G22_4_19_0 = det*w[0][4]*w[0][19]*K[0]*(1.0);
    const double G22_4_19_1 = det*w[0][4]*w[0][19]*K[2]*(1.0);
    const double G22_5_10_0 = det*w[0][5]*w[0][10]*K[0]*(1.0);
    const double G22_5_10_1 = det*w[0][5]*w[0][10]*K[2]*(1.0);
    const double G22_5_11_0 = det*w[0][5]*w[0][11]*K[0]*(1.0);
    const double G22_5_11_1 = det*w[0][5]*w[0][11]*K[2]*(1.0);
    const double G22_5_12_1 = det*w[0][5]*w[0][12]*K[2]*(1.0);
    const double G22_5_13_0 = det*w[0][5]*w[0][13]*K[0]*(1.0);
    const double G22_5_13_1 = det*w[0][5]*w[0][13]*K[2]*(1.0);
    const double G22_5_14_0 = det*w[0][5]*w[0][14]*K[0]*(1.0);
    const double G22_5_14_1 = det*w[0][5]*w[0][14]*K[2]*(1.0);
    const double G22_5_15_0 = det*w[0][5]*w[0][15]*K[0]*(1.0);
    const double G22_5_15_1 = det*w[0][5]*w[0][15]*K[2]*(1.0);
    const double G22_5_16_0 = det*w[0][5]*w[0][16]*K[0]*(1.0);
    const double G22_5_16_1 = det*w[0][5]*w[0][16]*K[2]*(1.0);
    const double G22_5_17_0 = det*w[0][5]*w[0][17]*K[0]*(1.0);
    const double G22_5_17_1 = det*w[0][5]*w[0][17]*K[2]*(1.0);
    const double G22_5_18_0 = det*w[0][5]*w[0][18]*K[0]*(1.0);
    const double G22_5_18_1 = det*w[0][5]*w[0][18]*K[2]*(1.0);
    const double G22_5_19_0 = det*w[0][5]*w[0][19]*K[0]*(1.0);
    const double G22_5_19_1 = det*w[0][5]*w[0][19]*K[2]*(1.0);
    const double G22_6_10_0 = det*w[0][6]*w[0][10]*K[0]*(1.0);
    const double G22_6_10_1 = det*w[0][6]*w[0][10]*K[2]*(1.0);
    const double G22_6_11_0 = det*w[0][6]*w[0][11]*K[0]*(1.0);
    const double G22_6_11_1 = det*w[0][6]*w[0][11]*K[2]*(1.0);
    const double G22_6_12_1 = det*w[0][6]*w[0][12]*K[2]*(1.0);
    const double G22_6_13_0 = det*w[0][6]*w[0][13]*K[0]*(1.0);
    const double G22_6_13_1 = det*w[0][6]*w[0][13]*K[2]*(1.0);
    const double G22_6_14_0 = det*w[0][6]*w[0][14]*K[0]*(1.0);
    const double G22_6_14_1 = det*w[0][6]*w[0][14]*K[2]*(1.0);
    const double G22_6_15_0 = det*w[0][6]*w[0][15]*K[0]*(1.0);
    const double G22_6_15_1 = det*w[0][6]*w[0][15]*K[2]*(1.0);
    const double G22_6_16_0 = det*w[0][6]*w[0][16]*K[0]*(1.0);
    const double G22_6_16_1 = det*w[0][6]*w[0][16]*K[2]*(1.0);
    const double G22_6_17_0 = det*w[0][6]*w[0][17]*K[0]*(1.0);
    const double G22_6_17_1 = det*w[0][6]*w[0][17]*K[2]*(1.0);
    const double G22_6_18_0 = det*w[0][6]*w[0][18]*K[0]*(1.0);
    const double G22_6_18_1 = det*w[0][6]*w[0][18]*K[2]*(1.0);
    const double G22_6_19_0 = det*w[0][6]*w[0][19]*K[0]*(1.0);
    const double G22_6_19_1 = det*w[0][6]*w[0][19]*K[2]*(1.0);
    const double G22_7_10_0 = det*w[0][7]*w[0][10]*K[0]*(1.0);
    const double G22_7_10_1 = det*w[0][7]*w[0][10]*K[2]*(1.0);
    const double G22_7_11_0 = det*w[0][7]*w[0][11]*K[0]*(1.0);
    const double G22_7_11_1 = det*w[0][7]*w[0][11]*K[2]*(1.0);
    const double G22_7_12_1 = det*w[0][7]*w[0][12]*K[2]*(1.0);
    const double G22_7_13_0 = det*w[0][7]*w[0][13]*K[0]*(1.0);
    const double G22_7_13_1 = det*w[0][7]*w[0][13]*K[2]*(1.0);
    const double G22_7_14_0 = det*w[0][7]*w[0][14]*K[0]*(1.0);
    const double G22_7_14_1 = det*w[0][7]*w[0][14]*K[2]*(1.0);
    const double G22_7_15_0 = det*w[0][7]*w[0][15]*K[0]*(1.0);
    const double G22_7_15_1 = det*w[0][7]*w[0][15]*K[2]*(1.0);
    const double G22_7_16_0 = det*w[0][7]*w[0][16]*K[0]*(1.0);
    const double G22_7_16_1 = det*w[0][7]*w[0][16]*K[2]*(1.0);
    const double G22_7_17_0 = det*w[0][7]*w[0][17]*K[0]*(1.0);
    const double G22_7_17_1 = det*w[0][7]*w[0][17]*K[2]*(1.0);
    const double G22_7_18_0 = det*w[0][7]*w[0][18]*K[0]*(1.0);
    const double G22_7_18_1 = det*w[0][7]*w[0][18]*K[2]*(1.0);
    const double G22_7_19_0 = det*w[0][7]*w[0][19]*K[0]*(1.0);
    const double G22_7_19_1 = det*w[0][7]*w[0][19]*K[2]*(1.0);
    const double G22_8_10_0 = det*w[0][8]*w[0][10]*K[0]*(1.0);
    const double G22_8_10_1 = det*w[0][8]*w[0][10]*K[2]*(1.0);
    const double G22_8_11_0 = det*w[0][8]*w[0][11]*K[0]*(1.0);
    const double G22_8_11_1 = det*w[0][8]*w[0][11]*K[2]*(1.0);
    const double G22_8_12_1 = det*w[0][8]*w[0][12]*K[2]*(1.0);
    const double G22_8_13_0 = det*w[0][8]*w[0][13]*K[0]*(1.0);
    const double G22_8_13_1 = det*w[0][8]*w[0][13]*K[2]*(1.0);
    const double G22_8_14_0 = det*w[0][8]*w[0][14]*K[0]*(1.0);
    const double G22_8_14_1 = det*w[0][8]*w[0][14]*K[2]*(1.0);
    const double G22_8_15_0 = det*w[0][8]*w[0][15]*K[0]*(1.0);
    const double G22_8_15_1 = det*w[0][8]*w[0][15]*K[2]*(1.0);
    const double G22_8_16_0 = det*w[0][8]*w[0][16]*K[0]*(1.0);
    const double G22_8_16_1 = det*w[0][8]*w[0][16]*K[2]*(1.0);
    const double G22_8_17_0 = det*w[0][8]*w[0][17]*K[0]*(1.0);
    const double G22_8_17_1 = det*w[0][8]*w[0][17]*K[2]*(1.0);
    const double G22_8_18_0 = det*w[0][8]*w[0][18]*K[0]*(1.0);
    const double G22_8_18_1 = det*w[0][8]*w[0][18]*K[2]*(1.0);
    const double G22_8_19_0 = det*w[0][8]*w[0][19]*K[0]*(1.0);
    const double G22_8_19_1 = det*w[0][8]*w[0][19]*K[2]*(1.0);
    const double G22_9_10_0 = det*w[0][9]*w[0][10]*K[0]*(1.0);
    const double G22_9_10_1 = det*w[0][9]*w[0][10]*K[2]*(1.0);
    const double G22_9_11_0 = det*w[0][9]*w[0][11]*K[0]*(1.0);
    const double G22_9_11_1 = det*w[0][9]*w[0][11]*K[2]*(1.0);
    const double G22_9_12_1 = det*w[0][9]*w[0][12]*K[2]*(1.0);
    const double G22_9_13_0 = det*w[0][9]*w[0][13]*K[0]*(1.0);
    const double G22_9_13_1 = det*w[0][9]*w[0][13]*K[2]*(1.0);
    const double G22_9_14_0 = det*w[0][9]*w[0][14]*K[0]*(1.0);
    const double G22_9_14_1 = det*w[0][9]*w[0][14]*K[2]*(1.0);
    const double G22_9_15_0 = det*w[0][9]*w[0][15]*K[0]*(1.0);
    const double G22_9_15_1 = det*w[0][9]*w[0][15]*K[2]*(1.0);
    const double G22_9_16_0 = det*w[0][9]*w[0][16]*K[0]*(1.0);
    const double G22_9_16_1 = det*w[0][9]*w[0][16]*K[2]*(1.0);
    const double G22_9_17_0 = det*w[0][9]*w[0][17]*K[0]*(1.0);
    const double G22_9_17_1 = det*w[0][9]*w[0][17]*K[2]*(1.0);
    const double G22_9_18_0 = det*w[0][9]*w[0][18]*K[0]*(1.0);
    const double G22_9_18_1 = det*w[0][9]*w[0][18]*K[2]*(1.0);
    const double G22_9_19_0 = det*w[0][9]*w[0][19]*K[0]*(1.0);
    const double G22_9_19_1 = det*w[0][9]*w[0][19]*K[2]*(1.0);
    const double G23_10_10_0 = det*w[0][10]*w[0][10]*K[1]*(1.0);
    const double G23_10_10_1 = det*w[0][10]*w[0][10]*K[3]*(1.0);
    const double G23_10_11_0 = det*w[0][10]*w[0][11]*K[1]*(1.0);
    const double G23_10_11_1 = det*w[0][10]*w[0][11]*K[3]*(1.0);
    const double G23_10_12_1 = det*w[0][10]*w[0][12]*K[3]*(1.0);
    const double G23_10_13_0 = det*w[0][10]*w[0][13]*K[1]*(1.0);
    const double G23_10_13_1 = det*w[0][10]*w[0][13]*K[3]*(1.0);
    const double G23_10_14_0 = det*w[0][10]*w[0][14]*K[1]*(1.0);
    const double G23_10_14_1 = det*w[0][10]*w[0][14]*K[3]*(1.0);
    const double G23_10_15_0 = det*w[0][10]*w[0][15]*K[1]*(1.0);
    const double G23_10_15_1 = det*w[0][10]*w[0][15]*K[3]*(1.0);
    const double G23_10_16_0 = det*w[0][10]*w[0][16]*K[1]*(1.0);
    const double G23_10_16_1 = det*w[0][10]*w[0][16]*K[3]*(1.0);
    const double G23_10_17_0 = det*w[0][10]*w[0][17]*K[1]*(1.0);
    const double G23_10_17_1 = det*w[0][10]*w[0][17]*K[3]*(1.0);
    const double G23_10_18_0 = det*w[0][10]*w[0][18]*K[1]*(1.0);
    const double G23_10_18_1 = det*w[0][10]*w[0][18]*K[3]*(1.0);
    const double G23_10_19_0 = det*w[0][10]*w[0][19]*K[1]*(1.0);
    const double G23_10_19_1 = det*w[0][10]*w[0][19]*K[3]*(1.0);
    const double G23_11_10_0 = det*w[0][11]*w[0][10]*K[1]*(1.0);
    const double G23_11_10_1 = det*w[0][11]*w[0][10]*K[3]*(1.0);
    const double G23_11_11_0 = det*w[0][11]*w[0][11]*K[1]*(1.0);
    const double G23_11_11_1 = det*w[0][11]*w[0][11]*K[3]*(1.0);
    const double G23_11_12_1 = det*w[0][11]*w[0][12]*K[3]*(1.0);
    const double G23_11_13_0 = det*w[0][11]*w[0][13]*K[1]*(1.0);
    const double G23_11_13_1 = det*w[0][11]*w[0][13]*K[3]*(1.0);
    const double G23_11_14_0 = det*w[0][11]*w[0][14]*K[1]*(1.0);
    const double G23_11_14_1 = det*w[0][11]*w[0][14]*K[3]*(1.0);
    const double G23_11_15_0 = det*w[0][11]*w[0][15]*K[1]*(1.0);
    const double G23_11_15_1 = det*w[0][11]*w[0][15]*K[3]*(1.0);
    const double G23_11_16_0 = det*w[0][11]*w[0][16]*K[1]*(1.0);
    const double G23_11_16_1 = det*w[0][11]*w[0][16]*K[3]*(1.0);
    const double G23_11_17_0 = det*w[0][11]*w[0][17]*K[1]*(1.0);
    const double G23_11_17_1 = det*w[0][11]*w[0][17]*K[3]*(1.0);
    const double G23_11_18_0 = det*w[0][11]*w[0][18]*K[1]*(1.0);
    const double G23_11_18_1 = det*w[0][11]*w[0][18]*K[3]*(1.0);
    const double G23_11_19_0 = det*w[0][11]*w[0][19]*K[1]*(1.0);
    const double G23_11_19_1 = det*w[0][11]*w[0][19]*K[3]*(1.0);
    const double G23_12_10_0 = det*w[0][12]*w[0][10]*K[1]*(1.0);
    const double G23_12_10_1 = det*w[0][12]*w[0][10]*K[3]*(1.0);
    const double G23_12_11_0 = det*w[0][12]*w[0][11]*K[1]*(1.0);
    const double G23_12_11_1 = det*w[0][12]*w[0][11]*K[3]*(1.0);
    const double G23_12_12_1 = det*w[0][12]*w[0][12]*K[3]*(1.0);
    const double G23_12_13_0 = det*w[0][12]*w[0][13]*K[1]*(1.0);
    const double G23_12_13_1 = det*w[0][12]*w[0][13]*K[3]*(1.0);
    const double G23_12_14_0 = det*w[0][12]*w[0][14]*K[1]*(1.0);
    const double G23_12_14_1 = det*w[0][12]*w[0][14]*K[3]*(1.0);
    const double G23_12_15_0 = det*w[0][12]*w[0][15]*K[1]*(1.0);
    const double G23_12_15_1 = det*w[0][12]*w[0][15]*K[3]*(1.0);
    const double G23_12_16_0 = det*w[0][12]*w[0][16]*K[1]*(1.0);
    const double G23_12_16_1 = det*w[0][12]*w[0][16]*K[3]*(1.0);
    const double G23_12_17_0 = det*w[0][12]*w[0][17]*K[1]*(1.0);
    const double G23_12_17_1 = det*w[0][12]*w[0][17]*K[3]*(1.0);
    const double G23_12_18_0 = det*w[0][12]*w[0][18]*K[1]*(1.0);
    const double G23_12_18_1 = det*w[0][12]*w[0][18]*K[3]*(1.0);
    const double G23_12_19_0 = det*w[0][12]*w[0][19]*K[1]*(1.0);
    const double G23_12_19_1 = det*w[0][12]*w[0][19]*K[3]*(1.0);
    const double G23_13_10_0 = det*w[0][13]*w[0][10]*K[1]*(1.0);
    const double G23_13_10_1 = det*w[0][13]*w[0][10]*K[3]*(1.0);
    const double G23_13_11_0 = det*w[0][13]*w[0][11]*K[1]*(1.0);
    const double G23_13_11_1 = det*w[0][13]*w[0][11]*K[3]*(1.0);
    const double G23_13_12_1 = det*w[0][13]*w[0][12]*K[3]*(1.0);
    const double G23_13_13_0 = det*w[0][13]*w[0][13]*K[1]*(1.0);
    const double G23_13_13_1 = det*w[0][13]*w[0][13]*K[3]*(1.0);
    const double G23_13_14_0 = det*w[0][13]*w[0][14]*K[1]*(1.0);
    const double G23_13_14_1 = det*w[0][13]*w[0][14]*K[3]*(1.0);
    const double G23_13_15_0 = det*w[0][13]*w[0][15]*K[1]*(1.0);
    const double G23_13_15_1 = det*w[0][13]*w[0][15]*K[3]*(1.0);
    const double G23_13_16_0 = det*w[0][13]*w[0][16]*K[1]*(1.0);
    const double G23_13_16_1 = det*w[0][13]*w[0][16]*K[3]*(1.0);
    const double G23_13_17_0 = det*w[0][13]*w[0][17]*K[1]*(1.0);
    const double G23_13_17_1 = det*w[0][13]*w[0][17]*K[3]*(1.0);
    const double G23_13_18_0 = det*w[0][13]*w[0][18]*K[1]*(1.0);
    const double G23_13_18_1 = det*w[0][13]*w[0][18]*K[3]*(1.0);
    const double G23_13_19_0 = det*w[0][13]*w[0][19]*K[1]*(1.0);
    const double G23_13_19_1 = det*w[0][13]*w[0][19]*K[3]*(1.0);
    const double G23_14_10_0 = det*w[0][14]*w[0][10]*K[1]*(1.0);
    const double G23_14_10_1 = det*w[0][14]*w[0][10]*K[3]*(1.0);
    const double G23_14_11_0 = det*w[0][14]*w[0][11]*K[1]*(1.0);
    const double G23_14_11_1 = det*w[0][14]*w[0][11]*K[3]*(1.0);
    const double G23_14_12_1 = det*w[0][14]*w[0][12]*K[3]*(1.0);
    const double G23_14_13_0 = det*w[0][14]*w[0][13]*K[1]*(1.0);
    const double G23_14_13_1 = det*w[0][14]*w[0][13]*K[3]*(1.0);
    const double G23_14_14_0 = det*w[0][14]*w[0][14]*K[1]*(1.0);
    const double G23_14_14_1 = det*w[0][14]*w[0][14]*K[3]*(1.0);
    const double G23_14_15_0 = det*w[0][14]*w[0][15]*K[1]*(1.0);
    const double G23_14_15_1 = det*w[0][14]*w[0][15]*K[3]*(1.0);
    const double G23_14_16_0 = det*w[0][14]*w[0][16]*K[1]*(1.0);
    const double G23_14_16_1 = det*w[0][14]*w[0][16]*K[3]*(1.0);
    const double G23_14_17_0 = det*w[0][14]*w[0][17]*K[1]*(1.0);
    const double G23_14_17_1 = det*w[0][14]*w[0][17]*K[3]*(1.0);
    const double G23_14_18_0 = det*w[0][14]*w[0][18]*K[1]*(1.0);
    const double G23_14_18_1 = det*w[0][14]*w[0][18]*K[3]*(1.0);
    const double G23_14_19_0 = det*w[0][14]*w[0][19]*K[1]*(1.0);
    const double G23_14_19_1 = det*w[0][14]*w[0][19]*K[3]*(1.0);
    const double G23_15_10_0 = det*w[0][15]*w[0][10]*K[1]*(1.0);
    const double G23_15_10_1 = det*w[0][15]*w[0][10]*K[3]*(1.0);
    const double G23_15_11_0 = det*w[0][15]*w[0][11]*K[1]*(1.0);
    const double G23_15_11_1 = det*w[0][15]*w[0][11]*K[3]*(1.0);
    const double G23_15_12_1 = det*w[0][15]*w[0][12]*K[3]*(1.0);
    const double G23_15_13_0 = det*w[0][15]*w[0][13]*K[1]*(1.0);
    const double G23_15_13_1 = det*w[0][15]*w[0][13]*K[3]*(1.0);
    const double G23_15_14_0 = det*w[0][15]*w[0][14]*K[1]*(1.0);
    const double G23_15_14_1 = det*w[0][15]*w[0][14]*K[3]*(1.0);
    const double G23_15_15_0 = det*w[0][15]*w[0][15]*K[1]*(1.0);
    const double G23_15_15_1 = det*w[0][15]*w[0][15]*K[3]*(1.0);
    const double G23_15_16_0 = det*w[0][15]*w[0][16]*K[1]*(1.0);
    const double G23_15_16_1 = det*w[0][15]*w[0][16]*K[3]*(1.0);
    const double G23_15_17_0 = det*w[0][15]*w[0][17]*K[1]*(1.0);
    const double G23_15_17_1 = det*w[0][15]*w[0][17]*K[3]*(1.0);
    const double G23_15_18_0 = det*w[0][15]*w[0][18]*K[1]*(1.0);
    const double G23_15_18_1 = det*w[0][15]*w[0][18]*K[3]*(1.0);
    const double G23_15_19_0 = det*w[0][15]*w[0][19]*K[1]*(1.0);
    const double G23_15_19_1 = det*w[0][15]*w[0][19]*K[3]*(1.0);
    const double G23_16_10_0 = det*w[0][16]*w[0][10]*K[1]*(1.0);
    const double G23_16_10_1 = det*w[0][16]*w[0][10]*K[3]*(1.0);
    const double G23_16_11_0 = det*w[0][16]*w[0][11]*K[1]*(1.0);
    const double G23_16_11_1 = det*w[0][16]*w[0][11]*K[3]*(1.0);
    const double G23_16_12_1 = det*w[0][16]*w[0][12]*K[3]*(1.0);
    const double G23_16_13_0 = det*w[0][16]*w[0][13]*K[1]*(1.0);
    const double G23_16_13_1 = det*w[0][16]*w[0][13]*K[3]*(1.0);
    const double G23_16_14_0 = det*w[0][16]*w[0][14]*K[1]*(1.0);
    const double G23_16_14_1 = det*w[0][16]*w[0][14]*K[3]*(1.0);
    const double G23_16_15_0 = det*w[0][16]*w[0][15]*K[1]*(1.0);
    const double G23_16_15_1 = det*w[0][16]*w[0][15]*K[3]*(1.0);
    const double G23_16_16_0 = det*w[0][16]*w[0][16]*K[1]*(1.0);
    const double G23_16_16_1 = det*w[0][16]*w[0][16]*K[3]*(1.0);
    const double G23_16_17_0 = det*w[0][16]*w[0][17]*K[1]*(1.0);
    const double G23_16_17_1 = det*w[0][16]*w[0][17]*K[3]*(1.0);
    const double G23_16_18_0 = det*w[0][16]*w[0][18]*K[1]*(1.0);
    const double G23_16_18_1 = det*w[0][16]*w[0][18]*K[3]*(1.0);
    const double G23_16_19_0 = det*w[0][16]*w[0][19]*K[1]*(1.0);
    const double G23_16_19_1 = det*w[0][16]*w[0][19]*K[3]*(1.0);
    const double G23_17_10_0 = det*w[0][17]*w[0][10]*K[1]*(1.0);
    const double G23_17_10_1 = det*w[0][17]*w[0][10]*K[3]*(1.0);
    const double G23_17_11_0 = det*w[0][17]*w[0][11]*K[1]*(1.0);
    const double G23_17_11_1 = det*w[0][17]*w[0][11]*K[3]*(1.0);
    const double G23_17_12_1 = det*w[0][17]*w[0][12]*K[3]*(1.0);
    const double G23_17_13_0 = det*w[0][17]*w[0][13]*K[1]*(1.0);
    const double G23_17_13_1 = det*w[0][17]*w[0][13]*K[3]*(1.0);
    const double G23_17_14_0 = det*w[0][17]*w[0][14]*K[1]*(1.0);
    const double G23_17_14_1 = det*w[0][17]*w[0][14]*K[3]*(1.0);
    const double G23_17_15_0 = det*w[0][17]*w[0][15]*K[1]*(1.0);
    const double G23_17_15_1 = det*w[0][17]*w[0][15]*K[3]*(1.0);
    const double G23_17_16_0 = det*w[0][17]*w[0][16]*K[1]*(1.0);
    const double G23_17_16_1 = det*w[0][17]*w[0][16]*K[3]*(1.0);
    const double G23_17_17_0 = det*w[0][17]*w[0][17]*K[1]*(1.0);
    const double G23_17_17_1 = det*w[0][17]*w[0][17]*K[3]*(1.0);
    const double G23_17_18_0 = det*w[0][17]*w[0][18]*K[1]*(1.0);
    const double G23_17_18_1 = det*w[0][17]*w[0][18]*K[3]*(1.0);
    const double G23_17_19_0 = det*w[0][17]*w[0][19]*K[1]*(1.0);
    const double G23_17_19_1 = det*w[0][17]*w[0][19]*K[3]*(1.0);
    const double G23_18_10_0 = det*w[0][18]*w[0][10]*K[1]*(1.0);
    const double G23_18_10_1 = det*w[0][18]*w[0][10]*K[3]*(1.0);
    const double G23_18_11_0 = det*w[0][18]*w[0][11]*K[1]*(1.0);
    const double G23_18_11_1 = det*w[0][18]*w[0][11]*K[3]*(1.0);
    const double G23_18_12_1 = det*w[0][18]*w[0][12]*K[3]*(1.0);
    const double G23_18_13_0 = det*w[0][18]*w[0][13]*K[1]*(1.0);
    const double G23_18_13_1 = det*w[0][18]*w[0][13]*K[3]*(1.0);
    const double G23_18_14_0 = det*w[0][18]*w[0][14]*K[1]*(1.0);
    const double G23_18_14_1 = det*w[0][18]*w[0][14]*K[3]*(1.0);
    const double G23_18_15_0 = det*w[0][18]*w[0][15]*K[1]*(1.0);
    const double G23_18_15_1 = det*w[0][18]*w[0][15]*K[3]*(1.0);
    const double G23_18_16_0 = det*w[0][18]*w[0][16]*K[1]*(1.0);
    const double G23_18_16_1 = det*w[0][18]*w[0][16]*K[3]*(1.0);
    const double G23_18_17_0 = det*w[0][18]*w[0][17]*K[1]*(1.0);
    const double G23_18_17_1 = det*w[0][18]*w[0][17]*K[3]*(1.0);
    const double G23_18_18_0 = det*w[0][18]*w[0][18]*K[1]*(1.0);
    const double G23_18_18_1 = det*w[0][18]*w[0][18]*K[3]*(1.0);
    const double G23_18_19_0 = det*w[0][18]*w[0][19]*K[1]*(1.0);
    const double G23_18_19_1 = det*w[0][18]*w[0][19]*K[3]*(1.0);
    const double G23_19_10_0 = det*w[0][19]*w[0][10]*K[1]*(1.0);
    const double G23_19_10_1 = det*w[0][19]*w[0][10]*K[3]*(1.0);
    const double G23_19_11_0 = det*w[0][19]*w[0][11]*K[1]*(1.0);
    const double G23_19_11_1 = det*w[0][19]*w[0][11]*K[3]*(1.0);
    const double G23_19_12_1 = det*w[0][19]*w[0][12]*K[3]*(1.0);
    const double G23_19_13_0 = det*w[0][19]*w[0][13]*K[1]*(1.0);
    const double G23_19_13_1 = det*w[0][19]*w[0][13]*K[3]*(1.0);
    const double G23_19_14_0 = det*w[0][19]*w[0][14]*K[1]*(1.0);
    const double G23_19_14_1 = det*w[0][19]*w[0][14]*K[3]*(1.0);
    const double G23_19_15_0 = det*w[0][19]*w[0][15]*K[1]*(1.0);
    const double G23_19_15_1 = det*w[0][19]*w[0][15]*K[3]*(1.0);
    const double G23_19_16_0 = det*w[0][19]*w[0][16]*K[1]*(1.0);
    const double G23_19_16_1 = det*w[0][19]*w[0][16]*K[3]*(1.0);
    const double G23_19_17_0 = det*w[0][19]*w[0][17]*K[1]*(1.0);
    const double G23_19_17_1 = det*w[0][19]*w[0][17]*K[3]*(1.0);
    const double G23_19_18_0 = det*w[0][19]*w[0][18]*K[1]*(1.0);
    const double G23_19_18_1 = det*w[0][19]*w[0][18]*K[3]*(1.0);
    const double G23_19_19_0 = det*w[0][19]*w[0][19]*K[1]*(1.0);
    const double G23_19_19_1 = det*w[0][19]*w[0][19]*K[3]*(1.0);
    const double G24_0_0_0 = det*w[1][0]*w[1][0]*K[0]*(1.0);
    const double G24_0_0_1 = det*w[1][0]*w[1][0]*K[2]*(1.0);
    const double G24_0_1_0 = det*w[1][0]*w[1][1]*K[0]*(1.0);
    const double G24_0_1_1 = det*w[1][0]*w[1][1]*K[2]*(1.0);
    const double G24_0_2_1 = det*w[1][0]*w[1][2]*K[2]*(1.0);
    const double G24_0_3_0 = det*w[1][0]*w[1][3]*K[0]*(1.0);
    const double G24_0_3_1 = det*w[1][0]*w[1][3]*K[2]*(1.0);
    const double G24_0_4_0 = det*w[1][0]*w[1][4]*K[0]*(1.0);
    const double G24_0_4_1 = det*w[1][0]*w[1][4]*K[2]*(1.0);
    const double G24_0_5_0 = det*w[1][0]*w[1][5]*K[0]*(1.0);
    const double G24_0_5_1 = det*w[1][0]*w[1][5]*K[2]*(1.0);
    const double G24_0_6_0 = det*w[1][0]*w[1][6]*K[0]*(1.0);
    const double G24_0_6_1 = det*w[1][0]*w[1][6]*K[2]*(1.0);
    const double G24_0_7_0 = det*w[1][0]*w[1][7]*K[0]*(1.0);
    const double G24_0_7_1 = det*w[1][0]*w[1][7]*K[2]*(1.0);
    const double G24_0_8_0 = det*w[1][0]*w[1][8]*K[0]*(1.0);
    const double G24_0_8_1 = det*w[1][0]*w[1][8]*K[2]*(1.0);
    const double G24_0_9_0 = det*w[1][0]*w[1][9]*K[0]*(1.0);
    const double G24_0_9_1 = det*w[1][0]*w[1][9]*K[2]*(1.0);
    const double G24_1_0_0 = det*w[1][1]*w[1][0]*K[0]*(1.0);
    const double G24_1_0_1 = det*w[1][1]*w[1][0]*K[2]*(1.0);
    const double G24_1_1_0 = det*w[1][1]*w[1][1]*K[0]*(1.0);
    const double G24_1_1_1 = det*w[1][1]*w[1][1]*K[2]*(1.0);
    const double G24_1_2_1 = det*w[1][1]*w[1][2]*K[2]*(1.0);
    const double G24_1_3_0 = det*w[1][1]*w[1][3]*K[0]*(1.0);
    const double G24_1_3_1 = det*w[1][1]*w[1][3]*K[2]*(1.0);
    const double G24_1_4_0 = det*w[1][1]*w[1][4]*K[0]*(1.0);
    const double G24_1_4_1 = det*w[1][1]*w[1][4]*K[2]*(1.0);
    const double G24_1_5_0 = det*w[1][1]*w[1][5]*K[0]*(1.0);
    const double G24_1_5_1 = det*w[1][1]*w[1][5]*K[2]*(1.0);
    const double G24_1_6_0 = det*w[1][1]*w[1][6]*K[0]*(1.0);
    const double G24_1_6_1 = det*w[1][1]*w[1][6]*K[2]*(1.0);
    const double G24_1_7_0 = det*w[1][1]*w[1][7]*K[0]*(1.0);
    const double G24_1_7_1 = det*w[1][1]*w[1][7]*K[2]*(1.0);
    const double G24_1_8_0 = det*w[1][1]*w[1][8]*K[0]*(1.0);
    const double G24_1_8_1 = det*w[1][1]*w[1][8]*K[2]*(1.0);
    const double G24_1_9_0 = det*w[1][1]*w[1][9]*K[0]*(1.0);
    const double G24_1_9_1 = det*w[1][1]*w[1][9]*K[2]*(1.0);
    const double G24_2_0_0 = det*w[1][2]*w[1][0]*K[0]*(1.0);
    const double G24_2_0_1 = det*w[1][2]*w[1][0]*K[2]*(1.0);
    const double G24_2_1_0 = det*w[1][2]*w[1][1]*K[0]*(1.0);
    const double G24_2_1_1 = det*w[1][2]*w[1][1]*K[2]*(1.0);
    const double G24_2_2_1 = det*w[1][2]*w[1][2]*K[2]*(1.0);
    const double G24_2_3_0 = det*w[1][2]*w[1][3]*K[0]*(1.0);
    const double G24_2_3_1 = det*w[1][2]*w[1][3]*K[2]*(1.0);
    const double G24_2_4_0 = det*w[1][2]*w[1][4]*K[0]*(1.0);
    const double G24_2_4_1 = det*w[1][2]*w[1][4]*K[2]*(1.0);
    const double G24_2_5_0 = det*w[1][2]*w[1][5]*K[0]*(1.0);
    const double G24_2_5_1 = det*w[1][2]*w[1][5]*K[2]*(1.0);
    const double G24_2_6_0 = det*w[1][2]*w[1][6]*K[0]*(1.0);
    const double G24_2_6_1 = det*w[1][2]*w[1][6]*K[2]*(1.0);
    const double G24_2_7_0 = det*w[1][2]*w[1][7]*K[0]*(1.0);
    const double G24_2_7_1 = det*w[1][2]*w[1][7]*K[2]*(1.0);
    const double G24_2_8_0 = det*w[1][2]*w[1][8]*K[0]*(1.0);
    const double G24_2_8_1 = det*w[1][2]*w[1][8]*K[2]*(1.0);
    const double G24_2_9_0 = det*w[1][2]*w[1][9]*K[0]*(1.0);
    const double G24_2_9_1 = det*w[1][2]*w[1][9]*K[2]*(1.0);
    const double G24_3_0_0 = det*w[1][3]*w[1][0]*K[0]*(1.0);
    const double G24_3_0_1 = det*w[1][3]*w[1][0]*K[2]*(1.0);
    const double G24_3_1_0 = det*w[1][3]*w[1][1]*K[0]*(1.0);
    const double G24_3_1_1 = det*w[1][3]*w[1][1]*K[2]*(1.0);
    const double G24_3_2_1 = det*w[1][3]*w[1][2]*K[2]*(1.0);
    const double G24_3_3_0 = det*w[1][3]*w[1][3]*K[0]*(1.0);
    const double G24_3_3_1 = det*w[1][3]*w[1][3]*K[2]*(1.0);
    const double G24_3_4_0 = det*w[1][3]*w[1][4]*K[0]*(1.0);
    const double G24_3_4_1 = det*w[1][3]*w[1][4]*K[2]*(1.0);
    const double G24_3_5_0 = det*w[1][3]*w[1][5]*K[0]*(1.0);
    const double G24_3_5_1 = det*w[1][3]*w[1][5]*K[2]*(1.0);
    const double G24_3_6_0 = det*w[1][3]*w[1][6]*K[0]*(1.0);
    const double G24_3_6_1 = det*w[1][3]*w[1][6]*K[2]*(1.0);
    const double G24_3_7_0 = det*w[1][3]*w[1][7]*K[0]*(1.0);
    const double G24_3_7_1 = det*w[1][3]*w[1][7]*K[2]*(1.0);
    const double G24_3_8_0 = det*w[1][3]*w[1][8]*K[0]*(1.0);
    const double G24_3_8_1 = det*w[1][3]*w[1][8]*K[2]*(1.0);
    const double G24_3_9_0 = det*w[1][3]*w[1][9]*K[0]*(1.0);
    const double G24_3_9_1 = det*w[1][3]*w[1][9]*K[2]*(1.0);
    const double G24_4_0_0 = det*w[1][4]*w[1][0]*K[0]*(1.0);
    const double G24_4_0_1 = det*w[1][4]*w[1][0]*K[2]*(1.0);
    const double G24_4_1_0 = det*w[1][4]*w[1][1]*K[0]*(1.0);
    const double G24_4_1_1 = det*w[1][4]*w[1][1]*K[2]*(1.0);
    const double G24_4_2_1 = det*w[1][4]*w[1][2]*K[2]*(1.0);
    const double G24_4_3_0 = det*w[1][4]*w[1][3]*K[0]*(1.0);
    const double G24_4_3_1 = det*w[1][4]*w[1][3]*K[2]*(1.0);
    const double G24_4_4_0 = det*w[1][4]*w[1][4]*K[0]*(1.0);
    const double G24_4_4_1 = det*w[1][4]*w[1][4]*K[2]*(1.0);
    const double G24_4_5_0 = det*w[1][4]*w[1][5]*K[0]*(1.0);
    const double G24_4_5_1 = det*w[1][4]*w[1][5]*K[2]*(1.0);
    const double G24_4_6_0 = det*w[1][4]*w[1][6]*K[0]*(1.0);
    const double G24_4_6_1 = det*w[1][4]*w[1][6]*K[2]*(1.0);
    const double G24_4_7_0 = det*w[1][4]*w[1][7]*K[0]*(1.0);
    const double G24_4_7_1 = det*w[1][4]*w[1][7]*K[2]*(1.0);
    const double G24_4_8_0 = det*w[1][4]*w[1][8]*K[0]*(1.0);
    const double G24_4_8_1 = det*w[1][4]*w[1][8]*K[2]*(1.0);
    const double G24_4_9_0 = det*w[1][4]*w[1][9]*K[0]*(1.0);
    const double G24_4_9_1 = det*w[1][4]*w[1][9]*K[2]*(1.0);
    const double G24_5_0_0 = det*w[1][5]*w[1][0]*K[0]*(1.0);
    const double G24_5_0_1 = det*w[1][5]*w[1][0]*K[2]*(1.0);
    const double G24_5_1_0 = det*w[1][5]*w[1][1]*K[0]*(1.0);
    const double G24_5_1_1 = det*w[1][5]*w[1][1]*K[2]*(1.0);
    const double G24_5_2_1 = det*w[1][5]*w[1][2]*K[2]*(1.0);
    const double G24_5_3_0 = det*w[1][5]*w[1][3]*K[0]*(1.0);
    const double G24_5_3_1 = det*w[1][5]*w[1][3]*K[2]*(1.0);
    const double G24_5_4_0 = det*w[1][5]*w[1][4]*K[0]*(1.0);
    const double G24_5_4_1 = det*w[1][5]*w[1][4]*K[2]*(1.0);
    const double G24_5_5_0 = det*w[1][5]*w[1][5]*K[0]*(1.0);
    const double G24_5_5_1 = det*w[1][5]*w[1][5]*K[2]*(1.0);
    const double G24_5_6_0 = det*w[1][5]*w[1][6]*K[0]*(1.0);
    const double G24_5_6_1 = det*w[1][5]*w[1][6]*K[2]*(1.0);
    const double G24_5_7_0 = det*w[1][5]*w[1][7]*K[0]*(1.0);
    const double G24_5_7_1 = det*w[1][5]*w[1][7]*K[2]*(1.0);
    const double G24_5_8_0 = det*w[1][5]*w[1][8]*K[0]*(1.0);
    const double G24_5_8_1 = det*w[1][5]*w[1][8]*K[2]*(1.0);
    const double G24_5_9_0 = det*w[1][5]*w[1][9]*K[0]*(1.0);
    const double G24_5_9_1 = det*w[1][5]*w[1][9]*K[2]*(1.0);
    const double G24_6_0_0 = det*w[1][6]*w[1][0]*K[0]*(1.0);
    const double G24_6_0_1 = det*w[1][6]*w[1][0]*K[2]*(1.0);
    const double G24_6_1_0 = det*w[1][6]*w[1][1]*K[0]*(1.0);
    const double G24_6_1_1 = det*w[1][6]*w[1][1]*K[2]*(1.0);
    const double G24_6_2_1 = det*w[1][6]*w[1][2]*K[2]*(1.0);
    const double G24_6_3_0 = det*w[1][6]*w[1][3]*K[0]*(1.0);
    const double G24_6_3_1 = det*w[1][6]*w[1][3]*K[2]*(1.0);
    const double G24_6_4_0 = det*w[1][6]*w[1][4]*K[0]*(1.0);
    const double G24_6_4_1 = det*w[1][6]*w[1][4]*K[2]*(1.0);
    const double G24_6_5_0 = det*w[1][6]*w[1][5]*K[0]*(1.0);
    const double G24_6_5_1 = det*w[1][6]*w[1][5]*K[2]*(1.0);
    const double G24_6_6_0 = det*w[1][6]*w[1][6]*K[0]*(1.0);
    const double G24_6_6_1 = det*w[1][6]*w[1][6]*K[2]*(1.0);
    const double G24_6_7_0 = det*w[1][6]*w[1][7]*K[0]*(1.0);
    const double G24_6_7_1 = det*w[1][6]*w[1][7]*K[2]*(1.0);
    const double G24_6_8_0 = det*w[1][6]*w[1][8]*K[0]*(1.0);
    const double G24_6_8_1 = det*w[1][6]*w[1][8]*K[2]*(1.0);
    const double G24_6_9_0 = det*w[1][6]*w[1][9]*K[0]*(1.0);
    const double G24_6_9_1 = det*w[1][6]*w[1][9]*K[2]*(1.0);
    const double G24_7_0_0 = det*w[1][7]*w[1][0]*K[0]*(1.0);
    const double G24_7_0_1 = det*w[1][7]*w[1][0]*K[2]*(1.0);
    const double G24_7_1_0 = det*w[1][7]*w[1][1]*K[0]*(1.0);
    const double G24_7_1_1 = det*w[1][7]*w[1][1]*K[2]*(1.0);
    const double G24_7_2_1 = det*w[1][7]*w[1][2]*K[2]*(1.0);
    const double G24_7_3_0 = det*w[1][7]*w[1][3]*K[0]*(1.0);
    const double G24_7_3_1 = det*w[1][7]*w[1][3]*K[2]*(1.0);
    const double G24_7_4_0 = det*w[1][7]*w[1][4]*K[0]*(1.0);
    const double G24_7_4_1 = det*w[1][7]*w[1][4]*K[2]*(1.0);
    const double G24_7_5_0 = det*w[1][7]*w[1][5]*K[0]*(1.0);
    const double G24_7_5_1 = det*w[1][7]*w[1][5]*K[2]*(1.0);
    const double G24_7_6_0 = det*w[1][7]*w[1][6]*K[0]*(1.0);
    const double G24_7_6_1 = det*w[1][7]*w[1][6]*K[2]*(1.0);
    const double G24_7_7_0 = det*w[1][7]*w[1][7]*K[0]*(1.0);
    const double G24_7_7_1 = det*w[1][7]*w[1][7]*K[2]*(1.0);
    const double G24_7_8_0 = det*w[1][7]*w[1][8]*K[0]*(1.0);
    const double G24_7_8_1 = det*w[1][7]*w[1][8]*K[2]*(1.0);
    const double G24_7_9_0 = det*w[1][7]*w[1][9]*K[0]*(1.0);
    const double G24_7_9_1 = det*w[1][7]*w[1][9]*K[2]*(1.0);
    const double G24_8_0_0 = det*w[1][8]*w[1][0]*K[0]*(1.0);
    const double G24_8_0_1 = det*w[1][8]*w[1][0]*K[2]*(1.0);
    const double G24_8_1_0 = det*w[1][8]*w[1][1]*K[0]*(1.0);
    const double G24_8_1_1 = det*w[1][8]*w[1][1]*K[2]*(1.0);
    const double G24_8_2_1 = det*w[1][8]*w[1][2]*K[2]*(1.0);
    const double G24_8_3_0 = det*w[1][8]*w[1][3]*K[0]*(1.0);
    const double G24_8_3_1 = det*w[1][8]*w[1][3]*K[2]*(1.0);
    const double G24_8_4_0 = det*w[1][8]*w[1][4]*K[0]*(1.0);
    const double G24_8_4_1 = det*w[1][8]*w[1][4]*K[2]*(1.0);
    const double G24_8_5_0 = det*w[1][8]*w[1][5]*K[0]*(1.0);
    const double G24_8_5_1 = det*w[1][8]*w[1][5]*K[2]*(1.0);
    const double G24_8_6_0 = det*w[1][8]*w[1][6]*K[0]*(1.0);
    const double G24_8_6_1 = det*w[1][8]*w[1][6]*K[2]*(1.0);
    const double G24_8_7_0 = det*w[1][8]*w[1][7]*K[0]*(1.0);
    const double G24_8_7_1 = det*w[1][8]*w[1][7]*K[2]*(1.0);
    const double G24_8_8_0 = det*w[1][8]*w[1][8]*K[0]*(1.0);
    const double G24_8_8_1 = det*w[1][8]*w[1][8]*K[2]*(1.0);
    const double G24_8_9_0 = det*w[1][8]*w[1][9]*K[0]*(1.0);
    const double G24_8_9_1 = det*w[1][8]*w[1][9]*K[2]*(1.0);
    const double G24_9_0_0 = det*w[1][9]*w[1][0]*K[0]*(1.0);
    const double G24_9_0_1 = det*w[1][9]*w[1][0]*K[2]*(1.0);
    const double G24_9_1_0 = det*w[1][9]*w[1][1]*K[0]*(1.0);
    const double G24_9_1_1 = det*w[1][9]*w[1][1]*K[2]*(1.0);
    const double G24_9_2_1 = det*w[1][9]*w[1][2]*K[2]*(1.0);
    const double G24_9_3_0 = det*w[1][9]*w[1][3]*K[0]*(1.0);
    const double G24_9_3_1 = det*w[1][9]*w[1][3]*K[2]*(1.0);
    const double G24_9_4_0 = det*w[1][9]*w[1][4]*K[0]*(1.0);
    const double G24_9_4_1 = det*w[1][9]*w[1][4]*K[2]*(1.0);
    const double G24_9_5_0 = det*w[1][9]*w[1][5]*K[0]*(1.0);
    const double G24_9_5_1 = det*w[1][9]*w[1][5]*K[2]*(1.0);
    const double G24_9_6_0 = det*w[1][9]*w[1][6]*K[0]*(1.0);
    const double G24_9_6_1 = det*w[1][9]*w[1][6]*K[2]*(1.0);
    const double G24_9_7_0 = det*w[1][9]*w[1][7]*K[0]*(1.0);
    const double G24_9_7_1 = det*w[1][9]*w[1][7]*K[2]*(1.0);
    const double G24_9_8_0 = det*w[1][9]*w[1][8]*K[0]*(1.0);
    const double G24_9_8_1 = det*w[1][9]*w[1][8]*K[2]*(1.0);
    const double G24_9_9_0 = det*w[1][9]*w[1][9]*K[0]*(1.0);
    const double G24_9_9_1 = det*w[1][9]*w[1][9]*K[2]*(1.0);
    const double G25_0_0_10 = det*w[1][0]*w[1][10]*K[1]*(1.0);
    const double G25_0_0_11 = det*w[1][0]*w[1][11]*K[1]*(1.0);
    const double G25_0_0_12 = det*w[1][0]*w[1][12]*K[1]*(1.0);
    const double G25_0_0_13 = det*w[1][0]*w[1][13]*K[1]*(1.0);
    const double G25_0_0_14 = det*w[1][0]*w[1][14]*K[1]*(1.0);
    const double G25_0_0_15 = det*w[1][0]*w[1][15]*K[1]*(1.0);
    const double G25_0_0_16 = det*w[1][0]*w[1][16]*K[1]*(1.0);
    const double G25_0_0_17 = det*w[1][0]*w[1][17]*K[1]*(1.0);
    const double G25_0_0_18 = det*w[1][0]*w[1][18]*K[1]*(1.0);
    const double G25_0_0_19 = det*w[1][0]*w[1][19]*K[1]*(1.0);
    const double G25_0_1_10 = det*w[1][0]*w[1][10]*K[3]*(1.0);
    const double G25_0_1_11 = det*w[1][0]*w[1][11]*K[3]*(1.0);
    const double G25_0_1_12 = det*w[1][0]*w[1][12]*K[3]*(1.0);
    const double G25_0_1_13 = det*w[1][0]*w[1][13]*K[3]*(1.0);
    const double G25_0_1_14 = det*w[1][0]*w[1][14]*K[3]*(1.0);
    const double G25_0_1_15 = det*w[1][0]*w[1][15]*K[3]*(1.0);
    const double G25_0_1_16 = det*w[1][0]*w[1][16]*K[3]*(1.0);
    const double G25_0_1_17 = det*w[1][0]*w[1][17]*K[3]*(1.0);
    const double G25_0_1_18 = det*w[1][0]*w[1][18]*K[3]*(1.0);
    const double G25_0_1_19 = det*w[1][0]*w[1][19]*K[3]*(1.0);
    const double G25_1_0_10 = det*w[1][1]*w[1][10]*K[1]*(1.0);
    const double G25_1_0_11 = det*w[1][1]*w[1][11]*K[1]*(1.0);
    const double G25_1_0_12 = det*w[1][1]*w[1][12]*K[1]*(1.0);
    const double G25_1_0_13 = det*w[1][1]*w[1][13]*K[1]*(1.0);
    const double G25_1_0_14 = det*w[1][1]*w[1][14]*K[1]*(1.0);
    const double G25_1_0_15 = det*w[1][1]*w[1][15]*K[1]*(1.0);
    const double G25_1_0_16 = det*w[1][1]*w[1][16]*K[1]*(1.0);
    const double G25_1_0_17 = det*w[1][1]*w[1][17]*K[1]*(1.0);
    const double G25_1_0_18 = det*w[1][1]*w[1][18]*K[1]*(1.0);
    const double G25_1_0_19 = det*w[1][1]*w[1][19]*K[1]*(1.0);
    const double G25_1_1_10 = det*w[1][1]*w[1][10]*K[3]*(1.0);
    const double G25_1_1_11 = det*w[1][1]*w[1][11]*K[3]*(1.0);
    const double G25_1_1_12 = det*w[1][1]*w[1][12]*K[3]*(1.0);
    const double G25_1_1_13 = det*w[1][1]*w[1][13]*K[3]*(1.0);
    const double G25_1_1_14 = det*w[1][1]*w[1][14]*K[3]*(1.0);
    const double G25_1_1_15 = det*w[1][1]*w[1][15]*K[3]*(1.0);
    const double G25_1_1_16 = det*w[1][1]*w[1][16]*K[3]*(1.0);
    const double G25_1_1_17 = det*w[1][1]*w[1][17]*K[3]*(1.0);
    const double G25_1_1_18 = det*w[1][1]*w[1][18]*K[3]*(1.0);
    const double G25_1_1_19 = det*w[1][1]*w[1][19]*K[3]*(1.0);
    const double G25_2_1_10 = det*w[1][2]*w[1][10]*K[3]*(1.0);
    const double G25_2_1_11 = det*w[1][2]*w[1][11]*K[3]*(1.0);
    const double G25_2_1_12 = det*w[1][2]*w[1][12]*K[3]*(1.0);
    const double G25_2_1_13 = det*w[1][2]*w[1][13]*K[3]*(1.0);
    const double G25_2_1_14 = det*w[1][2]*w[1][14]*K[3]*(1.0);
    const double G25_2_1_15 = det*w[1][2]*w[1][15]*K[3]*(1.0);
    const double G25_2_1_16 = det*w[1][2]*w[1][16]*K[3]*(1.0);
    const double G25_2_1_17 = det*w[1][2]*w[1][17]*K[3]*(1.0);
    const double G25_2_1_18 = det*w[1][2]*w[1][18]*K[3]*(1.0);
    const double G25_2_1_19 = det*w[1][2]*w[1][19]*K[3]*(1.0);
    const double G25_3_0_10 = det*w[1][3]*w[1][10]*K[1]*(1.0);
    const double G25_3_0_11 = det*w[1][3]*w[1][11]*K[1]*(1.0);
    const double G25_3_0_12 = det*w[1][3]*w[1][12]*K[1]*(1.0);
    const double G25_3_0_13 = det*w[1][3]*w[1][13]*K[1]*(1.0);
    const double G25_3_0_14 = det*w[1][3]*w[1][14]*K[1]*(1.0);
    const double G25_3_0_15 = det*w[1][3]*w[1][15]*K[1]*(1.0);
    const double G25_3_0_16 = det*w[1][3]*w[1][16]*K[1]*(1.0);
    const double G25_3_0_17 = det*w[1][3]*w[1][17]*K[1]*(1.0);
    const double G25_3_0_18 = det*w[1][3]*w[1][18]*K[1]*(1.0);
    const double G25_3_0_19 = det*w[1][3]*w[1][19]*K[1]*(1.0);
    const double G25_3_1_10 = det*w[1][3]*w[1][10]*K[3]*(1.0);
    const double G25_3_1_11 = det*w[1][3]*w[1][11]*K[3]*(1.0);
    const double G25_3_1_12 = det*w[1][3]*w[1][12]*K[3]*(1.0);
    const double G25_3_1_13 = det*w[1][3]*w[1][13]*K[3]*(1.0);
    const double G25_3_1_14 = det*w[1][3]*w[1][14]*K[3]*(1.0);
    const double G25_3_1_15 = det*w[1][3]*w[1][15]*K[3]*(1.0);
    const double G25_3_1_16 = det*w[1][3]*w[1][16]*K[3]*(1.0);
    const double G25_3_1_17 = det*w[1][3]*w[1][17]*K[3]*(1.0);
    const double G25_3_1_18 = det*w[1][3]*w[1][18]*K[3]*(1.0);
    const double G25_3_1_19 = det*w[1][3]*w[1][19]*K[3]*(1.0);
    const double G25_4_0_10 = det*w[1][4]*w[1][10]*K[1]*(1.0);
    const double G25_4_0_11 = det*w[1][4]*w[1][11]*K[1]*(1.0);
    const double G25_4_0_12 = det*w[1][4]*w[1][12]*K[1]*(1.0);
    const double G25_4_0_13 = det*w[1][4]*w[1][13]*K[1]*(1.0);
    const double G25_4_0_14 = det*w[1][4]*w[1][14]*K[1]*(1.0);
    const double G25_4_0_15 = det*w[1][4]*w[1][15]*K[1]*(1.0);
    const double G25_4_0_16 = det*w[1][4]*w[1][16]*K[1]*(1.0);
    const double G25_4_0_17 = det*w[1][4]*w[1][17]*K[1]*(1.0);
    const double G25_4_0_18 = det*w[1][4]*w[1][18]*K[1]*(1.0);
    const double G25_4_0_19 = det*w[1][4]*w[1][19]*K[1]*(1.0);
    const double G25_4_1_10 = det*w[1][4]*w[1][10]*K[3]*(1.0);
    const double G25_4_1_11 = det*w[1][4]*w[1][11]*K[3]*(1.0);
    const double G25_4_1_12 = det*w[1][4]*w[1][12]*K[3]*(1.0);
    const double G25_4_1_13 = det*w[1][4]*w[1][13]*K[3]*(1.0);
    const double G25_4_1_14 = det*w[1][4]*w[1][14]*K[3]*(1.0);
    const double G25_4_1_15 = det*w[1][4]*w[1][15]*K[3]*(1.0);
    const double G25_4_1_16 = det*w[1][4]*w[1][16]*K[3]*(1.0);
    const double G25_4_1_17 = det*w[1][4]*w[1][17]*K[3]*(1.0);
    const double G25_4_1_18 = det*w[1][4]*w[1][18]*K[3]*(1.0);
    const double G25_4_1_19 = det*w[1][4]*w[1][19]*K[3]*(1.0);
    const double G25_5_0_10 = det*w[1][5]*w[1][10]*K[1]*(1.0);
    const double G25_5_0_11 = det*w[1][5]*w[1][11]*K[1]*(1.0);
    const double G25_5_0_12 = det*w[1][5]*w[1][12]*K[1]*(1.0);
    const double G25_5_0_13 = det*w[1][5]*w[1][13]*K[1]*(1.0);
    const double G25_5_0_14 = det*w[1][5]*w[1][14]*K[1]*(1.0);
    const double G25_5_0_15 = det*w[1][5]*w[1][15]*K[1]*(1.0);
    const double G25_5_0_16 = det*w[1][5]*w[1][16]*K[1]*(1.0);
    const double G25_5_0_17 = det*w[1][5]*w[1][17]*K[1]*(1.0);
    const double G25_5_0_18 = det*w[1][5]*w[1][18]*K[1]*(1.0);
    const double G25_5_0_19 = det*w[1][5]*w[1][19]*K[1]*(1.0);
    const double G25_5_1_10 = det*w[1][5]*w[1][10]*K[3]*(1.0);
    const double G25_5_1_11 = det*w[1][5]*w[1][11]*K[3]*(1.0);
    const double G25_5_1_12 = det*w[1][5]*w[1][12]*K[3]*(1.0);
    const double G25_5_1_13 = det*w[1][5]*w[1][13]*K[3]*(1.0);
    const double G25_5_1_14 = det*w[1][5]*w[1][14]*K[3]*(1.0);
    const double G25_5_1_15 = det*w[1][5]*w[1][15]*K[3]*(1.0);
    const double G25_5_1_16 = det*w[1][5]*w[1][16]*K[3]*(1.0);
    const double G25_5_1_17 = det*w[1][5]*w[1][17]*K[3]*(1.0);
    const double G25_5_1_18 = det*w[1][5]*w[1][18]*K[3]*(1.0);
    const double G25_5_1_19 = det*w[1][5]*w[1][19]*K[3]*(1.0);
    const double G25_6_0_10 = det*w[1][6]*w[1][10]*K[1]*(1.0);
    const double G25_6_0_11 = det*w[1][6]*w[1][11]*K[1]*(1.0);
    const double G25_6_0_12 = det*w[1][6]*w[1][12]*K[1]*(1.0);
    const double G25_6_0_13 = det*w[1][6]*w[1][13]*K[1]*(1.0);
    const double G25_6_0_14 = det*w[1][6]*w[1][14]*K[1]*(1.0);
    const double G25_6_0_15 = det*w[1][6]*w[1][15]*K[1]*(1.0);
    const double G25_6_0_16 = det*w[1][6]*w[1][16]*K[1]*(1.0);
    const double G25_6_0_17 = det*w[1][6]*w[1][17]*K[1]*(1.0);
    const double G25_6_0_18 = det*w[1][6]*w[1][18]*K[1]*(1.0);
    const double G25_6_0_19 = det*w[1][6]*w[1][19]*K[1]*(1.0);
    const double G25_6_1_10 = det*w[1][6]*w[1][10]*K[3]*(1.0);
    const double G25_6_1_11 = det*w[1][6]*w[1][11]*K[3]*(1.0);
    const double G25_6_1_12 = det*w[1][6]*w[1][12]*K[3]*(1.0);
    const double G25_6_1_13 = det*w[1][6]*w[1][13]*K[3]*(1.0);
    const double G25_6_1_14 = det*w[1][6]*w[1][14]*K[3]*(1.0);
    const double G25_6_1_15 = det*w[1][6]*w[1][15]*K[3]*(1.0);
    const double G25_6_1_16 = det*w[1][6]*w[1][16]*K[3]*(1.0);
    const double G25_6_1_17 = det*w[1][6]*w[1][17]*K[3]*(1.0);
    const double G25_6_1_18 = det*w[1][6]*w[1][18]*K[3]*(1.0);
    const double G25_6_1_19 = det*w[1][6]*w[1][19]*K[3]*(1.0);
    const double G25_7_0_10 = det*w[1][7]*w[1][10]*K[1]*(1.0);
    const double G25_7_0_11 = det*w[1][7]*w[1][11]*K[1]*(1.0);
    const double G25_7_0_12 = det*w[1][7]*w[1][12]*K[1]*(1.0);
    const double G25_7_0_13 = det*w[1][7]*w[1][13]*K[1]*(1.0);
    const double G25_7_0_14 = det*w[1][7]*w[1][14]*K[1]*(1.0);
    const double G25_7_0_15 = det*w[1][7]*w[1][15]*K[1]*(1.0);
    const double G25_7_0_16 = det*w[1][7]*w[1][16]*K[1]*(1.0);
    const double G25_7_0_17 = det*w[1][7]*w[1][17]*K[1]*(1.0);
    const double G25_7_0_18 = det*w[1][7]*w[1][18]*K[1]*(1.0);
    const double G25_7_0_19 = det*w[1][7]*w[1][19]*K[1]*(1.0);
    const double G25_7_1_10 = det*w[1][7]*w[1][10]*K[3]*(1.0);
    const double G25_7_1_11 = det*w[1][7]*w[1][11]*K[3]*(1.0);
    const double G25_7_1_12 = det*w[1][7]*w[1][12]*K[3]*(1.0);
    const double G25_7_1_13 = det*w[1][7]*w[1][13]*K[3]*(1.0);
    const double G25_7_1_14 = det*w[1][7]*w[1][14]*K[3]*(1.0);
    const double G25_7_1_15 = det*w[1][7]*w[1][15]*K[3]*(1.0);
    const double G25_7_1_16 = det*w[1][7]*w[1][16]*K[3]*(1.0);
    const double G25_7_1_17 = det*w[1][7]*w[1][17]*K[3]*(1.0);
    const double G25_7_1_18 = det*w[1][7]*w[1][18]*K[3]*(1.0);
    const double G25_7_1_19 = det*w[1][7]*w[1][19]*K[3]*(1.0);
    const double G25_8_0_10 = det*w[1][8]*w[1][10]*K[1]*(1.0);
    const double G25_8_0_11 = det*w[1][8]*w[1][11]*K[1]*(1.0);
    const double G25_8_0_12 = det*w[1][8]*w[1][12]*K[1]*(1.0);
    const double G25_8_0_13 = det*w[1][8]*w[1][13]*K[1]*(1.0);
    const double G25_8_0_14 = det*w[1][8]*w[1][14]*K[1]*(1.0);
    const double G25_8_0_15 = det*w[1][8]*w[1][15]*K[1]*(1.0);
    const double G25_8_0_16 = det*w[1][8]*w[1][16]*K[1]*(1.0);
    const double G25_8_0_17 = det*w[1][8]*w[1][17]*K[1]*(1.0);
    const double G25_8_0_18 = det*w[1][8]*w[1][18]*K[1]*(1.0);
    const double G25_8_0_19 = det*w[1][8]*w[1][19]*K[1]*(1.0);
    const double G25_8_1_10 = det*w[1][8]*w[1][10]*K[3]*(1.0);
    const double G25_8_1_11 = det*w[1][8]*w[1][11]*K[3]*(1.0);
    const double G25_8_1_12 = det*w[1][8]*w[1][12]*K[3]*(1.0);
    const double G25_8_1_13 = det*w[1][8]*w[1][13]*K[3]*(1.0);
    const double G25_8_1_14 = det*w[1][8]*w[1][14]*K[3]*(1.0);
    const double G25_8_1_15 = det*w[1][8]*w[1][15]*K[3]*(1.0);
    const double G25_8_1_16 = det*w[1][8]*w[1][16]*K[3]*(1.0);
    const double G25_8_1_17 = det*w[1][8]*w[1][17]*K[3]*(1.0);
    const double G25_8_1_18 = det*w[1][8]*w[1][18]*K[3]*(1.0);
    const double G25_8_1_19 = det*w[1][8]*w[1][19]*K[3]*(1.0);
    const double G25_9_0_10 = det*w[1][9]*w[1][10]*K[1]*(1.0);
    const double G25_9_0_11 = det*w[1][9]*w[1][11]*K[1]*(1.0);
    const double G25_9_0_12 = det*w[1][9]*w[1][12]*K[1]*(1.0);
    const double G25_9_0_13 = det*w[1][9]*w[1][13]*K[1]*(1.0);
    const double G25_9_0_14 = det*w[1][9]*w[1][14]*K[1]*(1.0);
    const double G25_9_0_15 = det*w[1][9]*w[1][15]*K[1]*(1.0);
    const double G25_9_0_16 = det*w[1][9]*w[1][16]*K[1]*(1.0);
    const double G25_9_0_17 = det*w[1][9]*w[1][17]*K[1]*(1.0);
    const double G25_9_0_18 = det*w[1][9]*w[1][18]*K[1]*(1.0);
    const double G25_9_0_19 = det*w[1][9]*w[1][19]*K[1]*(1.0);
    const double G25_9_1_10 = det*w[1][9]*w[1][10]*K[3]*(1.0);
    const double G25_9_1_11 = det*w[1][9]*w[1][11]*K[3]*(1.0);
    const double G25_9_1_12 = det*w[1][9]*w[1][12]*K[3]*(1.0);
    const double G25_9_1_13 = det*w[1][9]*w[1][13]*K[3]*(1.0);
    const double G25_9_1_14 = det*w[1][9]*w[1][14]*K[3]*(1.0);
    const double G25_9_1_15 = det*w[1][9]*w[1][15]*K[3]*(1.0);
    const double G25_9_1_16 = det*w[1][9]*w[1][16]*K[3]*(1.0);
    const double G25_9_1_17 = det*w[1][9]*w[1][17]*K[3]*(1.0);
    const double G25_9_1_18 = det*w[1][9]*w[1][18]*K[3]*(1.0);
    const double G25_9_1_19 = det*w[1][9]*w[1][19]*K[3]*(1.0);
    const double G26_0_10_0 = det*w[1][0]*w[1][10]*K[0]*(1.0);
    const double G26_0_10_1 = det*w[1][0]*w[1][10]*K[2]*(1.0);
    const double G26_0_11_0 = det*w[1][0]*w[1][11]*K[0]*(1.0);
    const double G26_0_11_1 = det*w[1][0]*w[1][11]*K[2]*(1.0);
    const double G26_0_12_1 = det*w[1][0]*w[1][12]*K[2]*(1.0);
    const double G26_0_13_0 = det*w[1][0]*w[1][13]*K[0]*(1.0);
    const double G26_0_13_1 = det*w[1][0]*w[1][13]*K[2]*(1.0);
    const double G26_0_14_0 = det*w[1][0]*w[1][14]*K[0]*(1.0);
    const double G26_0_14_1 = det*w[1][0]*w[1][14]*K[2]*(1.0);
    const double G26_0_15_0 = det*w[1][0]*w[1][15]*K[0]*(1.0);
    const double G26_0_15_1 = det*w[1][0]*w[1][15]*K[2]*(1.0);
    const double G26_0_16_0 = det*w[1][0]*w[1][16]*K[0]*(1.0);
    const double G26_0_16_1 = det*w[1][0]*w[1][16]*K[2]*(1.0);
    const double G26_0_17_0 = det*w[1][0]*w[1][17]*K[0]*(1.0);
    const double G26_0_17_1 = det*w[1][0]*w[1][17]*K[2]*(1.0);
    const double G26_0_18_0 = det*w[1][0]*w[1][18]*K[0]*(1.0);
    const double G26_0_18_1 = det*w[1][0]*w[1][18]*K[2]*(1.0);
    const double G26_0_19_0 = det*w[1][0]*w[1][19]*K[0]*(1.0);
    const double G26_0_19_1 = det*w[1][0]*w[1][19]*K[2]*(1.0);
    const double G26_1_10_0 = det*w[1][1]*w[1][10]*K[0]*(1.0);
    const double G26_1_10_1 = det*w[1][1]*w[1][10]*K[2]*(1.0);
    const double G26_1_11_0 = det*w[1][1]*w[1][11]*K[0]*(1.0);
    const double G26_1_11_1 = det*w[1][1]*w[1][11]*K[2]*(1.0);
    const double G26_1_12_1 = det*w[1][1]*w[1][12]*K[2]*(1.0);
    const double G26_1_13_0 = det*w[1][1]*w[1][13]*K[0]*(1.0);
    const double G26_1_13_1 = det*w[1][1]*w[1][13]*K[2]*(1.0);
    const double G26_1_14_0 = det*w[1][1]*w[1][14]*K[0]*(1.0);
    const double G26_1_14_1 = det*w[1][1]*w[1][14]*K[2]*(1.0);
    const double G26_1_15_0 = det*w[1][1]*w[1][15]*K[0]*(1.0);
    const double G26_1_15_1 = det*w[1][1]*w[1][15]*K[2]*(1.0);
    const double G26_1_16_0 = det*w[1][1]*w[1][16]*K[0]*(1.0);
    const double G26_1_16_1 = det*w[1][1]*w[1][16]*K[2]*(1.0);
    const double G26_1_17_0 = det*w[1][1]*w[1][17]*K[0]*(1.0);
    const double G26_1_17_1 = det*w[1][1]*w[1][17]*K[2]*(1.0);
    const double G26_1_18_0 = det*w[1][1]*w[1][18]*K[0]*(1.0);
    const double G26_1_18_1 = det*w[1][1]*w[1][18]*K[2]*(1.0);
    const double G26_1_19_0 = det*w[1][1]*w[1][19]*K[0]*(1.0);
    const double G26_1_19_1 = det*w[1][1]*w[1][19]*K[2]*(1.0);
    const double G26_2_10_0 = det*w[1][2]*w[1][10]*K[0]*(1.0);
    const double G26_2_10_1 = det*w[1][2]*w[1][10]*K[2]*(1.0);
    const double G26_2_11_0 = det*w[1][2]*w[1][11]*K[0]*(1.0);
    const double G26_2_11_1 = det*w[1][2]*w[1][11]*K[2]*(1.0);
    const double G26_2_12_1 = det*w[1][2]*w[1][12]*K[2]*(1.0);
    const double G26_2_13_0 = det*w[1][2]*w[1][13]*K[0]*(1.0);
    const double G26_2_13_1 = det*w[1][2]*w[1][13]*K[2]*(1.0);
    const double G26_2_14_0 = det*w[1][2]*w[1][14]*K[0]*(1.0);
    const double G26_2_14_1 = det*w[1][2]*w[1][14]*K[2]*(1.0);
    const double G26_2_15_0 = det*w[1][2]*w[1][15]*K[0]*(1.0);
    const double G26_2_15_1 = det*w[1][2]*w[1][15]*K[2]*(1.0);
    const double G26_2_16_0 = det*w[1][2]*w[1][16]*K[0]*(1.0);
    const double G26_2_16_1 = det*w[1][2]*w[1][16]*K[2]*(1.0);
    const double G26_2_17_0 = det*w[1][2]*w[1][17]*K[0]*(1.0);
    const double G26_2_17_1 = det*w[1][2]*w[1][17]*K[2]*(1.0);
    const double G26_2_18_0 = det*w[1][2]*w[1][18]*K[0]*(1.0);
    const double G26_2_18_1 = det*w[1][2]*w[1][18]*K[2]*(1.0);
    const double G26_2_19_0 = det*w[1][2]*w[1][19]*K[0]*(1.0);
    const double G26_2_19_1 = det*w[1][2]*w[1][19]*K[2]*(1.0);
    const double G26_3_10_0 = det*w[1][3]*w[1][10]*K[0]*(1.0);
    const double G26_3_10_1 = det*w[1][3]*w[1][10]*K[2]*(1.0);
    const double G26_3_11_0 = det*w[1][3]*w[1][11]*K[0]*(1.0);
    const double G26_3_11_1 = det*w[1][3]*w[1][11]*K[2]*(1.0);
    const double G26_3_12_1 = det*w[1][3]*w[1][12]*K[2]*(1.0);
    const double G26_3_13_0 = det*w[1][3]*w[1][13]*K[0]*(1.0);
    const double G26_3_13_1 = det*w[1][3]*w[1][13]*K[2]*(1.0);
    const double G26_3_14_0 = det*w[1][3]*w[1][14]*K[0]*(1.0);
    const double G26_3_14_1 = det*w[1][3]*w[1][14]*K[2]*(1.0);
    const double G26_3_15_0 = det*w[1][3]*w[1][15]*K[0]*(1.0);
    const double G26_3_15_1 = det*w[1][3]*w[1][15]*K[2]*(1.0);
    const double G26_3_16_0 = det*w[1][3]*w[1][16]*K[0]*(1.0);
    const double G26_3_16_1 = det*w[1][3]*w[1][16]*K[2]*(1.0);
    const double G26_3_17_0 = det*w[1][3]*w[1][17]*K[0]*(1.0);
    const double G26_3_17_1 = det*w[1][3]*w[1][17]*K[2]*(1.0);
    const double G26_3_18_0 = det*w[1][3]*w[1][18]*K[0]*(1.0);
    const double G26_3_18_1 = det*w[1][3]*w[1][18]*K[2]*(1.0);
    const double G26_3_19_0 = det*w[1][3]*w[1][19]*K[0]*(1.0);
    const double G26_3_19_1 = det*w[1][3]*w[1][19]*K[2]*(1.0);
    const double G26_4_10_0 = det*w[1][4]*w[1][10]*K[0]*(1.0);
    const double G26_4_10_1 = det*w[1][4]*w[1][10]*K[2]*(1.0);
    const double G26_4_11_0 = det*w[1][4]*w[1][11]*K[0]*(1.0);
    const double G26_4_11_1 = det*w[1][4]*w[1][11]*K[2]*(1.0);
    const double G26_4_12_1 = det*w[1][4]*w[1][12]*K[2]*(1.0);
    const double G26_4_13_0 = det*w[1][4]*w[1][13]*K[0]*(1.0);
    const double G26_4_13_1 = det*w[1][4]*w[1][13]*K[2]*(1.0);
    const double G26_4_14_0 = det*w[1][4]*w[1][14]*K[0]*(1.0);
    const double G26_4_14_1 = det*w[1][4]*w[1][14]*K[2]*(1.0);
    const double G26_4_15_0 = det*w[1][4]*w[1][15]*K[0]*(1.0);
    const double G26_4_15_1 = det*w[1][4]*w[1][15]*K[2]*(1.0);
    const double G26_4_16_0 = det*w[1][4]*w[1][16]*K[0]*(1.0);
    const double G26_4_16_1 = det*w[1][4]*w[1][16]*K[2]*(1.0);
    const double G26_4_17_0 = det*w[1][4]*w[1][17]*K[0]*(1.0);
    const double G26_4_17_1 = det*w[1][4]*w[1][17]*K[2]*(1.0);
    const double G26_4_18_0 = det*w[1][4]*w[1][18]*K[0]*(1.0);
    const double G26_4_18_1 = det*w[1][4]*w[1][18]*K[2]*(1.0);
    const double G26_4_19_0 = det*w[1][4]*w[1][19]*K[0]*(1.0);
    const double G26_4_19_1 = det*w[1][4]*w[1][19]*K[2]*(1.0);
    const double G26_5_10_0 = det*w[1][5]*w[1][10]*K[0]*(1.0);
    const double G26_5_10_1 = det*w[1][5]*w[1][10]*K[2]*(1.0);
    const double G26_5_11_0 = det*w[1][5]*w[1][11]*K[0]*(1.0);
    const double G26_5_11_1 = det*w[1][5]*w[1][11]*K[2]*(1.0);
    const double G26_5_12_1 = det*w[1][5]*w[1][12]*K[2]*(1.0);
    const double G26_5_13_0 = det*w[1][5]*w[1][13]*K[0]*(1.0);
    const double G26_5_13_1 = det*w[1][5]*w[1][13]*K[2]*(1.0);
    const double G26_5_14_0 = det*w[1][5]*w[1][14]*K[0]*(1.0);
    const double G26_5_14_1 = det*w[1][5]*w[1][14]*K[2]*(1.0);
    const double G26_5_15_0 = det*w[1][5]*w[1][15]*K[0]*(1.0);
    const double G26_5_15_1 = det*w[1][5]*w[1][15]*K[2]*(1.0);
    const double G26_5_16_0 = det*w[1][5]*w[1][16]*K[0]*(1.0);
    const double G26_5_16_1 = det*w[1][5]*w[1][16]*K[2]*(1.0);
    const double G26_5_17_0 = det*w[1][5]*w[1][17]*K[0]*(1.0);
    const double G26_5_17_1 = det*w[1][5]*w[1][17]*K[2]*(1.0);
    const double G26_5_18_0 = det*w[1][5]*w[1][18]*K[0]*(1.0);
    const double G26_5_18_1 = det*w[1][5]*w[1][18]*K[2]*(1.0);
    const double G26_5_19_0 = det*w[1][5]*w[1][19]*K[0]*(1.0);
    const double G26_5_19_1 = det*w[1][5]*w[1][19]*K[2]*(1.0);
    const double G26_6_10_0 = det*w[1][6]*w[1][10]*K[0]*(1.0);
    const double G26_6_10_1 = det*w[1][6]*w[1][10]*K[2]*(1.0);
    const double G26_6_11_0 = det*w[1][6]*w[1][11]*K[0]*(1.0);
    const double G26_6_11_1 = det*w[1][6]*w[1][11]*K[2]*(1.0);
    const double G26_6_12_1 = det*w[1][6]*w[1][12]*K[2]*(1.0);
    const double G26_6_13_0 = det*w[1][6]*w[1][13]*K[0]*(1.0);
    const double G26_6_13_1 = det*w[1][6]*w[1][13]*K[2]*(1.0);
    const double G26_6_14_0 = det*w[1][6]*w[1][14]*K[0]*(1.0);
    const double G26_6_14_1 = det*w[1][6]*w[1][14]*K[2]*(1.0);
    const double G26_6_15_0 = det*w[1][6]*w[1][15]*K[0]*(1.0);
    const double G26_6_15_1 = det*w[1][6]*w[1][15]*K[2]*(1.0);
    const double G26_6_16_0 = det*w[1][6]*w[1][16]*K[0]*(1.0);
    const double G26_6_16_1 = det*w[1][6]*w[1][16]*K[2]*(1.0);
    const double G26_6_17_0 = det*w[1][6]*w[1][17]*K[0]*(1.0);
    const double G26_6_17_1 = det*w[1][6]*w[1][17]*K[2]*(1.0);
    const double G26_6_18_0 = det*w[1][6]*w[1][18]*K[0]*(1.0);
    const double G26_6_18_1 = det*w[1][6]*w[1][18]*K[2]*(1.0);
    const double G26_6_19_0 = det*w[1][6]*w[1][19]*K[0]*(1.0);
    const double G26_6_19_1 = det*w[1][6]*w[1][19]*K[2]*(1.0);
    const double G26_7_10_0 = det*w[1][7]*w[1][10]*K[0]*(1.0);
    const double G26_7_10_1 = det*w[1][7]*w[1][10]*K[2]*(1.0);
    const double G26_7_11_0 = det*w[1][7]*w[1][11]*K[0]*(1.0);
    const double G26_7_11_1 = det*w[1][7]*w[1][11]*K[2]*(1.0);
    const double G26_7_12_1 = det*w[1][7]*w[1][12]*K[2]*(1.0);
    const double G26_7_13_0 = det*w[1][7]*w[1][13]*K[0]*(1.0);
    const double G26_7_13_1 = det*w[1][7]*w[1][13]*K[2]*(1.0);
    const double G26_7_14_0 = det*w[1][7]*w[1][14]*K[0]*(1.0);
    const double G26_7_14_1 = det*w[1][7]*w[1][14]*K[2]*(1.0);
    const double G26_7_15_0 = det*w[1][7]*w[1][15]*K[0]*(1.0);
    const double G26_7_15_1 = det*w[1][7]*w[1][15]*K[2]*(1.0);
    const double G26_7_16_0 = det*w[1][7]*w[1][16]*K[0]*(1.0);
    const double G26_7_16_1 = det*w[1][7]*w[1][16]*K[2]*(1.0);
    const double G26_7_17_0 = det*w[1][7]*w[1][17]*K[0]*(1.0);
    const double G26_7_17_1 = det*w[1][7]*w[1][17]*K[2]*(1.0);
    const double G26_7_18_0 = det*w[1][7]*w[1][18]*K[0]*(1.0);
    const double G26_7_18_1 = det*w[1][7]*w[1][18]*K[2]*(1.0);
    const double G26_7_19_0 = det*w[1][7]*w[1][19]*K[0]*(1.0);
    const double G26_7_19_1 = det*w[1][7]*w[1][19]*K[2]*(1.0);
    const double G26_8_10_0 = det*w[1][8]*w[1][10]*K[0]*(1.0);
    const double G26_8_10_1 = det*w[1][8]*w[1][10]*K[2]*(1.0);
    const double G26_8_11_0 = det*w[1][8]*w[1][11]*K[0]*(1.0);
    const double G26_8_11_1 = det*w[1][8]*w[1][11]*K[2]*(1.0);
    const double G26_8_12_1 = det*w[1][8]*w[1][12]*K[2]*(1.0);
    const double G26_8_13_0 = det*w[1][8]*w[1][13]*K[0]*(1.0);
    const double G26_8_13_1 = det*w[1][8]*w[1][13]*K[2]*(1.0);
    const double G26_8_14_0 = det*w[1][8]*w[1][14]*K[0]*(1.0);
    const double G26_8_14_1 = det*w[1][8]*w[1][14]*K[2]*(1.0);
    const double G26_8_15_0 = det*w[1][8]*w[1][15]*K[0]*(1.0);
    const double G26_8_15_1 = det*w[1][8]*w[1][15]*K[2]*(1.0);
    const double G26_8_16_0 = det*w[1][8]*w[1][16]*K[0]*(1.0);
    const double G26_8_16_1 = det*w[1][8]*w[1][16]*K[2]*(1.0);
    const double G26_8_17_0 = det*w[1][8]*w[1][17]*K[0]*(1.0);
    const double G26_8_17_1 = det*w[1][8]*w[1][17]*K[2]*(1.0);
    const double G26_8_18_0 = det*w[1][8]*w[1][18]*K[0]*(1.0);
    const double G26_8_18_1 = det*w[1][8]*w[1][18]*K[2]*(1.0);
    const double G26_8_19_0 = det*w[1][8]*w[1][19]*K[0]*(1.0);
    const double G26_8_19_1 = det*w[1][8]*w[1][19]*K[2]*(1.0);
    const double G26_9_10_0 = det*w[1][9]*w[1][10]*K[0]*(1.0);
    const double G26_9_10_1 = det*w[1][9]*w[1][10]*K[2]*(1.0);
    const double G26_9_11_0 = det*w[1][9]*w[1][11]*K[0]*(1.0);
    const double G26_9_11_1 = det*w[1][9]*w[1][11]*K[2]*(1.0);
    const double G26_9_12_1 = det*w[1][9]*w[1][12]*K[2]*(1.0);
    const double G26_9_13_0 = det*w[1][9]*w[1][13]*K[0]*(1.0);
    const double G26_9_13_1 = det*w[1][9]*w[1][13]*K[2]*(1.0);
    const double G26_9_14_0 = det*w[1][9]*w[1][14]*K[0]*(1.0);
    const double G26_9_14_1 = det*w[1][9]*w[1][14]*K[2]*(1.0);
    const double G26_9_15_0 = det*w[1][9]*w[1][15]*K[0]*(1.0);
    const double G26_9_15_1 = det*w[1][9]*w[1][15]*K[2]*(1.0);
    const double G26_9_16_0 = det*w[1][9]*w[1][16]*K[0]*(1.0);
    const double G26_9_16_1 = det*w[1][9]*w[1][16]*K[2]*(1.0);
    const double G26_9_17_0 = det*w[1][9]*w[1][17]*K[0]*(1.0);
    const double G26_9_17_1 = det*w[1][9]*w[1][17]*K[2]*(1.0);
    const double G26_9_18_0 = det*w[1][9]*w[1][18]*K[0]*(1.0);
    const double G26_9_18_1 = det*w[1][9]*w[1][18]*K[2]*(1.0);
    const double G26_9_19_0 = det*w[1][9]*w[1][19]*K[0]*(1.0);
    const double G26_9_19_1 = det*w[1][9]*w[1][19]*K[2]*(1.0);
    const double G27_10_10_0 = det*w[1][10]*w[1][10]*K[1]*(1.0);
    const double G27_10_10_1 = det*w[1][10]*w[1][10]*K[3]*(1.0);
    const double G27_10_11_0 = det*w[1][10]*w[1][11]*K[1]*(1.0);
    const double G27_10_11_1 = det*w[1][10]*w[1][11]*K[3]*(1.0);
    const double G27_10_12_1 = det*w[1][10]*w[1][12]*K[3]*(1.0);
    const double G27_10_13_0 = det*w[1][10]*w[1][13]*K[1]*(1.0);
    const double G27_10_13_1 = det*w[1][10]*w[1][13]*K[3]*(1.0);
    const double G27_10_14_0 = det*w[1][10]*w[1][14]*K[1]*(1.0);
    const double G27_10_14_1 = det*w[1][10]*w[1][14]*K[3]*(1.0);
    const double G27_10_15_0 = det*w[1][10]*w[1][15]*K[1]*(1.0);
    const double G27_10_15_1 = det*w[1][10]*w[1][15]*K[3]*(1.0);
    const double G27_10_16_0 = det*w[1][10]*w[1][16]*K[1]*(1.0);
    const double G27_10_16_1 = det*w[1][10]*w[1][16]*K[3]*(1.0);
    const double G27_10_17_0 = det*w[1][10]*w[1][17]*K[1]*(1.0);
    const double G27_10_17_1 = det*w[1][10]*w[1][17]*K[3]*(1.0);
    const double G27_10_18_0 = det*w[1][10]*w[1][18]*K[1]*(1.0);
    const double G27_10_18_1 = det*w[1][10]*w[1][18]*K[3]*(1.0);
    const double G27_10_19_0 = det*w[1][10]*w[1][19]*K[1]*(1.0);
    const double G27_10_19_1 = det*w[1][10]*w[1][19]*K[3]*(1.0);
    const double G27_11_10_0 = det*w[1][11]*w[1][10]*K[1]*(1.0);
    const double G27_11_10_1 = det*w[1][11]*w[1][10]*K[3]*(1.0);
    const double G27_11_11_0 = det*w[1][11]*w[1][11]*K[1]*(1.0);
    const double G27_11_11_1 = det*w[1][11]*w[1][11]*K[3]*(1.0);
    const double G27_11_12_1 = det*w[1][11]*w[1][12]*K[3]*(1.0);
    const double G27_11_13_0 = det*w[1][11]*w[1][13]*K[1]*(1.0);
    const double G27_11_13_1 = det*w[1][11]*w[1][13]*K[3]*(1.0);
    const double G27_11_14_0 = det*w[1][11]*w[1][14]*K[1]*(1.0);
    const double G27_11_14_1 = det*w[1][11]*w[1][14]*K[3]*(1.0);
    const double G27_11_15_0 = det*w[1][11]*w[1][15]*K[1]*(1.0);
    const double G27_11_15_1 = det*w[1][11]*w[1][15]*K[3]*(1.0);
    const double G27_11_16_0 = det*w[1][11]*w[1][16]*K[1]*(1.0);
    const double G27_11_16_1 = det*w[1][11]*w[1][16]*K[3]*(1.0);
    const double G27_11_17_0 = det*w[1][11]*w[1][17]*K[1]*(1.0);
    const double G27_11_17_1 = det*w[1][11]*w[1][17]*K[3]*(1.0);
    const double G27_11_18_0 = det*w[1][11]*w[1][18]*K[1]*(1.0);
    const double G27_11_18_1 = det*w[1][11]*w[1][18]*K[3]*(1.0);
    const double G27_11_19_0 = det*w[1][11]*w[1][19]*K[1]*(1.0);
    const double G27_11_19_1 = det*w[1][11]*w[1][19]*K[3]*(1.0);
    const double G27_12_10_0 = det*w[1][12]*w[1][10]*K[1]*(1.0);
    const double G27_12_10_1 = det*w[1][12]*w[1][10]*K[3]*(1.0);
    const double G27_12_11_0 = det*w[1][12]*w[1][11]*K[1]*(1.0);
    const double G27_12_11_1 = det*w[1][12]*w[1][11]*K[3]*(1.0);
    const double G27_12_12_1 = det*w[1][12]*w[1][12]*K[3]*(1.0);
    const double G27_12_13_0 = det*w[1][12]*w[1][13]*K[1]*(1.0);
    const double G27_12_13_1 = det*w[1][12]*w[1][13]*K[3]*(1.0);
    const double G27_12_14_0 = det*w[1][12]*w[1][14]*K[1]*(1.0);
    const double G27_12_14_1 = det*w[1][12]*w[1][14]*K[3]*(1.0);
    const double G27_12_15_0 = det*w[1][12]*w[1][15]*K[1]*(1.0);
    const double G27_12_15_1 = det*w[1][12]*w[1][15]*K[3]*(1.0);
    const double G27_12_16_0 = det*w[1][12]*w[1][16]*K[1]*(1.0);
    const double G27_12_16_1 = det*w[1][12]*w[1][16]*K[3]*(1.0);
    const double G27_12_17_0 = det*w[1][12]*w[1][17]*K[1]*(1.0);
    const double G27_12_17_1 = det*w[1][12]*w[1][17]*K[3]*(1.0);
    const double G27_12_18_0 = det*w[1][12]*w[1][18]*K[1]*(1.0);
    const double G27_12_18_1 = det*w[1][12]*w[1][18]*K[3]*(1.0);
    const double G27_12_19_0 = det*w[1][12]*w[1][19]*K[1]*(1.0);
    const double G27_12_19_1 = det*w[1][12]*w[1][19]*K[3]*(1.0);
    const double G27_13_10_0 = det*w[1][13]*w[1][10]*K[1]*(1.0);
    const double G27_13_10_1 = det*w[1][13]*w[1][10]*K[3]*(1.0);
    const double G27_13_11_0 = det*w[1][13]*w[1][11]*K[1]*(1.0);
    const double G27_13_11_1 = det*w[1][13]*w[1][11]*K[3]*(1.0);
    const double G27_13_12_1 = det*w[1][13]*w[1][12]*K[3]*(1.0);
    const double G27_13_13_0 = det*w[1][13]*w[1][13]*K[1]*(1.0);
    const double G27_13_13_1 = det*w[1][13]*w[1][13]*K[3]*(1.0);
    const double G27_13_14_0 = det*w[1][13]*w[1][14]*K[1]*(1.0);
    const double G27_13_14_1 = det*w[1][13]*w[1][14]*K[3]*(1.0);
    const double G27_13_15_0 = det*w[1][13]*w[1][15]*K[1]*(1.0);
    const double G27_13_15_1 = det*w[1][13]*w[1][15]*K[3]*(1.0);
    const double G27_13_16_0 = det*w[1][13]*w[1][16]*K[1]*(1.0);
    const double G27_13_16_1 = det*w[1][13]*w[1][16]*K[3]*(1.0);
    const double G27_13_17_0 = det*w[1][13]*w[1][17]*K[1]*(1.0);
    const double G27_13_17_1 = det*w[1][13]*w[1][17]*K[3]*(1.0);
    const double G27_13_18_0 = det*w[1][13]*w[1][18]*K[1]*(1.0);
    const double G27_13_18_1 = det*w[1][13]*w[1][18]*K[3]*(1.0);
    const double G27_13_19_0 = det*w[1][13]*w[1][19]*K[1]*(1.0);
    const double G27_13_19_1 = det*w[1][13]*w[1][19]*K[3]*(1.0);
    const double G27_14_10_0 = det*w[1][14]*w[1][10]*K[1]*(1.0);
    const double G27_14_10_1 = det*w[1][14]*w[1][10]*K[3]*(1.0);
    const double G27_14_11_0 = det*w[1][14]*w[1][11]*K[1]*(1.0);
    const double G27_14_11_1 = det*w[1][14]*w[1][11]*K[3]*(1.0);
    const double G27_14_12_1 = det*w[1][14]*w[1][12]*K[3]*(1.0);
    const double G27_14_13_0 = det*w[1][14]*w[1][13]*K[1]*(1.0);
    const double G27_14_13_1 = det*w[1][14]*w[1][13]*K[3]*(1.0);
    const double G27_14_14_0 = det*w[1][14]*w[1][14]*K[1]*(1.0);
    const double G27_14_14_1 = det*w[1][14]*w[1][14]*K[3]*(1.0);
    const double G27_14_15_0 = det*w[1][14]*w[1][15]*K[1]*(1.0);
    const double G27_14_15_1 = det*w[1][14]*w[1][15]*K[3]*(1.0);
    const double G27_14_16_0 = det*w[1][14]*w[1][16]*K[1]*(1.0);
    const double G27_14_16_1 = det*w[1][14]*w[1][16]*K[3]*(1.0);
    const double G27_14_17_0 = det*w[1][14]*w[1][17]*K[1]*(1.0);
    const double G27_14_17_1 = det*w[1][14]*w[1][17]*K[3]*(1.0);
    const double G27_14_18_0 = det*w[1][14]*w[1][18]*K[1]*(1.0);
    const double G27_14_18_1 = det*w[1][14]*w[1][18]*K[3]*(1.0);
    const double G27_14_19_0 = det*w[1][14]*w[1][19]*K[1]*(1.0);
    const double G27_14_19_1 = det*w[1][14]*w[1][19]*K[3]*(1.0);
    const double G27_15_10_0 = det*w[1][15]*w[1][10]*K[1]*(1.0);
    const double G27_15_10_1 = det*w[1][15]*w[1][10]*K[3]*(1.0);
    const double G27_15_11_0 = det*w[1][15]*w[1][11]*K[1]*(1.0);
    const double G27_15_11_1 = det*w[1][15]*w[1][11]*K[3]*(1.0);
    const double G27_15_12_1 = det*w[1][15]*w[1][12]*K[3]*(1.0);
    const double G27_15_13_0 = det*w[1][15]*w[1][13]*K[1]*(1.0);
    const double G27_15_13_1 = det*w[1][15]*w[1][13]*K[3]*(1.0);
    const double G27_15_14_0 = det*w[1][15]*w[1][14]*K[1]*(1.0);
    const double G27_15_14_1 = det*w[1][15]*w[1][14]*K[3]*(1.0);
    const double G27_15_15_0 = det*w[1][15]*w[1][15]*K[1]*(1.0);
    const double G27_15_15_1 = det*w[1][15]*w[1][15]*K[3]*(1.0);
    const double G27_15_16_0 = det*w[1][15]*w[1][16]*K[1]*(1.0);
    const double G27_15_16_1 = det*w[1][15]*w[1][16]*K[3]*(1.0);
    const double G27_15_17_0 = det*w[1][15]*w[1][17]*K[1]*(1.0);
    const double G27_15_17_1 = det*w[1][15]*w[1][17]*K[3]*(1.0);
    const double G27_15_18_0 = det*w[1][15]*w[1][18]*K[1]*(1.0);
    const double G27_15_18_1 = det*w[1][15]*w[1][18]*K[3]*(1.0);
    const double G27_15_19_0 = det*w[1][15]*w[1][19]*K[1]*(1.0);
    const double G27_15_19_1 = det*w[1][15]*w[1][19]*K[3]*(1.0);
    const double G27_16_10_0 = det*w[1][16]*w[1][10]*K[1]*(1.0);
    const double G27_16_10_1 = det*w[1][16]*w[1][10]*K[3]*(1.0);
    const double G27_16_11_0 = det*w[1][16]*w[1][11]*K[1]*(1.0);
    const double G27_16_11_1 = det*w[1][16]*w[1][11]*K[3]*(1.0);
    const double G27_16_12_1 = det*w[1][16]*w[1][12]*K[3]*(1.0);
    const double G27_16_13_0 = det*w[1][16]*w[1][13]*K[1]*(1.0);
    const double G27_16_13_1 = det*w[1][16]*w[1][13]*K[3]*(1.0);
    const double G27_16_14_0 = det*w[1][16]*w[1][14]*K[1]*(1.0);
    const double G27_16_14_1 = det*w[1][16]*w[1][14]*K[3]*(1.0);
    const double G27_16_15_0 = det*w[1][16]*w[1][15]*K[1]*(1.0);
    const double G27_16_15_1 = det*w[1][16]*w[1][15]*K[3]*(1.0);
    const double G27_16_16_0 = det*w[1][16]*w[1][16]*K[1]*(1.0);
    const double G27_16_16_1 = det*w[1][16]*w[1][16]*K[3]*(1.0);
    const double G27_16_17_0 = det*w[1][16]*w[1][17]*K[1]*(1.0);
    const double G27_16_17_1 = det*w[1][16]*w[1][17]*K[3]*(1.0);
    const double G27_16_18_0 = det*w[1][16]*w[1][18]*K[1]*(1.0);
    const double G27_16_18_1 = det*w[1][16]*w[1][18]*K[3]*(1.0);
    const double G27_16_19_0 = det*w[1][16]*w[1][19]*K[1]*(1.0);
    const double G27_16_19_1 = det*w[1][16]*w[1][19]*K[3]*(1.0);
    const double G27_17_10_0 = det*w[1][17]*w[1][10]*K[1]*(1.0);
    const double G27_17_10_1 = det*w[1][17]*w[1][10]*K[3]*(1.0);
    const double G27_17_11_0 = det*w[1][17]*w[1][11]*K[1]*(1.0);
    const double G27_17_11_1 = det*w[1][17]*w[1][11]*K[3]*(1.0);
    const double G27_17_12_1 = det*w[1][17]*w[1][12]*K[3]*(1.0);
    const double G27_17_13_0 = det*w[1][17]*w[1][13]*K[1]*(1.0);
    const double G27_17_13_1 = det*w[1][17]*w[1][13]*K[3]*(1.0);
    const double G27_17_14_0 = det*w[1][17]*w[1][14]*K[1]*(1.0);
    const double G27_17_14_1 = det*w[1][17]*w[1][14]*K[3]*(1.0);
    const double G27_17_15_0 = det*w[1][17]*w[1][15]*K[1]*(1.0);
    const double G27_17_15_1 = det*w[1][17]*w[1][15]*K[3]*(1.0);
    const double G27_17_16_0 = det*w[1][17]*w[1][16]*K[1]*(1.0);
    const double G27_17_16_1 = det*w[1][17]*w[1][16]*K[3]*(1.0);
    const double G27_17_17_0 = det*w[1][17]*w[1][17]*K[1]*(1.0);
    const double G27_17_17_1 = det*w[1][17]*w[1][17]*K[3]*(1.0);
    const double G27_17_18_0 = det*w[1][17]*w[1][18]*K[1]*(1.0);
    const double G27_17_18_1 = det*w[1][17]*w[1][18]*K[3]*(1.0);
    const double G27_17_19_0 = det*w[1][17]*w[1][19]*K[1]*(1.0);
    const double G27_17_19_1 = det*w[1][17]*w[1][19]*K[3]*(1.0);
    const double G27_18_10_0 = det*w[1][18]*w[1][10]*K[1]*(1.0);
    const double G27_18_10_1 = det*w[1][18]*w[1][10]*K[3]*(1.0);
    const double G27_18_11_0 = det*w[1][18]*w[1][11]*K[1]*(1.0);
    const double G27_18_11_1 = det*w[1][18]*w[1][11]*K[3]*(1.0);
    const double G27_18_12_1 = det*w[1][18]*w[1][12]*K[3]*(1.0);
    const double G27_18_13_0 = det*w[1][18]*w[1][13]*K[1]*(1.0);
    const double G27_18_13_1 = det*w[1][18]*w[1][13]*K[3]*(1.0);
    const double G27_18_14_0 = det*w[1][18]*w[1][14]*K[1]*(1.0);
    const double G27_18_14_1 = det*w[1][18]*w[1][14]*K[3]*(1.0);
    const double G27_18_15_0 = det*w[1][18]*w[1][15]*K[1]*(1.0);
    const double G27_18_15_1 = det*w[1][18]*w[1][15]*K[3]*(1.0);
    const double G27_18_16_0 = det*w[1][18]*w[1][16]*K[1]*(1.0);
    const double G27_18_16_1 = det*w[1][18]*w[1][16]*K[3]*(1.0);
    const double G27_18_17_0 = det*w[1][18]*w[1][17]*K[1]*(1.0);
    const double G27_18_17_1 = det*w[1][18]*w[1][17]*K[3]*(1.0);
    const double G27_18_18_0 = det*w[1][18]*w[1][18]*K[1]*(1.0);
    const double G27_18_18_1 = det*w[1][18]*w[1][18]*K[3]*(1.0);
    const double G27_18_19_0 = det*w[1][18]*w[1][19]*K[1]*(1.0);
    const double G27_18_19_1 = det*w[1][18]*w[1][19]*K[3]*(1.0);
    const double G27_19_10_0 = det*w[1][19]*w[1][10]*K[1]*(1.0);
    const double G27_19_10_1 = det*w[1][19]*w[1][10]*K[3]*(1.0);
    const double G27_19_11_0 = det*w[1][19]*w[1][11]*K[1]*(1.0);
    const double G27_19_11_1 = det*w[1][19]*w[1][11]*K[3]*(1.0);
    const double G27_19_12_1 = det*w[1][19]*w[1][12]*K[3]*(1.0);
    const double G27_19_13_0 = det*w[1][19]*w[1][13]*K[1]*(1.0);
    const double G27_19_13_1 = det*w[1][19]*w[1][13]*K[3]*(1.0);
    const double G27_19_14_0 = det*w[1][19]*w[1][14]*K[1]*(1.0);
    const double G27_19_14_1 = det*w[1][19]*w[1][14]*K[3]*(1.0);
    const double G27_19_15_0 = det*w[1][19]*w[1][15]*K[1]*(1.0);
    const double G27_19_15_1 = det*w[1][19]*w[1][15]*K[3]*(1.0);
    const double G27_19_16_0 = det*w[1][19]*w[1][16]*K[1]*(1.0);
    const double G27_19_16_1 = det*w[1][19]*w[1][16]*K[3]*(1.0);
    const double G27_19_17_0 = det*w[1][19]*w[1][17]*K[1]*(1.0);
    const double G27_19_17_1 = det*w[1][19]*w[1][17]*K[3]*(1.0);
    const double G27_19_18_0 = det*w[1][19]*w[1][18]*K[1]*(1.0);
    const double G27_19_18_1 = det*w[1][19]*w[1][18]*K[3]*(1.0);
    const double G27_19_19_0 = det*w[1][19]*w[1][19]*K[1]*(1.0);
    const double G27_19_19_1 = det*w[1][19]*w[1][19]*K[3]*(1.0);
    const double G28_0_0 = det*w[0][0]*K[0]*(1.0);
    const double G28_0_1 = det*w[0][0]*K[2]*(1.0);
    const double G28_1_0 = det*w[0][1]*K[0]*(1.0);
    const double G28_2_1 = det*w[0][2]*K[2]*(1.0);
    const double G28_3_0 = det*w[0][3]*K[0]*(1.0);
    const double G28_3_1 = det*w[0][3]*K[2]*(1.0);
    const double G28_4_0 = det*w[0][4]*K[0]*(1.0);
    const double G28_4_1 = det*w[0][4]*K[2]*(1.0);
    const double G28_5_0 = det*w[0][5]*K[0]*(1.0);
    const double G28_5_1 = det*w[0][5]*K[2]*(1.0);
    const double G28_6_0 = det*w[0][6]*K[0]*(1.0);
    const double G28_6_1 = det*w[0][6]*K[2]*(1.0);
    const double G28_7_0 = det*w[0][7]*K[0]*(1.0);
    const double G28_7_1 = det*w[0][7]*K[2]*(1.0);
    const double G28_8_0 = det*w[0][8]*K[0]*(1.0);
    const double G28_8_1 = det*w[0][8]*K[2]*(1.0);
    const double G28_9_0 = det*w[0][9]*K[0]*(1.0);
    const double G28_9_1 = det*w[0][9]*K[2]*(1.0);
    const double G29_10_0 = det*w[0][10]*K[1]*(1.0);
    const double G29_10_1 = det*w[0][10]*K[3]*(1.0);
    const double G29_11_0 = det*w[0][11]*K[1]*(1.0);
    const double G29_12_1 = det*w[0][12]*K[3]*(1.0);
    const double G29_13_0 = det*w[0][13]*K[1]*(1.0);
    const double G29_13_1 = det*w[0][13]*K[3]*(1.0);
    const double G29_14_0 = det*w[0][14]*K[1]*(1.0);
    const double G29_14_1 = det*w[0][14]*K[3]*(1.0);
    const double G29_15_0 = det*w[0][15]*K[1]*(1.0);
    const double G29_15_1 = det*w[0][15]*K[3]*(1.0);
    const double G29_16_0 = det*w[0][16]*K[1]*(1.0);
    const double G29_16_1 = det*w[0][16]*K[3]*(1.0);
    const double G29_17_0 = det*w[0][17]*K[1]*(1.0);
    const double G29_17_1 = det*w[0][17]*K[3]*(1.0);
    const double G29_18_0 = det*w[0][18]*K[1]*(1.0);
    const double G29_18_1 = det*w[0][18]*K[3]*(1.0);
    const double G29_19_0 = det*w[0][19]*K[1]*(1.0);
    const double G29_19_1 = det*w[0][19]*K[3]*(1.0);
    
    // Compute element tensor
    A[0] = 0.849999999999998*G4_0_0_0 + 0.849999999999998*G4_0_0_1 - 0.174999999999999*G4_0_1_0 - 0.175000000000001*G4_0_2_1 - 0.0749999999999957*G4_0_3_0 - 0.0749999999999985*G4_0_3_1 - 0.0750000000000014*G4_0_4_0 - 0.0749999999999955*G4_0_4_1 + 0.0750000000000018*G4_0_5_0 - 1.35*G4_0_5_1 + 0.0750000000000015*G4_0_6_0 + 0.674999999999996*G4_0_6_1 - 1.35*G4_0_7_0 + 0.0750000000000023*G4_0_7_1 + 0.674999999999998*G4_0_8_0 + 0.0749999999999945*G4_0_8_1 + 0.849999999999998*G4_1_0_0 + 0.849999999999998*G4_1_0_1 - 0.175000000000001*G4_1_1_0 - 0.175000000000001*G4_1_2_1 - 0.0749999999999998*G4_1_3_0 - 0.0750000000000045*G4_1_3_1 - 0.0750000000000018*G4_1_4_0 - 0.0749999999999958*G4_1_4_1 + 0.0750000000000038*G4_1_5_0 - 1.35*G4_1_5_1 + 0.0750000000000019*G4_1_6_0 + 0.674999999999996*G4_1_6_1 - 1.35*G4_1_7_0 + 0.075000000000004*G4_1_7_1 + 0.674999999999999*G4_1_8_0 + 0.0750000000000006*G4_1_8_1 + 0.849999999999998*G5_0_0_0 + 0.849999999999998*G5_0_0_1 - 0.174999999999999*G5_0_1_0 - 0.175000000000001*G5_0_2_1 - 0.0749999999999957*G5_0_3_0 - 0.0749999999999985*G5_0_3_1 - 0.0750000000000014*G5_0_4_0 - 0.0749999999999955*G5_0_4_1 + 0.0750000000000018*G5_0_5_0 - 1.35*G5_0_5_1 + 0.0750000000000015*G5_0_6_0 + 0.674999999999996*G5_0_6_1 - 1.35*G5_0_7_0 + 0.0750000000000023*G5_0_7_1 + 0.674999999999998*G5_0_8_0 + 0.0749999999999945*G5_0_8_1 + 0.849999999999998*G5_1_0_0 + 0.849999999999998*G5_1_0_1 - 0.175000000000001*G5_1_1_0 - 0.175000000000001*G5_1_2_1 - 0.0749999999999998*G5_1_3_0 - 0.0750000000000045*G5_1_3_1 - 0.0750000000000018*G5_1_4_0 - 0.0749999999999958*G5_1_4_1 + 0.0750000000000038*G5_1_5_0 - 1.35*G5_1_5_1 + 0.0750000000000019*G5_1_6_0 + 0.674999999999996*G5_1_6_1 - 1.35*G5_1_7_0 + 0.075000000000004*G5_1_7_1 + 0.674999999999999*G5_1_8_0 + 0.0750000000000006*G5_1_8_1 + 0.15*G6_0_20 + 0.0333333333333328*G6_0_23 + 0.0333333333333337*G6_0_24 + 0.033333333333333*G6_0_25 + 0.149999999999999*G6_1_20 + 0.0333333333333339*G6_1_23 + 0.0333333333333344*G6_1_24 + 0.0333333333333343*G6_1_25 - 0.424999999999999*G7_0_0_0 - 0.424999999999999*G7_0_0_1 + 0.0874999999999993*G7_0_1_0 + 0.0875000000000006*G7_0_2_1 + 0.0374999999999978*G7_0_3_0 + 0.0374999999999992*G7_0_3_1 + 0.0375000000000007*G7_0_4_0 + 0.0374999999999977*G7_0_4_1 - 0.0375000000000009*G7_0_5_0 + 0.674999999999998*G7_0_5_1 - 0.0375000000000007*G7_0_6_0 - 0.337499999999998*G7_0_6_1 + 0.674999999999998*G7_0_7_0 - 0.0375000000000011*G7_0_7_1 - 0.337499999999999*G7_0_8_0 - 0.0374999999999972*G7_0_8_1 - 0.424999999999999*G7_1_0_0 - 0.424999999999999*G7_1_0_1 + 0.0875000000000004*G7_1_1_0 + 0.0875000000000007*G7_1_2_1 + 0.0374999999999999*G7_1_3_0 + 0.0375000000000023*G7_1_3_1 + 0.0375000000000009*G7_1_4_0 + 0.0374999999999979*G7_1_4_1 - 0.0375000000000019*G7_1_5_0 + 0.674999999999998*G7_1_5_1 - 0.0375000000000009*G7_1_6_0 - 0.337499999999998*G7_1_6_1 + 0.674999999999998*G7_1_7_0 - 0.037500000000002*G7_1_7_1 - 0.3375*G7_1_8_0 - 0.0375000000000003*G7_1_8_1 - 0.424999999999999*G8_0_0_0 - 0.424999999999999*G8_0_0_1 + 0.0874999999999993*G8_0_1_0 + 0.0875000000000006*G8_0_2_1 + 0.0374999999999978*G8_0_3_0 + 0.0374999999999992*G8_0_3_1 + 0.0375000000000007*G8_0_4_0 + 0.0374999999999977*G8_0_4_1 - 0.0375000000000009*G8_0_5_0 + 0.674999999999998*G8_0_5_1 - 0.0375000000000007*G8_0_6_0 - 0.337499999999998*G8_0_6_1 + 0.674999999999998*G8_0_7_0 - 0.0375000000000011*G8_0_7_1 - 0.337499999999999*G8_0_8_0 - 0.0374999999999972*G8_0_8_1 - 0.424999999999999*G8_1_0_0 - 0.424999999999999*G8_1_0_1 + 0.0875000000000004*G8_1_1_0 + 0.0875000000000007*G8_1_2_1 + 0.0374999999999999*G8_1_3_0 + 0.0375000000000023*G8_1_3_1 + 0.0375000000000009*G8_1_4_0 + 0.0374999999999979*G8_1_4_1 - 0.0375000000000019*G8_1_5_0 + 0.674999999999998*G8_1_5_1 - 0.0375000000000009*G8_1_6_0 - 0.337499999999998*G8_1_6_1 + 0.674999999999998*G8_1_7_0 - 0.037500000000002*G8_1_7_1 - 0.3375*G8_1_8_0 - 0.0375000000000003*G8_1_8_1 - 0.0749999999999998*G9_0_20 - 0.0166666666666664*G9_0_23 - 0.0166666666666668*G9_0_24 - 0.0166666666666665*G9_0_25 - 0.0749999999999997*G9_1_20 - 0.016666666666667*G9_1_23 - 0.0166666666666672*G9_1_24 - 0.0166666666666672*G9_1_25 + 0.849999999999998*G10_0_0_0 + 0.849999999999998*G10_0_0_1 - 0.174999999999999*G10_0_1_0 - 0.175000000000001*G10_0_2_1 - 0.0749999999999957*G10_0_3_0 - 0.0749999999999985*G10_0_3_1 - 0.0750000000000014*G10_0_4_0 - 0.0749999999999955*G10_0_4_1 + 0.0750000000000018*G10_0_5_0 - 1.35*G10_0_5_1 + 0.0750000000000015*G10_0_6_0 + 0.674999999999996*G10_0_6_1 - 1.35*G10_0_7_0 + 0.0750000000000023*G10_0_7_1 + 0.674999999999998*G10_0_8_0 + 0.0749999999999945*G10_0_8_1 + 0.849999999999998*G10_1_0_0 + 0.849999999999998*G10_1_0_1 - 0.175000000000001*G10_1_1_0 - 0.175000000000001*G10_1_2_1 - 0.0749999999999998*G10_1_3_0 - 0.0750000000000045*G10_1_3_1 - 0.0750000000000018*G10_1_4_0 - 0.0749999999999958*G10_1_4_1 + 0.0750000000000038*G10_1_5_0 - 1.35*G10_1_5_1 + 0.0750000000000019*G10_1_6_0 + 0.674999999999996*G10_1_6_1 - 1.35*G10_1_7_0 + 0.075000000000004*G10_1_7_1 + 0.674999999999999*G10_1_8_0 + 0.0750000000000006*G10_1_8_1 + 0.849999999999998*G11_0_10_0 + 0.849999999999998*G11_0_10_1 - 0.174999999999999*G11_0_11_0 - 0.175000000000001*G11_0_12_1 - 0.0749999999999957*G11_0_13_0 - 0.0749999999999985*G11_0_13_1 - 0.0750000000000014*G11_0_14_0 - 0.0749999999999955*G11_0_14_1 + 0.0750000000000018*G11_0_15_0 - 1.35*G11_0_15_1 + 0.0750000000000015*G11_0_16_0 + 0.674999999999996*G11_0_16_1 - 1.35*G11_0_17_0 + 0.0750000000000023*G11_0_17_1 + 0.674999999999998*G11_0_18_0 + 0.0749999999999945*G11_0_18_1 + 0.849999999999998*G11_1_10_0 + 0.849999999999998*G11_1_10_1 - 0.175000000000001*G11_1_11_0 - 0.175000000000001*G11_1_12_1 - 0.0749999999999998*G11_1_13_0 - 0.0750000000000045*G11_1_13_1 - 0.0750000000000018*G11_1_14_0 - 0.0749999999999958*G11_1_14_1 + 0.0750000000000038*G11_1_15_0 - 1.35*G11_1_15_1 + 0.0750000000000019*G11_1_16_0 + 0.674999999999996*G11_1_16_1 - 1.35*G11_1_17_0 + 0.075000000000004*G11_1_17_1 + 0.674999999999999*G11_1_18_0 + 0.0750000000000006*G11_1_18_1 - 0.424999999999999*G12_0_0_0 - 0.424999999999999*G12_0_0_1 + 0.0874999999999993*G12_0_1_0 + 0.0875000000000006*G12_0_2_1 + 0.0374999999999978*G12_0_3_0 + 0.0374999999999992*G12_0_3_1 + 0.0375000000000007*G12_0_4_0 + 0.0374999999999977*G12_0_4_1 - 0.0375000000000009*G12_0_5_0 + 0.674999999999998*G12_0_5_1 - 0.0375000000000007*G12_0_6_0 - 0.337499999999998*G12_0_6_1 + 0.674999999999998*G12_0_7_0 - 0.0375000000000011*G12_0_7_1 - 0.337499999999999*G12_0_8_0 - 0.0374999999999972*G12_0_8_1 - 0.424999999999999*G12_1_0_0 - 0.424999999999999*G12_1_0_1 + 0.0875000000000004*G12_1_1_0 + 0.0875000000000007*G12_1_2_1 + 0.0374999999999999*G12_1_3_0 + 0.0375000000000023*G12_1_3_1 + 0.0375000000000009*G12_1_4_0 + 0.0374999999999979*G12_1_4_1 - 0.0375000000000019*G12_1_5_0 + 0.674999999999998*G12_1_5_1 - 0.0375000000000009*G12_1_6_0 - 0.337499999999998*G12_1_6_1 + 0.674999999999998*G12_1_7_0 - 0.037500000000002*G12_1_7_1 - 0.3375*G12_1_8_0 - 0.0375000000000003*G12_1_8_1 - 0.424999999999999*G13_0_10_0 - 0.424999999999999*G13_0_10_1 + 0.0874999999999993*G13_0_11_0 + 0.0875000000000006*G13_0_12_1 + 0.0374999999999978*G13_0_13_0 + 0.0374999999999992*G13_0_13_1 + 0.0375000000000007*G13_0_14_0 + 0.0374999999999977*G13_0_14_1 - 0.0375000000000009*G13_0_15_0 + 0.674999999999998*G13_0_15_1 - 0.0375000000000007*G13_0_16_0 - 0.337499999999998*G13_0_16_1 + 0.674999999999998*G13_0_17_0 - 0.0375000000000011*G13_0_17_1 - 0.337499999999999*G13_0_18_0 - 0.0374999999999972*G13_0_18_1 - 0.424999999999999*G13_1_10_0 - 0.424999999999999*G13_1_10_1 + 0.0875000000000004*G13_1_11_0 + 0.0875000000000007*G13_1_12_1 + 0.0374999999999999*G13_1_13_0 + 0.0375000000000023*G13_1_13_1 + 0.0375000000000009*G13_1_14_0 + 0.0374999999999979*G13_1_14_1 - 0.0375000000000019*G13_1_15_0 + 0.674999999999998*G13_1_15_1 - 0.0375000000000009*G13_1_16_0 - 0.337499999999998*G13_1_16_1 + 0.674999999999998*G13_1_17_0 - 0.037500000000002*G13_1_17_1 - 0.3375*G13_1_18_0 - 0.0375000000000003*G13_1_18_1 - 35.4166666666665*G20_0_0_0 - 35.4166666666665*G20_0_0_1 + 5.95238095238095*G20_0_1_0 + 5.95238095238098*G20_0_2_1 - 3.42873787088221e-14*G20_0_3_0 + 1.35454093688064e-13*G20_0_3_1 - 2.24295815210926e-13*G20_0_4_1 - 10.7142857142857*G20_0_5_0 + 53.5714285714283*G20_0_5_1 - 24.1071428571427*G20_0_6_1 + 53.5714285714284*G20_0_7_0 - 10.7142857142857*G20_0_7_1 - 24.1071428571428*G20_0_8_0 + 2.78778803969489e-14*G20_0_8_1 + 10.7142857142857*G20_0_9_0 + 10.7142857142856*G20_0_9_1 - 2.97619047619045*G20_1_0_0 - 2.97619047619046*G20_1_0_1 + 2.97619047619045*G20_1_1_0 + 1.77083333333333*G20_1_2_1 - 0.133928571428573*G20_1_3_0 + 4.68749999999998*G20_1_3_1 + 0.803571428571425*G20_1_4_0 - 2.81250000000001*G20_1_4_1 + 0.133928571428575*G20_1_5_0 + 4.82142857142856*G20_1_5_1 - 0.803571428571426*G20_1_6_0 - 3.61607142857141*G20_1_6_1 + 4.55357142857139*G20_1_7_0 - 0.133928571428594*G20_1_7_1 - 4.55357142857139*G20_1_8_0 - 4.68749999999994*G20_1_8_1 + 2.94642857142854*G20_1_9_1 - 2.97619047619046*G20_2_0_0 - 2.97619047619047*G20_2_0_1 + 1.77083333333333*G20_2_1_0 + 2.97619047619046*G20_2_2_1 - 2.81249999999998*G20_2_3_0 + 0.803571428571428*G20_2_3_1 + 4.68749999999997*G20_2_4_0 - 0.133928571428584*G20_2_4_1 - 0.133928571428567*G20_2_5_0 + 4.55357142857141*G20_2_5_1 - 4.68749999999997*G20_2_6_0 - 4.55357142857139*G20_2_6_1 + 4.82142857142856*G20_2_7_0 + 0.13392857142857*G20_2_7_1 - 3.61607142857142*G20_2_8_0 - 0.803571428571413*G20_2_8_1 + 2.94642857142855*G20_2_9_0 - 2.15799600411515e-14*G20_2_9_1 + 1.75831571525009e-14*G20_3_0_0 + 4.82142857142853*G20_3_1_0 - 3.6160714285714*G20_3_2_1 + 14.8660714285714*G20_3_3_0 + 14.8660714285714*G20_3_3_1 - 5.62499999999997*G20_3_4_0 + 2.81249999999994*G20_3_4_1 - 0.40178571428572*G20_3_5_0 - 2.41071428571423*G20_3_5_1 + 5.62499999999996*G20_3_6_0 + 6.02678571428571*G20_3_6_1 + 2.41071428571423*G20_3_7_0 + 4.41964285714275*G20_3_7_1 - 7.23214285714279*G20_3_8_0 - 14.8660714285713*G20_3_8_1 - 14.4642857142857*G20_3_9_0 - 7.23214285714287*G20_3_9_1 - 3.61607142857141*G20_4_1_0 + 2.62072575252402e-14*G20_4_1_1 + 4.82142857142853*G20_4_2_1 + 2.81249999999998*G20_4_3_0 - 5.62500000000001*G20_4_3_1 + 14.8660714285713*G20_4_4_0 + 14.8660714285713*G20_4_4_1 + 4.41964285714284*G20_4_5_0 + 2.41071428571424*G20_4_5_1 - 14.8660714285713*G20_4_6_0 - 7.23214285714273*G20_4_6_1 - 2.41071428571428*G20_4_7_0 - 0.401785714285736*G20_4_7_1 + 6.02678571428569*G20_4_8_0 + 5.625*G20_4_8_1 - 7.23214285714281*G20_4_9_0 - 14.4642857142857*G20_4_9_1 - 26.7857142857142*G20_5_0_0 - 26.7857142857142*G20_5_0_1 + 4.6875*G20_5_1_0 - 1.96327547755179e-14*G20_5_1_1 + 0.669642857142897*G20_5_2_1 - 4.01785714285714*G20_5_3_0 - 2.00892857142845*G20_5_3_1 - 10.0446428571428*G20_5_4_0 - 8.03571428571436*G20_5_4_1 - 8.0357142857142*G20_5_5_0 + 40.1785714285712*G20_5_5_1 + 10.0446428571428*G20_5_6_0 - 14.0625*G20_5_6_1 + 44.1964285714284*G20_5_7_0 - 4.01785714285705*G20_5_7_1 - 22.0982142857143*G20_5_8_0 + 2.00892857142852*G20_5_8_1 + 12.0535714285713*G20_5_9_0 + 12.0535714285713*G20_5_9_1 + 12.0535714285714*G20_6_0_0 + 12.0535714285714*G20_6_0_1 - 2.8125*G20_6_1_0 + 1.86427266398022e-14*G20_6_1_1 + 5.22321428571423*G20_6_2_1 - 0.401785714285704*G20_6_3_0 - 0.803571428571496*G20_6_3_1 + 15.2678571428571*G20_6_4_0 + 7.63392857142858*G20_6_4_1 + 10.0446428571428*G20_6_5_0 - 14.0624999999999*G20_6_5_1 - 15.2678571428571*G20_6_6_0 - 3.21428571428566*G20_6_6_1 - 22.0982142857142*G20_6_7_0 + 2.00892857142852*G20_6_7_1 + 12.8571428571429*G20_6_8_0 + 0.803571428571458*G20_6_8_1 - 9.6428571428571*G20_6_9_0 - 9.64285714285708*G20_6_9_1 - 26.7857142857142*G20_7_0_0 - 26.7857142857142*G20_7_0_1 + 0.66964285714289*G20_7_1_0 + 4.68750000000001*G20_7_2_1 - 8.03571428571428*G20_7_3_0 - 10.0446428571427*G20_7_3_1 - 2.00892857142856*G20_7_4_0 - 4.01785714285725*G20_7_4_1 - 4.0178571428571*G20_7_5_0 + 44.1964285714283*G20_7_5_1 + 2.00892857142857*G20_7_6_0 - 22.0982142857142*G20_7_6_1 + 40.1785714285713*G20_7_7_0 - 8.03571428571416*G20_7_7_1 - 14.0625000000001*G20_7_8_0 + 10.0446428571428*G20_7_8_1 + 12.0535714285714*G20_7_9_0 + 12.0535714285713*G20_7_9_1 + 12.0535714285714*G20_8_0_0 + 12.0535714285714*G20_8_0_1 + 5.22321428571422*G20_8_1_0 - 2.8125*G20_8_2_1 + 7.63392857142855*G20_8_3_0 + 15.267857142857*G20_8_3_1 - 0.803571428571424*G20_8_4_0 - 0.401785714285658*G20_8_4_1 + 2.00892857142855*G20_8_5_0 - 22.0982142857142*G20_8_5_1 + 0.803571428571421*G20_8_6_0 + 12.8571428571428*G20_8_6_1 - 14.0625*G20_8_7_0 + 10.0446428571427*G20_8_7_1 - 3.21428571428561*G20_8_8_0 - 15.267857142857*G20_8_8_1 - 9.6428571428571*G20_8_9_0 - 9.64285714285713*G20_8_9_1 - 5.35714285714283*G20_9_0_0 - 5.35714285714285*G20_9_0_1 + 2.94642857142856*G20_9_1_0 + 2.94642857142857*G20_9_2_1 + 16.8749999999999*G20_9_3_0 + 9.64285714285711*G20_9_3_1 + 9.64285714285709*G20_9_4_0 + 16.8749999999998*G20_9_4_1 + 12.0535714285714*G20_9_5_0 + 12.0535714285714*G20_9_5_1 - 9.64285714285709*G20_9_6_0 - 9.64285714285705*G20_9_6_1 + 12.0535714285714*G20_9_7_0 + 12.0535714285713*G20_9_7_1 - 9.6428571428571*G20_9_8_0 - 9.64285714285703*G20_9_8_1 - 28.9285714285713*G20_9_9_0 - 28.9285714285714*G20_9_9_1 - 35.4166666666665*G21_0_0_10 - 2.97619047619045*G21_0_0_11 - 2.97619047619046*G21_0_0_12 + 1.75866265994529e-14*G21_0_0_13 - 26.7857142857142*G21_0_0_15 + 12.0535714285714*G21_0_0_16 - 26.7857142857142*G21_0_0_17 + 12.0535714285714*G21_0_0_18 - 5.35714285714283*G21_0_0_19 - 35.4166666666665*G21_0_1_10 - 2.97619047619046*G21_0_1_11 - 2.97619047619047*G21_0_1_12 - 26.7857142857142*G21_0_1_15 + 12.0535714285714*G21_0_1_16 - 26.7857142857142*G21_0_1_17 + 12.0535714285714*G21_0_1_18 - 5.35714285714285*G21_0_1_19 + 5.95238095238095*G21_1_0_10 + 2.97619047619045*G21_1_0_11 + 1.77083333333333*G21_1_0_12 + 4.82142857142854*G21_1_0_13 - 3.61607142857141*G21_1_0_14 + 4.6875*G21_1_0_15 - 2.8125*G21_1_0_16 + 0.66964285714289*G21_1_0_17 + 5.22321428571422*G21_1_0_18 + 2.94642857142856*G21_1_0_19 + 2.62072575252402e-14*G21_1_1_14 - 1.96327547755179e-14*G21_1_1_15 + 1.86427266398022e-14*G21_1_1_16 + 5.95238095238098*G21_2_1_10 + 1.77083333333333*G21_2_1_11 + 2.97619047619046*G21_2_1_12 - 3.6160714285714*G21_2_1_13 + 4.82142857142853*G21_2_1_14 + 0.669642857142897*G21_2_1_15 + 5.22321428571423*G21_2_1_16 + 4.68750000000001*G21_2_1_17 - 2.8125*G21_2_1_18 + 2.94642857142857*G21_2_1_19 - 3.47332297472025e-14*G21_3_0_10 - 0.133928571428573*G21_3_0_11 - 2.81249999999998*G21_3_0_12 + 14.8660714285714*G21_3_0_13 + 2.81249999999998*G21_3_0_14 - 4.01785714285714*G21_3_0_15 - 0.401785714285704*G21_3_0_16 - 8.03571428571428*G21_3_0_17 + 7.63392857142855*G21_3_0_18 + 16.8749999999999*G21_3_0_19 + 1.3564490988229e-13*G21_3_1_10 + 4.68749999999998*G21_3_1_11 + 0.803571428571427*G21_3_1_12 + 14.8660714285714*G21_3_1_13 - 5.62500000000001*G21_3_1_14 - 2.00892857142845*G21_3_1_15 - 0.803571428571496*G21_3_1_16 - 10.0446428571427*G21_3_1_17 + 15.267857142857*G21_3_1_18 + 9.64285714285711*G21_3_1_19 + 0.803571428571425*G21_4_0_11 + 4.68749999999997*G21_4_0_12 - 5.62499999999996*G21_4_0_13 + 14.8660714285713*G21_4_0_14 - 10.0446428571428*G21_4_0_15 + 15.2678571428571*G21_4_0_16 - 2.00892857142856*G21_4_0_17 - 0.803571428571424*G21_4_0_18 + 9.64285714285709*G21_4_0_19 - 2.24741639144252e-13*G21_4_1_10 - 2.81250000000001*G21_4_1_11 - 0.133928571428585*G21_4_1_12 + 2.81249999999994*G21_4_1_13 + 14.8660714285713*G21_4_1_14 - 8.03571428571436*G21_4_1_15 + 7.63392857142858*G21_4_1_16 - 4.01785714285725*G21_4_1_17 - 0.401785714285658*G21_4_1_18 + 16.8749999999998*G21_4_1_19 - 10.7142857142857*G21_5_0_10 + 0.133928571428575*G21_5_0_11 - 0.133928571428566*G21_5_0_12 - 0.40178571428572*G21_5_0_13 + 4.41964285714284*G21_5_0_14 - 8.0357142857142*G21_5_0_15 + 10.0446428571428*G21_5_0_16 - 4.0178571428571*G21_5_0_17 + 2.00892857142855*G21_5_0_18 + 12.0535714285714*G21_5_0_19 + 53.5714285714283*G21_5_1_10 + 4.82142857142856*G21_5_1_11 + 4.55357142857141*G21_5_1_12 - 2.41071428571423*G21_5_1_13 + 2.41071428571424*G21_5_1_14 + 40.1785714285712*G21_5_1_15 - 14.0624999999999*G21_5_1_16 + 44.1964285714283*G21_5_1_17 - 22.0982142857142*G21_5_1_18 + 12.0535714285714*G21_5_1_19 - 0.803571428571426*G21_6_0_11 - 4.68749999999997*G21_6_0_12 + 5.62499999999996*G21_6_0_13 - 14.8660714285713*G21_6_0_14 + 10.0446428571428*G21_6_0_15 - 15.2678571428571*G21_6_0_16 + 2.00892857142857*G21_6_0_17 + 0.803571428571421*G21_6_0_18 - 9.64285714285709*G21_6_0_19 - 24.1071428571427*G21_6_1_10 - 3.61607142857141*G21_6_1_11 - 4.55357142857139*G21_6_1_12 + 6.02678571428571*G21_6_1_13 - 7.23214285714273*G21_6_1_14 - 14.0625*G21_6_1_15 - 3.21428571428566*G21_6_1_16 - 22.0982142857142*G21_6_1_17 + 12.8571428571428*G21_6_1_18 - 9.64285714285705*G21_6_1_19 + 53.5714285714284*G21_7_0_10 + 4.55357142857139*G21_7_0_11 + 4.82142857142856*G21_7_0_12 + 2.41071428571423*G21_7_0_13 - 2.41071428571428*G21_7_0_14 + 44.1964285714284*G21_7_0_15 - 22.0982142857142*G21_7_0_16 + 40.1785714285713*G21_7_0_17 - 14.0625*G21_7_0_18 + 12.0535714285714*G21_7_0_19 - 10.7142857142857*G21_7_1_10 - 0.133928571428594*G21_7_1_11 + 0.13392857142857*G21_7_1_12 + 4.41964285714275*G21_7_1_13 - 0.401785714285736*G21_7_1_14 - 4.01785714285705*G21_7_1_15 + 2.00892857142852*G21_7_1_16 - 8.03571428571416*G21_7_1_17 + 10.0446428571427*G21_7_1_18 + 12.0535714285713*G21_7_1_19 - 24.1071428571429*G21_8_0_10 - 4.55357142857139*G21_8_0_11 - 3.61607142857142*G21_8_0_12 - 7.23214285714279*G21_8_0_13 + 6.02678571428569*G21_8_0_14 - 22.0982142857143*G21_8_0_15 + 12.8571428571429*G21_8_0_16 - 14.0625000000001*G21_8_0_17 - 3.21428571428561*G21_8_0_18 - 9.6428571428571*G21_8_0_19 + 2.84885030604927e-14*G21_8_1_10 - 4.68749999999994*G21_8_1_11 - 0.803571428571413*G21_8_1_12 - 14.8660714285713*G21_8_1_13 + 5.625*G21_8_1_14 + 2.00892857142852*G21_8_1_15 + 0.803571428571458*G21_8_1_16 + 10.0446428571428*G21_8_1_17 - 15.267857142857*G21_8_1_18 - 9.64285714285703*G21_8_1_19 + 10.7142857142857*G21_9_0_10 + 2.94642857142855*G21_9_0_12 - 14.4642857142857*G21_9_0_13 - 7.23214285714281*G21_9_0_14 + 12.0535714285713*G21_9_0_15 - 9.6428571428571*G21_9_0_16 + 12.0535714285714*G21_9_0_17 - 9.6428571428571*G21_9_0_18 - 28.9285714285713*G21_9_0_19 + 10.7142857142856*G21_9_1_10 + 2.94642857142854*G21_9_1_11 - 2.18020046460765e-14*G21_9_1_12 - 7.23214285714286*G21_9_1_13 - 14.4642857142857*G21_9_1_14 + 12.0535714285713*G21_9_1_15 - 9.64285714285707*G21_9_1_16 + 12.0535714285713*G21_9_1_17 - 9.64285714285713*G21_9_1_18 - 28.9285714285714*G21_9_1_19 + 17.7083333333332*G24_0_0_0 + 17.7083333333333*G24_0_0_1 - 2.97619047619048*G24_0_1_0 - 2.97619047619049*G24_0_2_1 + 1.71436893544111e-14*G24_0_3_0 - 6.77270468440322e-14*G24_0_3_1 + 1.12147907605463e-13*G24_0_4_1 + 5.35714285714283*G24_0_5_0 - 26.7857142857142*G24_0_5_1 + 12.0535714285713*G24_0_6_1 - 26.7857142857142*G24_0_7_0 + 5.35714285714284*G24_0_7_1 + 12.0535714285714*G24_0_8_0 - 1.39389401984744e-14*G24_0_8_1 - 5.35714285714285*G24_0_9_0 - 5.35714285714281*G24_0_9_1 + 1.48809523809523*G24_1_0_0 + 1.48809523809523*G24_1_0_1 - 1.48809523809523*G24_1_1_0 - 0.885416666666667*G24_1_2_1 + 0.0669642857142865*G24_1_3_0 - 2.34374999999999*G24_1_3_1 - 0.401785714285713*G24_1_4_0 + 1.40625000000001*G24_1_4_1 - 0.0669642857142876*G24_1_5_0 - 2.41071428571428*G24_1_5_1 + 0.401785714285713*G24_1_6_0 + 1.80803571428571*G24_1_6_1 - 2.27678571428569*G24_1_7_0 + 0.066964285714297*G24_1_7_1 + 2.27678571428569*G24_1_8_0 + 2.34374999999997*G24_1_8_1 - 1.47321428571427*G24_1_9_1 + 1.48809523809523*G24_2_0_0 + 1.48809523809523*G24_2_0_1 - 0.885416666666663*G24_2_1_0 - 1.48809523809523*G24_2_2_1 + 1.40624999999999*G24_2_3_0 - 0.401785714285714*G24_2_3_1 - 2.34374999999998*G24_2_4_0 + 0.0669642857142922*G24_2_4_1 + 0.0669642857142833*G24_2_5_0 - 2.27678571428571*G24_2_5_1 + 2.34374999999998*G24_2_6_0 + 2.27678571428569*G24_2_6_1 - 2.41071428571428*G24_2_7_0 - 0.0669642857142851*G24_2_7_1 + 1.80803571428571*G24_2_8_0 + 0.401785714285707*G24_2_8_1 - 1.47321428571427*G24_2_9_0 + 1.07899800205757e-14*G24_2_9_1 - 2.41071428571427*G24_3_1_0 + 1.8080357142857*G24_3_2_1 - 7.43303571428569*G24_3_3_0 - 7.43303571428569*G24_3_3_1 + 2.81249999999998*G24_3_4_0 - 1.40624999999997*G24_3_4_1 + 0.20089285714286*G24_3_5_0 + 1.20535714285712*G24_3_5_1 - 2.81249999999998*G24_3_6_0 - 3.01339285714286*G24_3_6_1 - 1.20535714285712*G24_3_7_0 - 2.20982142857138*G24_3_7_1 + 3.61607142857139*G24_3_8_0 + 7.43303571428564*G24_3_8_1 + 7.23214285714283*G24_3_9_0 + 3.61607142857143*G24_3_9_1 + 1.8080357142857*G24_4_1_0 - 1.31036287626201e-14*G24_4_1_1 - 2.41071428571427*G24_4_2_1 - 1.40624999999999*G24_4_3_0 + 2.8125*G24_4_3_1 - 7.43303571428567*G24_4_4_0 - 7.43303571428567*G24_4_4_1 - 2.20982142857142*G24_4_5_0 - 1.20535714285712*G24_4_5_1 + 7.43303571428567*G24_4_6_0 + 3.61607142857137*G24_4_6_1 + 1.20535714285714*G24_4_7_0 + 0.200892857142868*G24_4_7_1 - 3.01339285714285*G24_4_8_0 - 2.8125*G24_4_8_1 + 3.61607142857141*G24_4_9_0 + 7.23214285714283*G24_4_9_1 + 13.3928571428571*G24_5_0_0 + 13.3928571428571*G24_5_0_1 - 2.34375*G24_5_1_0 - 0.334821428571448*G24_5_2_1 + 2.00892857142857*G24_5_3_0 + 1.00446428571422*G24_5_3_1 + 5.0223214285714*G24_5_4_0 + 4.01785714285718*G24_5_4_1 + 4.0178571428571*G24_5_5_0 - 20.0892857142856*G24_5_5_1 - 5.02232142857141*G24_5_6_0 + 7.03124999999999*G24_5_6_1 - 22.0982142857142*G24_5_7_0 + 2.00892857142853*G24_5_7_1 + 11.0491071428571*G24_5_8_0 - 1.00446428571426*G24_5_8_1 - 6.02678571428566*G24_5_9_0 - 6.02678571428567*G24_5_9_1 - 6.02678571428569*G24_6_0_0 - 6.02678571428569*G24_6_0_1 + 1.40625*G24_6_1_0 - 2.61160714285712*G24_6_2_1 + 0.200892857142852*G24_6_3_0 + 0.401785714285748*G24_6_3_1 - 7.63392857142853*G24_6_4_0 - 3.81696428571429*G24_6_4_1 - 5.02232142857141*G24_6_5_0 + 7.03124999999997*G24_6_5_1 + 7.63392857142853*G24_6_6_0 + 1.60714285714283*G24_6_6_1 + 11.0491071428571*G24_6_7_0 - 1.00446428571426*G24_6_7_1 - 6.42857142857143*G24_6_8_0 - 0.401785714285729*G24_6_8_1 + 4.82142857142855*G24_6_9_0 + 4.82142857142854*G24_6_9_1 + 13.3928571428571*G24_7_0_0 + 13.3928571428571*G24_7_0_1 - 0.334821428571445*G24_7_1_0 - 2.34375*G24_7_2_1 + 4.01785714285714*G24_7_3_0 + 5.02232142857135*G24_7_3_1 + 1.00446428571428*G24_7_4_0 + 2.00892857142862*G24_7_4_1 + 2.00892857142855*G24_7_5_0 - 22.0982142857142*G24_7_5_1 - 1.00446428571428*G24_7_6_0 + 11.0491071428571*G24_7_6_1 - 20.0892857142857*G24_7_7_0 + 4.01785714285708*G24_7_7_1 + 7.03125000000003*G24_7_8_0 - 5.02232142857138*G24_7_8_1 - 6.02678571428569*G24_7_9_0 - 6.02678571428567*G24_7_9_1 - 6.0267857142857*G24_8_0_0 - 6.02678571428569*G24_8_0_1 - 2.61160714285711*G24_8_1_0 + 1.40625*G24_8_2_1 - 3.81696428571428*G24_8_3_0 - 7.6339285714285*G24_8_3_1 + 0.401785714285712*G24_8_4_0 + 0.200892857142829*G24_8_4_1 - 1.00446428571427*G24_8_5_0 + 11.0491071428571*G24_8_5_1 - 0.401785714285711*G24_8_6_0 - 6.42857142857141*G24_8_6_1 + 7.03125000000001*G24_8_7_0 - 5.02232142857137*G24_8_7_1 + 1.6071428571428*G24_8_8_0 + 7.63392857142849*G24_8_8_1 + 4.82142857142855*G24_8_9_0 + 4.82142857142856*G24_8_9_1 + 2.67857142857142*G24_9_0_0 + 2.67857142857143*G24_9_0_1 - 1.47321428571428*G24_9_1_0 - 1.47321428571428*G24_9_2_1 - 8.43749999999996*G24_9_3_0 - 4.82142857142855*G24_9_3_1 - 4.82142857142854*G24_9_4_0 - 8.43749999999992*G24_9_4_1 - 6.02678571428572*G24_9_5_0 - 6.02678571428571*G24_9_5_1 + 4.82142857142855*G24_9_6_0 + 4.82142857142853*G24_9_6_1 - 6.02678571428569*G24_9_7_0 - 6.02678571428567*G24_9_7_1 + 4.82142857142855*G24_9_8_0 + 4.82142857142851*G24_9_8_1 + 14.4642857142857*G24_9_9_0 + 14.4642857142857*G24_9_9_1 + 17.7083333333332*G25_0_0_10 + 1.48809523809523*G25_0_0_11 + 1.48809523809523*G25_0_0_12 + 13.3928571428571*G25_0_0_15 - 6.02678571428569*G25_0_0_16 + 13.3928571428571*G25_0_0_17 - 6.0267857142857*G25_0_0_18 + 2.67857142857142*G25_0_0_19 + 17.7083333333333*G25_0_1_10 + 1.48809523809523*G25_0_1_11 + 1.48809523809523*G25_0_1_12 + 13.3928571428571*G25_0_1_15 - 6.02678571428569*G25_0_1_16 + 13.3928571428571*G25_0_1_17 - 6.02678571428569*G25_0_1_18 + 2.67857142857143*G25_0_1_19 - 2.97619047619048*G25_1_0_10 - 1.48809523809523*G25_1_0_11 - 0.885416666666663*G25_1_0_12 - 2.41071428571427*G25_1_0_13 + 1.8080357142857*G25_1_0_14 - 2.34375*G25_1_0_15 + 1.40625*G25_1_0_16 - 0.334821428571445*G25_1_0_17 - 2.61160714285711*G25_1_0_18 - 1.47321428571428*G25_1_0_19 - 1.31036287626201e-14*G25_1_1_14 - 2.97619047619049*G25_2_1_10 - 0.885416666666667*G25_2_1_11 - 1.48809523809523*G25_2_1_12 + 1.8080357142857*G25_2_1_13 - 2.41071428571427*G25_2_1_14 - 0.334821428571448*G25_2_1_15 - 2.61160714285712*G25_2_1_16 - 2.34375*G25_2_1_17 + 1.40625*G25_2_1_18 - 1.47321428571428*G25_2_1_19 + 1.73666148736012e-14*G25_3_0_10 + 0.0669642857142866*G25_3_0_11 + 1.40624999999999*G25_3_0_12 - 7.43303571428569*G25_3_0_13 - 1.40624999999999*G25_3_0_14 + 2.00892857142857*G25_3_0_15 + 0.200892857142852*G25_3_0_16 + 4.01785714285714*G25_3_0_17 - 3.81696428571428*G25_3_0_18 - 8.43749999999996*G25_3_0_19 - 6.7822454941145e-14*G25_3_1_10 - 2.34374999999999*G25_3_1_11 - 0.401785714285714*G25_3_1_12 - 7.43303571428569*G25_3_1_13 + 2.8125*G25_3_1_14 + 1.00446428571422*G25_3_1_15 + 0.401785714285748*G25_3_1_16 + 5.02232142857135*G25_3_1_17 - 7.6339285714285*G25_3_1_18 - 4.82142857142856*G25_3_1_19 - 0.401785714285713*G25_4_0_11 - 2.34374999999998*G25_4_0_12 + 2.81249999999998*G25_4_0_13 - 7.43303571428567*G25_4_0_14 + 5.0223214285714*G25_4_0_15 - 7.63392857142853*G25_4_0_16 + 1.00446428571428*G25_4_0_17 + 0.401785714285712*G25_4_0_18 - 4.82142857142854*G25_4_0_19 + 1.12370819572126e-13*G25_4_1_10 + 1.40625000000001*G25_4_1_11 + 0.0669642857142923*G25_4_1_12 - 1.40624999999997*G25_4_1_13 - 7.43303571428567*G25_4_1_14 + 4.01785714285718*G25_4_1_15 - 3.81696428571429*G25_4_1_16 + 2.00892857142862*G25_4_1_17 + 0.200892857142829*G25_4_1_18 - 8.43749999999992*G25_4_1_19 + 5.35714285714283*G25_5_0_10 - 0.0669642857142876*G25_5_0_11 + 0.0669642857142832*G25_5_0_12 + 0.20089285714286*G25_5_0_13 - 2.20982142857142*G25_5_0_14 + 4.0178571428571*G25_5_0_15 - 5.02232142857141*G25_5_0_16 + 2.00892857142855*G25_5_0_17 - 1.00446428571427*G25_5_0_18 - 6.02678571428571*G25_5_0_19 - 26.7857142857142*G25_5_1_10 - 2.41071428571428*G25_5_1_11 - 2.27678571428571*G25_5_1_12 + 1.20535714285712*G25_5_1_13 - 1.20535714285712*G25_5_1_14 - 20.0892857142856*G25_5_1_15 + 7.03124999999997*G25_5_1_16 - 22.0982142857142*G25_5_1_17 + 11.0491071428571*G25_5_1_18 - 6.02678571428571*G25_5_1_19 + 0.401785714285713*G25_6_0_11 + 2.34374999999998*G25_6_0_12 - 2.81249999999998*G25_6_0_13 + 7.43303571428567*G25_6_0_14 - 5.02232142857141*G25_6_0_15 + 7.63392857142853*G25_6_0_16 - 1.00446428571428*G25_6_0_17 - 0.401785714285711*G25_6_0_18 + 4.82142857142855*G25_6_0_19 + 12.0535714285713*G25_6_1_10 + 1.80803571428571*G25_6_1_11 + 2.27678571428569*G25_6_1_12 - 3.01339285714286*G25_6_1_13 + 3.61607142857137*G25_6_1_14 + 7.03124999999999*G25_6_1_15 + 1.60714285714283*G25_6_1_16 + 11.0491071428571*G25_6_1_17 - 6.42857142857141*G25_6_1_18 + 4.82142857142853*G25_6_1_19 - 26.7857142857142*G25_7_0_10 - 2.27678571428569*G25_7_0_11 - 2.41071428571428*G25_7_0_12 - 1.20535714285712*G25_7_0_13 + 1.20535714285714*G25_7_0_14 - 22.0982142857142*G25_7_0_15 + 11.0491071428571*G25_7_0_16 - 20.0892857142857*G25_7_0_17 + 7.03125000000001*G25_7_0_18 - 6.02678571428569*G25_7_0_19 + 5.35714285714284*G25_7_1_10 + 0.0669642857142969*G25_7_1_11 - 0.0669642857142852*G25_7_1_12 - 2.20982142857138*G25_7_1_13 + 0.200892857142868*G25_7_1_14 + 2.00892857142853*G25_7_1_15 - 1.00446428571426*G25_7_1_16 + 4.01785714285708*G25_7_1_17 - 5.02232142857137*G25_7_1_18 - 6.02678571428567*G25_7_1_19 + 12.0535714285714*G25_8_0_10 + 2.27678571428569*G25_8_0_11 + 1.80803571428571*G25_8_0_12 + 3.6160714285714*G25_8_0_13 - 3.01339285714285*G25_8_0_14 + 11.0491071428571*G25_8_0_15 - 6.42857142857143*G25_8_0_16 + 7.03125000000003*G25_8_0_17 + 1.6071428571428*G25_8_0_18 + 4.82142857142855*G25_8_0_19 - 1.42442515302463e-14*G25_8_1_10 + 2.34374999999997*G25_8_1_11 + 0.401785714285707*G25_8_1_12 + 7.43303571428564*G25_8_1_13 - 2.8125*G25_8_1_14 - 1.00446428571426*G25_8_1_15 - 0.401785714285729*G25_8_1_16 - 5.02232142857138*G25_8_1_17 + 7.63392857142849*G25_8_1_18 + 4.82142857142851*G25_8_1_19 - 5.35714285714285*G25_9_0_10 - 1.47321428571427*G25_9_0_12 + 7.23214285714283*G25_9_0_13 + 3.61607142857141*G25_9_0_14 - 6.02678571428566*G25_9_0_15 + 4.82142857142855*G25_9_0_16 - 6.02678571428569*G25_9_0_17 + 4.82142857142855*G25_9_0_18 + 14.4642857142857*G25_9_0_19 - 5.35714285714281*G25_9_1_10 - 1.47321428571427*G25_9_1_11 + 1.09010023230383e-14*G25_9_1_12 + 3.61607142857143*G25_9_1_13 + 7.23214285714283*G25_9_1_14 - 6.02678571428567*G25_9_1_15 + 4.82142857142854*G25_9_1_16 - 6.02678571428567*G25_9_1_17 + 4.82142857142856*G25_9_1_18 + 14.4642857142857*G25_9_1_19;
    A[1] = -0.174999999999999*G4_0_0_0 - 0.175000000000001*G4_0_0_1 + 0.849999999999994*G4_0_1_0 + 0.175*G4_0_2_1 + 0.0749999999999988*G4_0_3_0 + 1.42499999999999*G4_0_3_1 + 0.0749999999999998*G4_0_4_0 - 0.6*G4_0_4_1 - 0.0750000000000011*G4_0_5_0 - 0.0749999999999998*G4_0_6_0 + 0.674999999999993*G4_0_7_0 + 0.599999999999989*G4_0_7_1 - 1.34999999999999*G4_0_8_0 - 1.42499999999998*G4_0_8_1 - 0.174999999999999*G5_0_0_0 - 0.175000000000001*G5_0_0_1 + 0.849999999999994*G5_0_1_0 + 0.175*G5_0_2_1 + 0.0749999999999988*G5_0_3_0 + 1.42499999999999*G5_0_3_1 + 0.0749999999999998*G5_0_4_0 - 0.6*G5_0_4_1 - 0.0750000000000011*G5_0_5_0 - 0.0749999999999998*G5_0_6_0 + 0.674999999999993*G5_0_7_0 + 0.599999999999989*G5_0_7_1 - 1.34999999999999*G5_0_8_0 - 1.42499999999998*G5_0_8_1 - 0.149999999999999*G6_0_21 - 0.0333333333333329*G6_0_23 - 0.0333333333333333*G6_0_24 - 0.0333333333333332*G6_0_25 + 0.0874999999999993*G7_0_0_0 + 0.0875000000000004*G7_0_0_1 - 0.424999999999997*G7_0_1_0 - 0.0875000000000002*G7_0_2_1 - 0.0374999999999994*G7_0_3_0 - 0.712499999999996*G7_0_3_1 - 0.0374999999999999*G7_0_4_0 + 0.3*G7_0_4_1 + 0.0375000000000006*G7_0_5_0 + 0.0374999999999999*G7_0_6_0 - 0.337499999999997*G7_0_7_0 - 0.299999999999995*G7_0_7_1 + 0.674999999999994*G7_0_8_0 + 0.712499999999992*G7_0_8_1 + 0.0874999999999993*G8_0_0_0 + 0.0875000000000004*G8_0_0_1 - 0.424999999999997*G8_0_1_0 - 0.0875000000000002*G8_0_2_1 - 0.0374999999999994*G8_0_3_0 - 0.712499999999996*G8_0_3_1 - 0.0374999999999999*G8_0_4_0 + 0.3*G8_0_4_1 + 0.0375000000000006*G8_0_5_0 + 0.0374999999999999*G8_0_6_0 - 0.337499999999997*G8_0_7_0 - 0.299999999999995*G8_0_7_1 + 0.674999999999994*G8_0_8_0 + 0.712499999999992*G8_0_8_1 + 0.0749999999999995*G9_0_21 + 0.0166666666666664*G9_0_23 + 0.0166666666666667*G9_0_24 + 0.0166666666666666*G9_0_25 - 0.174999999999999*G10_0_0_0 - 0.175000000000001*G10_0_0_1 + 0.849999999999994*G10_0_1_0 + 0.175*G10_0_2_1 + 0.0749999999999988*G10_0_3_0 + 1.42499999999999*G10_0_3_1 + 0.0749999999999998*G10_0_4_0 - 0.6*G10_0_4_1 - 0.0750000000000011*G10_0_5_0 - 0.0749999999999998*G10_0_6_0 + 0.674999999999993*G10_0_7_0 + 0.599999999999989*G10_0_7_1 - 1.34999999999999*G10_0_8_0 - 1.42499999999998*G10_0_8_1 - 0.174999999999999*G11_0_10_0 - 0.175000000000001*G11_0_10_1 + 0.849999999999994*G11_0_11_0 + 0.175*G11_0_12_1 + 0.0749999999999988*G11_0_13_0 + 1.42499999999999*G11_0_13_1 + 0.0749999999999998*G11_0_14_0 - 0.6*G11_0_14_1 - 0.0750000000000011*G11_0_15_0 - 0.0749999999999998*G11_0_16_0 + 0.674999999999993*G11_0_17_0 + 0.599999999999989*G11_0_17_1 - 1.34999999999999*G11_0_18_0 - 1.42499999999998*G11_0_18_1 + 0.0874999999999993*G12_0_0_0 + 0.0875000000000004*G12_0_0_1 - 0.424999999999997*G12_0_1_0 - 0.0875000000000002*G12_0_2_1 - 0.0374999999999994*G12_0_3_0 - 0.712499999999996*G12_0_3_1 - 0.0374999999999999*G12_0_4_0 + 0.3*G12_0_4_1 + 0.0375000000000006*G12_0_5_0 + 0.0374999999999999*G12_0_6_0 - 0.337499999999997*G12_0_7_0 - 0.299999999999995*G12_0_7_1 + 0.674999999999994*G12_0_8_0 + 0.712499999999992*G12_0_8_1 + 0.0874999999999993*G13_0_10_0 + 0.0875000000000004*G13_0_10_1 - 0.424999999999997*G13_0_11_0 - 0.0875000000000002*G13_0_12_1 - 0.0374999999999994*G13_0_13_0 - 0.712499999999996*G13_0_13_1 - 0.0374999999999999*G13_0_14_0 + 0.3*G13_0_14_1 + 0.0375000000000006*G13_0_15_0 + 0.0374999999999999*G13_0_16_0 - 0.337499999999997*G13_0_17_0 - 0.299999999999995*G13_0_17_1 + 0.674999999999994*G13_0_18_0 + 0.712499999999992*G13_0_18_1 - 2.97619047619045*G20_0_0_0 - 2.97619047619046*G20_0_0_1 + 2.97619047619045*G20_0_1_0 + 1.77083333333333*G20_0_2_1 - 0.133928571428573*G20_0_3_0 + 4.68749999999998*G20_0_3_1 + 0.803571428571425*G20_0_4_0 - 2.81250000000001*G20_0_4_1 + 0.133928571428575*G20_0_5_0 + 4.82142857142856*G20_0_5_1 - 0.803571428571426*G20_0_6_0 - 3.61607142857141*G20_0_6_1 + 4.55357142857139*G20_0_7_0 - 0.133928571428594*G20_0_7_1 - 4.55357142857139*G20_0_8_0 - 4.68749999999994*G20_0_8_1 + 2.94642857142854*G20_0_9_1 - 5.95238095238085*G20_1_0_0 - 5.95238095238097*G20_1_0_1 + 35.4166666666664*G20_1_1_0 - 4.67973635858024e-14*G20_1_1_1 + 5.95238095238097*G20_1_2_1 + 10.7142857142857*G20_1_3_0 + 64.285714285714*G20_1_3_1 + 1.01307850997046e-14*G20_1_4_0 - 24.1071428571429*G20_1_4_1 - 2.11566875130131e-14*G20_1_5_0 + 2.0811824485989e-13*G20_1_5_1 - 1.83186799063151e-14*G20_1_6_0 + 24.1071428571425*G20_1_7_0 + 24.1071428571424*G20_1_7_1 - 53.5714285714281*G20_1_8_0 - 64.2857142857137*G20_1_8_1 - 10.7142857142857*G20_1_9_0 - 1.47975381947774e-13*G20_1_9_1 - 1.77083333333332*G20_2_0_0 - 1.77083333333333*G20_2_0_1 + 2.97619047619046*G20_2_1_0 + 2.97619047619047*G20_2_2_1 + 0.13392857142857*G20_2_3_0 + 4.68749999999998*G20_2_3_1 + 4.68749999999998*G20_2_4_0 + 0.13392857142856*G20_2_4_1 + 2.81249999999999*G20_2_5_0 + 3.61607142857143*G20_2_5_1 - 4.68749999999998*G20_2_6_0 - 4.82142857142854*G20_2_6_1 + 3.6160714285714*G20_2_7_0 + 2.81249999999997*G20_2_7_1 - 4.82142857142854*G20_2_8_0 - 4.68749999999994*G20_2_8_1 - 2.94642857142856*G20_2_9_0 - 2.94642857142858*G20_2_9_1 - 4.68749999999992*G20_3_0_0 - 4.68749999999998*G20_3_0_1 + 26.7857142857141*G20_3_1_0 - 5.65961111668246e-14*G20_3_1_1 + 0.66964285714289*G20_3_2_1 + 8.03571428571423*G20_3_3_0 + 48.2142857142855*G20_3_3_1 - 10.0446428571428*G20_3_4_0 - 24.1071428571428*G20_3_4_1 + 4.0178571428571*G20_3_5_0 + 2.00892857142869*G20_3_5_1 + 10.0446428571428*G20_3_6_0 + 2.0089285714285*G20_3_6_1 + 22.098214285714*G20_3_7_0 + 24.1071428571426*G20_3_7_1 - 44.1964285714282*G20_3_8_0 - 48.2142857142853*G20_3_8_1 - 12.0535714285713*G20_3_9_0 - 3.01703106941886e-14*G20_3_9_1 + 2.81249999999995*G20_4_0_0 + 2.81249999999999*G20_4_0_1 - 12.0535714285713*G20_4_1_0 + 3.74610151985569e-14*G20_4_1_1 + 5.22321428571425*G20_4_2_1 - 10.0446428571428*G20_4_3_0 - 24.1071428571428*G20_4_3_1 + 15.2678571428571*G20_4_4_0 + 12.0535714285714*G20_4_4_1 + 0.401785714285727*G20_4_5_0 - 0.401785714285777*G20_4_5_1 - 15.2678571428571*G20_4_6_0 - 7.6339285714285*G20_4_6_1 - 12.8571428571427*G20_4_7_0 - 12.0535714285713*G20_4_7_1 + 22.0982142857141*G20_4_8_0 + 24.1071428571427*G20_4_8_1 + 9.6428571428571*G20_4_9_0 + 2.10387263166467e-14*G20_4_9_1 - 4.82142857142856*G20_5_0_0 - 4.82142857142857*G20_5_0_1 + 1.12442607308472e-14*G20_5_1_0 - 3.6160714285714*G20_5_2_1 + 0.401785714285698*G20_5_3_0 - 2.00892857142854*G20_5_3_1 - 5.62499999999998*G20_5_4_0 + 0.401785714285664*G20_5_4_1 - 14.8660714285714*G20_5_5_0 + 1.71945790938821e-14*G20_5_5_1 + 5.62499999999998*G20_5_6_0 + 8.43749999999999*G20_5_6_1 + 7.23214285714288*G20_5_7_0 - 7.63392857142854*G20_5_7_1 - 2.41071428571433*G20_5_8_0 + 2.00892857142857*G20_5_8_1 + 14.4642857142857*G20_5_9_0 + 7.2321428571428*G20_5_9_1 + 3.61607142857141*G20_6_0_0 + 3.61607142857141*G20_6_0_1 - 1.5594079846859e-14*G20_6_1_0 + 2.75526576712318e-14*G20_6_1_1 + 4.82142857142855*G20_6_2_1 - 4.41964285714285*G20_6_3_0 - 2.00892857142864*G20_6_3_1 + 14.8660714285714*G20_6_4_0 + 7.63392857142855*G20_6_4_1 - 2.81249999999999*G20_6_5_0 - 8.43749999999997*G20_6_5_1 - 14.8660714285714*G20_6_6_0 + 5.76066971902378e-14*G20_6_6_1 - 6.02678571428571*G20_6_7_0 - 0.401785714285758*G20_6_7_1 + 2.41071428571431*G20_6_8_0 + 2.00892857142863*G20_6_8_1 + 7.23214285714284*G20_6_9_0 - 7.23214285714285*G20_6_9_1 - 5.22321428571429*G20_7_0_0 - 5.22321428571425*G20_7_0_1 - 12.0535714285713*G20_7_1_0 + 2.4160292946111e-14*G20_7_1_1 - 2.8125*G20_7_2_1 - 2.00892857142858*G20_7_3_0 - 24.1071428571428*G20_7_3_1 - 0.80357142857143*G20_7_4_0 + 12.0535714285714*G20_7_4_1 - 7.63392857142853*G20_7_5_0 + 7.63392857142846*G20_7_5_1 + 0.803571428571433*G20_7_6_0 + 0.40178571428575*G20_7_6_1 + 3.2142857142858*G20_7_7_0 - 12.0535714285713*G20_7_7_1 + 14.0624999999998*G20_7_8_0 + 24.1071428571427*G20_7_8_1 + 9.64285714285711*G20_7_9_0 - 0.669642857142802*G20_8_0_0 - 0.669642857142871*G20_8_0_1 + 26.7857142857141*G20_8_1_0 - 5.07226067866978e-14*G20_8_1_1 + 4.68749999999999*G20_8_2_1 + 4.01785714285714*G20_8_3_0 + 48.2142857142854*G20_8_3_1 - 2.00892857142856*G20_8_4_0 - 24.1071428571427*G20_8_4_1 + 8.03571428571425*G20_8_5_0 - 2.00892857142842*G20_8_5_1 + 2.00892857142855*G20_8_6_0 - 2.0089285714286*G20_8_6_1 + 14.0624999999998*G20_8_7_0 + 24.1071428571426*G20_8_7_1 - 40.1785714285711*G20_8_8_0 - 48.2142857142852*G20_8_8_1 - 12.0535714285714*G20_8_9_0 - 1.27943228928062e-13*G20_8_9_1 - 2.94642857142859*G20_9_0_0 - 2.9464285714286*G20_9_0_1 + 5.35714285714283*G20_9_1_0 + 2.39611284170569e-14*G20_9_1_1 + 2.94642857142857*G20_9_2_1 - 12.0535714285715*G20_9_3_0 - 8.55061464341555e-14*G20_9_3_1 + 9.64285714285712*G20_9_4_0 - 4.21364332314766e-14*G20_9_4_1 - 16.8749999999999*G20_9_5_0 - 7.23214285714277*G20_9_5_1 - 9.64285714285712*G20_9_6_0 + 7.23214285714284*G20_9_6_1 + 9.64285714285719*G20_9_7_0 + 2.64114901823986e-14*G20_9_7_1 - 12.0535714285714*G20_9_8_0 + 1.01695344853492e-13*G20_9_8_1 + 28.9285714285714*G20_9_9_0 - 6.85727516436252e-14*G20_9_9_1 - 2.97619047619045*G21_0_0_10 - 5.95238095238085*G21_0_0_11 - 1.77083333333332*G21_0_0_12 - 4.68749999999992*G21_0_0_13 + 2.81249999999995*G21_0_0_14 - 4.82142857142856*G21_0_0_15 + 3.61607142857141*G21_0_0_16 - 5.22321428571429*G21_0_0_17 - 0.669642857142802*G21_0_0_18 - 2.94642857142859*G21_0_0_19 - 2.97619047619046*G21_0_1_10 - 5.95238095238097*G21_0_1_11 - 1.77083333333333*G21_0_1_12 - 4.68749999999998*G21_0_1_13 + 2.81249999999999*G21_0_1_14 - 4.82142857142857*G21_0_1_15 + 3.61607142857141*G21_0_1_16 - 5.22321428571425*G21_0_1_17 - 0.669642857142871*G21_0_1_18 - 2.9464285714286*G21_0_1_19 + 2.97619047619045*G21_1_0_10 + 35.4166666666664*G21_1_0_11 + 2.97619047619046*G21_1_0_12 + 26.7857142857141*G21_1_0_13 - 12.0535714285713*G21_1_0_14 + 1.14107941845409e-14*G21_1_0_15 - 1.5706620032363e-14*G21_1_0_16 - 12.0535714285713*G21_1_0_17 + 26.7857142857141*G21_1_0_18 + 5.35714285714283*G21_1_0_19 - 4.67973635858024e-14*G21_1_1_11 - 5.65961111668246e-14*G21_1_1_13 + 3.74610151985569e-14*G21_1_1_14 + 2.75526576712318e-14*G21_1_1_16 + 2.4160292946111e-14*G21_1_1_17 - 5.07226067866978e-14*G21_1_1_18 + 2.39611284170569e-14*G21_1_1_19 + 1.77083333333333*G21_2_1_10 + 5.95238095238097*G21_2_1_11 + 2.97619047619047*G21_2_1_12 + 0.66964285714289*G21_2_1_13 + 5.22321428571425*G21_2_1_14 - 3.6160714285714*G21_2_1_15 + 4.82142857142855*G21_2_1_16 - 2.8125*G21_2_1_17 + 4.68749999999999*G21_2_1_18 + 2.94642857142857*G21_2_1_19 - 0.133928571428573*G21_3_0_10 + 10.7142857142857*G21_3_0_11 + 0.13392857142857*G21_3_0_12 + 8.03571428571423*G21_3_0_13 - 10.0446428571428*G21_3_0_14 + 0.401785714285698*G21_3_0_15 - 4.41964285714285*G21_3_0_16 - 2.00892857142858*G21_3_0_17 + 4.01785714285714*G21_3_0_18 - 12.0535714285715*G21_3_0_19 + 4.68749999999998*G21_3_1_10 + 64.285714285714*G21_3_1_11 + 4.68749999999997*G21_3_1_12 + 48.2142857142855*G21_3_1_13 - 24.1071428571428*G21_3_1_14 - 2.00892857142854*G21_3_1_15 - 2.00892857142864*G21_3_1_16 - 24.1071428571428*G21_3_1_17 + 48.2142857142854*G21_3_1_18 - 8.45061867704722e-14*G21_3_1_19 + 0.803571428571425*G21_4_0_10 + 1.03528297046296e-14*G21_4_0_11 + 4.68749999999998*G21_4_0_12 - 10.0446428571428*G21_4_0_13 + 15.2678571428571*G21_4_0_14 - 5.62499999999998*G21_4_0_15 + 14.8660714285714*G21_4_0_16 - 0.80357142857143*G21_4_0_17 - 2.00892857142856*G21_4_0_18 + 9.64285714285712*G21_4_0_19 - 2.81250000000001*G21_4_1_10 - 24.1071428571429*G21_4_1_11 + 0.13392857142856*G21_4_1_12 - 24.1071428571428*G21_4_1_13 + 12.0535714285714*G21_4_1_14 + 0.401785714285664*G21_4_1_15 + 7.63392857142855*G21_4_1_16 + 12.0535714285714*G21_4_1_17 - 24.1071428571427*G21_4_1_18 - 4.23584778364017e-14*G21_4_1_19 + 0.133928571428575*G21_5_0_10 - 2.11566875130131e-14*G21_5_0_11 + 2.81249999999999*G21_5_0_12 + 4.0178571428571*G21_5_0_13 + 0.401785714285727*G21_5_0_14 - 14.8660714285714*G21_5_0_15 - 2.81249999999999*G21_5_0_16 - 7.63392857142853*G21_5_0_17 + 8.03571428571425*G21_5_0_18 - 16.8749999999999*G21_5_0_19 + 4.82142857142856*G21_5_1_10 + 2.08146000435505e-13*G21_5_1_11 + 3.61607142857143*G21_5_1_12 + 2.00892857142869*G21_5_1_13 - 0.401785714285777*G21_5_1_14 + 1.69517178072454e-14*G21_5_1_15 - 8.43749999999997*G21_5_1_16 + 7.63392857142847*G21_5_1_17 - 2.00892857142842*G21_5_1_18 - 7.23214285714277*G21_5_1_19 - 0.803571428571426*G21_6_0_10 - 1.765254609154e-14*G21_6_0_11 - 4.68749999999998*G21_6_0_12 + 10.0446428571428*G21_6_0_13 - 15.2678571428571*G21_6_0_14 + 5.62499999999998*G21_6_0_15 - 14.8660714285714*G21_6_0_16 + 0.803571428571433*G21_6_0_17 + 2.00892857142855*G21_6_0_18 - 9.64285714285712*G21_6_0_19 - 3.61607142857141*G21_6_1_10 - 4.82142857142854*G21_6_1_12 + 2.0089285714285*G21_6_1_13 - 7.6339285714285*G21_6_1_14 + 8.43749999999999*G21_6_1_15 + 5.75442471451026e-14*G21_6_1_16 + 0.401785714285749*G21_6_1_17 - 2.0089285714286*G21_6_1_18 + 7.23214285714284*G21_6_1_19 + 4.55357142857139*G21_7_0_10 + 24.1071428571425*G21_7_0_11 + 3.6160714285714*G21_7_0_12 + 22.098214285714*G21_7_0_13 - 12.8571428571427*G21_7_0_14 + 7.23214285714288*G21_7_0_15 - 6.02678571428571*G21_7_0_16 + 3.2142857142858*G21_7_0_17 + 14.0624999999998*G21_7_0_18 + 9.64285714285719*G21_7_0_19 - 0.133928571428594*G21_7_1_10 + 24.1071428571424*G21_7_1_11 + 2.81249999999997*G21_7_1_12 + 24.1071428571426*G21_7_1_13 - 12.0535714285713*G21_7_1_14 - 7.63392857142854*G21_7_1_15 - 0.401785714285759*G21_7_1_16 - 12.0535714285713*G21_7_1_17 + 24.1071428571426*G21_7_1_18 + 2.66265958934198e-14*G21_7_1_19 - 4.55357142857139*G21_8_0_10 - 53.5714285714281*G21_8_0_11 - 4.82142857142854*G21_8_0_12 - 44.1964285714282*G21_8_0_13 + 22.0982142857141*G21_8_0_14 - 2.41071428571433*G21_8_0_15 + 2.41071428571431*G21_8_0_16 + 14.0624999999998*G21_8_0_17 - 40.1785714285711*G21_8_0_18 - 12.0535714285714*G21_8_0_19 - 4.68749999999994*G21_8_1_10 - 64.2857142857137*G21_8_1_11 - 4.68749999999994*G21_8_1_12 - 48.2142857142853*G21_8_1_13 + 24.1071428571427*G21_8_1_14 + 2.00892857142857*G21_8_1_15 + 2.00892857142863*G21_8_1_16 + 24.1071428571427*G21_8_1_17 - 48.2142857142852*G21_8_1_18 + 1.02028411760879e-13*G21_8_1_19 - 10.7142857142857*G21_9_0_11 - 2.94642857142856*G21_9_0_12 - 12.0535714285713*G21_9_0_13 + 9.6428571428571*G21_9_0_14 + 14.4642857142857*G21_9_0_15 + 7.23214285714284*G21_9_0_16 + 9.64285714285711*G21_9_0_17 - 12.0535714285714*G21_9_0_18 + 28.9285714285714*G21_9_0_19 + 2.94642857142854*G21_9_1_10 - 1.49311119024276e-13*G21_9_1_11 - 2.94642857142858*G21_9_1_12 - 3.36675132217579e-14*G21_9_1_13 + 2.19269047363468e-14*G21_9_1_14 + 7.2321428571428*G21_9_1_15 - 7.23214285714285*G21_9_1_16 - 1.26610852878295e-13*G21_9_1_18 - 6.89890852778596e-14*G21_9_1_19 + 1.48809523809523*G24_0_0_0 + 1.48809523809523*G24_0_0_1 - 1.48809523809523*G24_0_1_0 - 0.885416666666667*G24_0_2_1 + 0.0669642857142866*G24_0_3_0 - 2.34374999999999*G24_0_3_1 - 0.401785714285713*G24_0_4_0 + 1.40625000000001*G24_0_4_1 - 0.0669642857142875*G24_0_5_0 - 2.41071428571428*G24_0_5_1 + 0.401785714285713*G24_0_6_0 + 1.8080357142857*G24_0_6_1 - 2.27678571428569*G24_0_7_0 + 0.066964285714297*G24_0_7_1 + 2.27678571428569*G24_0_8_0 + 2.34374999999997*G24_0_8_1 - 1.47321428571427*G24_0_9_1 + 2.97619047619043*G24_1_0_0 + 2.97619047619048*G24_1_0_1 - 17.7083333333332*G24_1_1_0 + 2.33986817929012e-14*G24_1_1_1 - 2.97619047619049*G24_1_2_1 - 5.35714285714286*G24_1_3_0 - 32.142857142857*G24_1_3_1 + 12.0535714285714*G24_1_4_1 + 1.05783437565066e-14*G24_1_5_0 - 1.04059122429945e-13*G24_1_5_1 - 12.0535714285713*G24_1_7_0 - 12.0535714285712*G24_1_7_1 + 26.7857142857141*G24_1_8_0 + 32.1428571428568*G24_1_8_1 + 5.35714285714284*G24_1_9_0 + 7.39876909738868e-14*G24_1_9_1 + 0.885416666666662*G24_2_0_0 + 0.885416666666666*G24_2_0_1 - 1.48809523809523*G24_2_1_0 - 1.48809523809523*G24_2_2_1 - 0.066964285714285*G24_2_3_0 - 2.34374999999999*G24_2_3_1 - 2.34374999999999*G24_2_4_0 - 0.0669642857142801*G24_2_4_1 - 1.40625*G24_2_5_0 - 1.80803571428571*G24_2_5_1 + 2.34374999999999*G24_2_6_0 + 2.41071428571427*G24_2_6_1 - 1.8080357142857*G24_2_7_0 - 1.40624999999998*G24_2_7_1 + 2.41071428571427*G24_2_8_0 + 2.34374999999997*G24_2_8_1 + 1.47321428571428*G24_2_9_0 + 1.47321428571429*G24_2_9_1 + 2.34374999999996*G24_3_0_0 + 2.34374999999999*G24_3_0_1 - 13.392857142857*G24_3_1_0 + 2.82980555834123e-14*G24_3_1_1 - 0.334821428571445*G24_3_2_1 - 4.01785714285711*G24_3_3_0 - 24.1071428571428*G24_3_3_1 + 5.0223214285714*G24_3_4_0 + 12.0535714285714*G24_3_4_1 - 2.00892857142855*G24_3_5_0 - 1.00446428571434*G24_3_5_1 - 5.0223214285714*G24_3_6_0 - 1.00446428571425*G24_3_6_1 - 11.049107142857*G24_3_7_0 - 12.0535714285713*G24_3_7_1 + 22.0982142857141*G24_3_8_0 + 24.1071428571426*G24_3_8_1 + 6.02678571428566*G24_3_9_0 + 1.50851553470943e-14*G24_3_9_1 - 1.40624999999998*G24_4_0_0 - 1.40624999999999*G24_4_0_1 + 6.02678571428567*G24_4_1_0 - 1.87305075992784e-14*G24_4_1_1 - 2.61160714285713*G24_4_2_1 + 5.02232142857141*G24_4_3_0 + 12.0535714285714*G24_4_3_1 - 7.63392857142854*G24_4_4_0 - 6.0267857142857*G24_4_4_1 - 0.200892857142863*G24_4_5_0 + 0.200892857142889*G24_4_5_1 + 7.63392857142854*G24_4_6_0 + 3.81696428571425*G24_4_6_1 + 6.42857142857136*G24_4_7_0 + 6.02678571428565*G24_4_7_1 - 11.0491071428571*G24_4_8_0 - 12.0535714285713*G24_4_8_1 - 4.82142857142855*G24_4_9_0 - 1.05193631583234e-14*G24_4_9_1 + 2.41071428571428*G24_5_0_0 + 2.41071428571429*G24_5_0_1 + 1.8080357142857*G24_5_2_1 - 0.200892857142849*G24_5_3_0 + 1.00446428571427*G24_5_3_1 + 2.81249999999999*G24_5_4_0 - 0.200892857142832*G24_5_4_1 + 7.43303571428569*G24_5_5_0 - 2.81249999999999*G24_5_6_0 - 4.21875*G24_5_6_1 - 3.61607142857144*G24_5_7_0 + 3.81696428571427*G24_5_7_1 + 1.20535714285716*G24_5_8_0 - 1.00446428571429*G24_5_8_1 - 7.23214285714284*G24_5_9_0 - 3.6160714285714*G24_5_9_1 - 1.80803571428571*G24_6_0_0 - 1.8080357142857*G24_6_0_1 - 1.37763288356159e-14*G24_6_1_1 - 2.41071428571427*G24_6_2_1 + 2.20982142857143*G24_6_3_0 + 1.00446428571432*G24_6_3_1 - 7.43303571428569*G24_6_4_0 - 3.81696428571428*G24_6_4_1 + 1.40624999999999*G24_6_5_0 + 4.21874999999999*G24_6_5_1 + 7.43303571428569*G24_6_6_0 - 2.88033485951189e-14*G24_6_6_1 + 3.01339285714286*G24_6_7_0 + 0.200892857142879*G24_6_7_1 - 1.20535714285716*G24_6_8_0 - 1.00446428571431*G24_6_8_1 - 3.61607142857142*G24_6_9_0 + 3.61607142857142*G24_6_9_1 + 2.61160714285714*G24_7_0_0 + 2.61160714285713*G24_7_0_1 + 6.02678571428567*G24_7_1_0 - 1.20801464730555e-14*G24_7_1_1 + 1.40625*G24_7_2_1 + 1.00446428571429*G24_7_3_0 + 12.0535714285714*G24_7_3_1 + 0.401785714285715*G24_7_4_0 - 6.02678571428569*G24_7_4_1 + 3.81696428571426*G24_7_5_0 - 3.81696428571423*G24_7_5_1 - 0.401785714285716*G24_7_6_0 - 0.200892857142875*G24_7_6_1 - 1.6071428571429*G24_7_7_0 + 6.02678571428563*G24_7_7_1 - 7.03124999999992*G24_7_8_0 - 12.0535714285713*G24_7_8_1 - 4.82142857142855*G24_7_9_0 + 0.334821428571401*G24_8_0_0 + 0.334821428571436*G24_8_0_1 - 13.392857142857*G24_8_1_0 + 2.53613033933489e-14*G24_8_1_1 - 2.34375*G24_8_2_1 - 2.00892857142857*G24_8_3_0 - 24.1071428571427*G24_8_3_1 + 1.00446428571428*G24_8_4_0 + 12.0535714285714*G24_8_4_1 - 4.01785714285712*G24_8_5_0 + 1.00446428571421*G24_8_5_1 - 1.00446428571428*G24_8_6_0 + 1.0044642857143*G24_8_6_1 - 7.03124999999989*G24_8_7_0 - 12.0535714285713*G24_8_7_1 + 20.0892857142855*G24_8_8_0 + 24.1071428571426*G24_8_8_1 + 6.02678571428569*G24_8_9_0 + 6.39716144640312e-14*G24_8_9_1 + 1.4732142857143*G24_9_0_0 + 1.4732142857143*G24_9_0_1 - 2.67857142857142*G24_9_1_0 - 1.19805642085284e-14*G24_9_1_1 - 1.47321428571429*G24_9_2_1 + 6.02678571428574*G24_9_3_0 + 4.27530732170778e-14*G24_9_3_1 - 4.82142857142856*G24_9_4_0 + 2.10682166157383e-14*G24_9_4_1 + 8.43749999999996*G24_9_5_0 + 3.61607142857138*G24_9_5_1 + 4.82142857142856*G24_9_6_0 - 3.61607142857142*G24_9_6_1 - 4.82142857142859*G24_9_7_0 - 1.32057450911993e-14*G24_9_7_1 + 6.02678571428571*G24_9_8_0 - 5.08476724267459e-14*G24_9_8_1 - 14.4642857142857*G24_9_9_0 + 3.42863758218126e-14*G24_9_9_1 + 1.48809523809523*G25_0_0_10 + 2.97619047619043*G25_0_0_11 + 0.885416666666662*G25_0_0_12 + 2.34374999999996*G25_0_0_13 - 1.40624999999998*G25_0_0_14 + 2.41071428571428*G25_0_0_15 - 1.80803571428571*G25_0_0_16 + 2.61160714285714*G25_0_0_17 + 0.334821428571401*G25_0_0_18 + 1.4732142857143*G25_0_0_19 + 1.48809523809523*G25_0_1_10 + 2.97619047619048*G25_0_1_11 + 0.885416666666666*G25_0_1_12 + 2.34374999999999*G25_0_1_13 - 1.40624999999999*G25_0_1_14 + 2.41071428571428*G25_0_1_15 - 1.8080357142857*G25_0_1_16 + 2.61160714285713*G25_0_1_17 + 0.334821428571435*G25_0_1_18 + 1.4732142857143*G25_0_1_19 - 1.48809523809523*G25_1_0_10 - 17.7083333333332*G25_1_0_11 - 1.48809523809523*G25_1_0_12 - 13.392857142857*G25_1_0_13 + 6.02678571428567*G25_1_0_14 + 6.02678571428567*G25_1_0_17 - 13.392857142857*G25_1_0_18 - 2.67857142857142*G25_1_0_19 + 2.33986817929012e-14*G25_1_1_11 + 2.82980555834123e-14*G25_1_1_13 - 1.87305075992784e-14*G25_1_1_14 - 1.37763288356159e-14*G25_1_1_16 - 1.20801464730555e-14*G25_1_1_17 + 2.53613033933489e-14*G25_1_1_18 - 1.19805642085284e-14*G25_1_1_19 - 0.885416666666667*G25_2_1_10 - 2.97619047619049*G25_2_1_11 - 1.48809523809523*G25_2_1_12 - 0.334821428571445*G25_2_1_13 - 2.61160714285713*G25_2_1_14 + 1.8080357142857*G25_2_1_15 - 2.41071428571427*G25_2_1_16 + 1.40625*G25_2_1_17 - 2.34375*G25_2_1_18 - 1.47321428571429*G25_2_1_19 + 0.0669642857142865*G25_3_0_10 - 5.35714285714286*G25_3_0_11 - 0.0669642857142851*G25_3_0_12 - 4.01785714285711*G25_3_0_13 + 5.02232142857141*G25_3_0_14 - 0.200892857142849*G25_3_0_15 + 2.20982142857143*G25_3_0_16 + 1.00446428571429*G25_3_0_17 - 2.00892857142857*G25_3_0_18 + 6.02678571428574*G25_3_0_19 - 2.34374999999999*G25_3_1_10 - 32.142857142857*G25_3_1_11 - 2.34374999999999*G25_3_1_12 - 24.1071428571428*G25_3_1_13 + 12.0535714285714*G25_3_1_14 + 1.00446428571427*G25_3_1_15 + 1.00446428571432*G25_3_1_16 + 12.0535714285714*G25_3_1_17 - 24.1071428571427*G25_3_1_18 + 4.22530933852361e-14*G25_3_1_19 - 0.401785714285713*G25_4_0_10 - 2.34374999999999*G25_4_0_12 + 5.0223214285714*G25_4_0_13 - 7.63392857142854*G25_4_0_14 + 2.81249999999999*G25_4_0_15 - 7.43303571428569*G25_4_0_16 + 0.401785714285715*G25_4_0_17 + 1.00446428571428*G25_4_0_18 - 4.82142857142856*G25_4_0_19 + 1.40625000000001*G25_4_1_10 + 12.0535714285714*G25_4_1_11 - 0.0669642857142802*G25_4_1_12 + 12.0535714285714*G25_4_1_13 - 6.0267857142857*G25_4_1_14 - 0.200892857142832*G25_4_1_15 - 3.81696428571428*G25_4_1_16 - 6.02678571428569*G25_4_1_17 + 12.0535714285714*G25_4_1_18 + 2.11792389182008e-14*G25_4_1_19 - 0.0669642857142876*G25_5_0_10 + 1.05783437565066e-14*G25_5_0_11 - 1.40625*G25_5_0_12 - 2.00892857142855*G25_5_0_13 - 0.200892857142863*G25_5_0_14 + 7.43303571428569*G25_5_0_15 + 1.40624999999999*G25_5_0_16 + 3.81696428571426*G25_5_0_17 - 4.01785714285712*G25_5_0_18 + 8.43749999999996*G25_5_0_19 - 2.41071428571428*G25_5_1_10 - 1.04073000217753e-13*G25_5_1_11 - 1.80803571428571*G25_5_1_12 - 1.00446428571435*G25_5_1_13 + 0.200892857142889*G25_5_1_14 + 4.21874999999998*G25_5_1_16 - 3.81696428571423*G25_5_1_17 + 1.00446428571421*G25_5_1_18 + 3.61607142857138*G25_5_1_19 + 0.401785714285713*G25_6_0_10 + 2.34374999999999*G25_6_0_12 - 5.0223214285714*G25_6_0_13 + 7.63392857142854*G25_6_0_14 - 2.81249999999999*G25_6_0_15 + 7.43303571428569*G25_6_0_16 - 0.401785714285717*G25_6_0_17 - 1.00446428571428*G25_6_0_18 + 4.82142857142856*G25_6_0_19 + 1.8080357142857*G25_6_1_10 + 2.41071428571427*G25_6_1_12 - 1.00446428571425*G25_6_1_13 + 3.81696428571425*G25_6_1_14 - 4.21875*G25_6_1_15 - 2.87721235725513e-14*G25_6_1_16 - 0.200892857142875*G25_6_1_17 + 1.0044642857143*G25_6_1_18 - 3.61607142857142*G25_6_1_19 - 2.27678571428569*G25_7_0_10 - 12.0535714285713*G25_7_0_11 - 1.8080357142857*G25_7_0_12 - 11.049107142857*G25_7_0_13 + 6.42857142857136*G25_7_0_14 - 3.61607142857144*G25_7_0_15 + 3.01339285714286*G25_7_0_16 - 1.6071428571429*G25_7_0_17 - 7.03124999999989*G25_7_0_18 - 4.82142857142859*G25_7_0_19 + 0.066964285714297*G25_7_1_10 - 12.0535714285712*G25_7_1_11 - 1.40624999999998*G25_7_1_12 - 12.0535714285713*G25_7_1_13 + 6.02678571428565*G25_7_1_14 + 3.81696428571427*G25_7_1_15 + 0.200892857142879*G25_7_1_16 + 6.02678571428563*G25_7_1_17 - 12.0535714285713*G25_7_1_18 - 1.33132979467099e-14*G25_7_1_19 + 2.2767857142857*G25_8_0_10 + 26.7857142857141*G25_8_0_11 + 2.41071428571427*G25_8_0_12 + 22.0982142857141*G25_8_0_13 - 11.0491071428571*G25_8_0_14 + 1.20535714285716*G25_8_0_15 - 1.20535714285716*G25_8_0_16 - 7.03124999999992*G25_8_0_17 + 20.0892857142855*G25_8_0_18 + 6.02678571428571*G25_8_0_19 + 2.34374999999997*G25_8_1_10 + 32.1428571428568*G25_8_1_11 + 2.34374999999997*G25_8_1_12 + 24.1071428571426*G25_8_1_13 - 12.0535714285713*G25_8_1_14 - 1.00446428571429*G25_8_1_15 - 1.00446428571431*G25_8_1_16 - 12.0535714285713*G25_8_1_17 + 24.1071428571426*G25_8_1_18 - 5.10142058804397e-14*G25_8_1_19 + 5.35714285714284*G25_9_0_11 + 1.47321428571428*G25_9_0_12 + 6.02678571428566*G25_9_0_13 - 4.82142857142855*G25_9_0_14 - 7.23214285714284*G25_9_0_15 - 3.61607142857142*G25_9_0_16 - 4.82142857142855*G25_9_0_17 + 6.02678571428569*G25_9_0_18 - 14.4642857142857*G25_9_0_19 - 1.47321428571427*G25_9_1_10 + 7.46555595121379e-14*G25_9_1_11 + 1.47321428571429*G25_9_1_12 + 1.68337566108789e-14*G25_9_1_13 - 1.09634523681734e-14*G25_9_1_14 - 3.6160714285714*G25_9_1_15 + 3.61607142857142*G25_9_1_16 + 6.33054264391475e-14*G25_9_1_18 + 3.44945426389298e-14*G25_9_1_19;
    A[2] = -0.175000000000001*G4_1_0_0 - 0.175000000000001*G4_1_0_1 + 0.175*G4_1_1_0 + 0.849999999999997*G4_1_2_1 - 0.599999999999996*G4_1_3_0 + 0.0750000000000016*G4_1_3_1 + 1.42499999999999*G4_1_4_0 + 0.0749999999999967*G4_1_4_1 + 0.599999999999996*G4_1_5_0 + 0.674999999999999*G4_1_5_1 - 1.42499999999999*G4_1_6_0 - 1.34999999999999*G4_1_6_1 - 0.0750000000000049*G4_1_7_1 - 0.0750000000000001*G4_1_8_1 - 0.175000000000001*G5_1_0_0 - 0.175000000000001*G5_1_0_1 + 0.175*G5_1_1_0 + 0.849999999999997*G5_1_2_1 - 0.599999999999996*G5_1_3_0 + 0.0750000000000016*G5_1_3_1 + 1.42499999999999*G5_1_4_0 + 0.0749999999999967*G5_1_4_1 + 0.599999999999996*G5_1_5_0 + 0.674999999999999*G5_1_5_1 - 1.42499999999999*G5_1_6_0 - 1.34999999999999*G5_1_6_1 - 0.0750000000000049*G5_1_7_1 - 0.0750000000000001*G5_1_8_1 - 0.149999999999999*G6_1_22 - 0.0333333333333335*G6_1_23 - 0.0333333333333336*G6_1_24 - 0.0333333333333343*G6_1_25 + 0.0875000000000005*G7_1_0_0 + 0.0875000000000007*G7_1_0_1 - 0.0875000000000002*G7_1_1_0 - 0.424999999999998*G7_1_2_1 + 0.299999999999998*G7_1_3_0 - 0.0375000000000008*G7_1_3_1 - 0.712499999999997*G7_1_4_0 - 0.0374999999999983*G7_1_4_1 - 0.299999999999998*G7_1_5_0 - 0.3375*G7_1_5_1 + 0.712499999999997*G7_1_6_0 + 0.674999999999996*G7_1_6_1 + 0.0375000000000024*G7_1_7_1 + 0.0375000000000001*G7_1_8_1 + 0.0875000000000005*G8_1_0_0 + 0.0875000000000007*G8_1_0_1 - 0.0875000000000002*G8_1_1_0 - 0.424999999999998*G8_1_2_1 + 0.299999999999998*G8_1_3_0 - 0.0375000000000008*G8_1_3_1 - 0.712499999999997*G8_1_4_0 - 0.0374999999999983*G8_1_4_1 - 0.299999999999998*G8_1_5_0 - 0.3375*G8_1_5_1 + 0.712499999999997*G8_1_6_0 + 0.674999999999996*G8_1_6_1 + 0.0375000000000024*G8_1_7_1 + 0.0375000000000001*G8_1_8_1 + 0.0749999999999995*G9_1_22 + 0.0166666666666667*G9_1_23 + 0.0166666666666668*G9_1_24 + 0.0166666666666672*G9_1_25 - 0.175000000000001*G10_1_0_0 - 0.175000000000001*G10_1_0_1 + 0.175*G10_1_1_0 + 0.849999999999997*G10_1_2_1 - 0.599999999999996*G10_1_3_0 + 0.0750000000000016*G10_1_3_1 + 1.42499999999999*G10_1_4_0 + 0.0749999999999967*G10_1_4_1 + 0.599999999999996*G10_1_5_0 + 0.674999999999999*G10_1_5_1 - 1.42499999999999*G10_1_6_0 - 1.34999999999999*G10_1_6_1 - 0.0750000000000049*G10_1_7_1 - 0.0750000000000001*G10_1_8_1 - 0.175000000000001*G11_1_10_0 - 0.175000000000001*G11_1_10_1 + 0.175*G11_1_11_0 + 0.849999999999997*G11_1_12_1 - 0.599999999999996*G11_1_13_0 + 0.0750000000000016*G11_1_13_1 + 1.42499999999999*G11_1_14_0 + 0.0749999999999967*G11_1_14_1 + 0.599999999999996*G11_1_15_0 + 0.674999999999999*G11_1_15_1 - 1.42499999999999*G11_1_16_0 - 1.34999999999999*G11_1_16_1 - 0.0750000000000049*G11_1_17_1 - 0.0750000000000001*G11_1_18_1 + 0.0875000000000005*G12_1_0_0 + 0.0875000000000007*G12_1_0_1 - 0.0875000000000002*G12_1_1_0 - 0.424999999999998*G12_1_2_1 + 0.299999999999998*G12_1_3_0 - 0.0375000000000008*G12_1_3_1 - 0.712499999999997*G12_1_4_0 - 0.0374999999999983*G12_1_4_1 - 0.299999999999998*G12_1_5_0 - 0.3375*G12_1_5_1 + 0.712499999999997*G12_1_6_0 + 0.674999999999996*G12_1_6_1 + 0.0375000000000024*G12_1_7_1 + 0.0375000000000001*G12_1_8_1 + 0.0875000000000005*G13_1_10_0 + 0.0875000000000007*G13_1_10_1 - 0.0875000000000002*G13_1_11_0 - 0.424999999999998*G13_1_12_1 + 0.299999999999998*G13_1_13_0 - 0.0375000000000008*G13_1_13_1 - 0.712499999999997*G13_1_14_0 - 0.0374999999999983*G13_1_14_1 - 0.299999999999998*G13_1_15_0 - 0.3375*G13_1_15_1 + 0.712499999999997*G13_1_16_0 + 0.674999999999996*G13_1_16_1 + 0.0375000000000024*G13_1_17_1 + 0.0375000000000001*G13_1_18_1 - 2.97619047619046*G20_0_0_0 - 2.97619047619047*G20_0_0_1 + 1.77083333333333*G20_0_1_0 + 2.97619047619046*G20_0_2_1 - 2.81249999999998*G20_0_3_0 + 0.803571428571427*G20_0_3_1 + 4.68749999999997*G20_0_4_0 - 0.133928571428584*G20_0_4_1 - 0.133928571428567*G20_0_5_0 + 4.55357142857141*G20_0_5_1 - 4.68749999999997*G20_0_6_0 - 4.55357142857139*G20_0_6_1 + 4.82142857142856*G20_0_7_0 + 0.13392857142857*G20_0_7_1 - 3.61607142857142*G20_0_8_0 - 0.803571428571413*G20_0_8_1 + 2.94642857142855*G20_0_9_0 - 2.17742490704609e-14*G20_0_9_1 - 1.77083333333332*G20_1_0_0 - 1.77083333333333*G20_1_0_1 + 2.97619047619046*G20_1_1_0 + 2.97619047619047*G20_1_2_1 + 0.13392857142857*G20_1_3_0 + 4.68749999999997*G20_1_3_1 + 4.68749999999998*G20_1_4_0 + 0.13392857142856*G20_1_4_1 + 2.81249999999999*G20_1_5_0 + 3.61607142857143*G20_1_5_1 - 4.68749999999998*G20_1_6_0 - 4.82142857142854*G20_1_6_1 + 3.6160714285714*G20_1_7_0 + 2.81249999999997*G20_1_7_1 - 4.82142857142854*G20_1_8_0 - 4.68749999999994*G20_1_8_1 - 2.94642857142856*G20_1_9_0 - 2.94642857142858*G20_1_9_1 - 5.95238095238097*G20_2_0_0 - 5.95238095238097*G20_2_0_1 + 5.95238095238092*G20_2_1_0 + 5.94199914367746e-14*G20_2_1_1 + 35.4166666666665*G20_2_2_1 - 24.1071428571427*G20_2_3_0 - 8.4821039081362e-14*G20_2_3_1 + 64.285714285714*G20_2_4_0 + 10.7142857142857*G20_2_4_1 + 24.1071428571428*G20_2_5_0 + 24.1071428571428*G20_2_5_1 - 64.285714285714*G20_2_6_0 - 53.5714285714282*G20_2_6_1 + 2.82551759767102e-14*G20_2_7_0 - 5.1236792586451e-14*G20_2_7_1 + 1.10411679798972e-13*G20_2_8_1 - 5.50670620214078e-14*G20_2_9_0 - 10.7142857142858*G20_2_9_1 + 2.81250000000001*G20_3_0_0 + 2.81249999999998*G20_3_0_1 + 5.22321428571426*G20_3_1_0 - 2.70783836443327e-14*G20_3_1_1 - 12.0535714285713*G20_3_2_1 + 12.0535714285714*G20_3_3_0 + 15.2678571428572*G20_3_3_1 - 24.1071428571427*G20_3_4_0 - 10.0446428571428*G20_3_4_1 - 12.0535714285714*G20_3_5_0 - 12.8571428571427*G20_3_5_1 + 24.1071428571427*G20_3_6_0 + 22.0982142857141*G20_3_6_1 - 0.401785714285748*G20_3_7_0 + 0.401785714285671*G20_3_7_1 - 7.63392857142852*G20_3_8_0 - 15.2678571428571*G20_3_8_1 - 4.81836792687318e-14*G20_3_9_0 + 9.64285714285706*G20_3_9_1 - 4.68750000000002*G20_4_0_0 - 4.68749999999999*G20_4_0_1 + 0.669642857142854*G20_4_1_0 + 3.85629135203417e-14*G20_4_1_1 + 26.7857142857141*G20_4_2_1 - 24.1071428571427*G20_4_3_0 - 10.0446428571429*G20_4_3_1 + 48.2142857142855*G20_4_4_0 + 8.0357142857143*G20_4_4_1 + 24.1071428571428*G20_4_5_0 + 22.0982142857141*G20_4_5_1 - 48.2142857142855*G20_4_6_0 - 44.1964285714283*G20_4_6_1 + 2.0089285714286*G20_4_7_0 + 4.01785714285716*G20_4_7_1 + 2.00892857142856*G20_4_8_0 + 10.0446428571428*G20_4_8_1 - 3.01980662698043e-14*G20_4_9_0 - 12.0535714285714*G20_4_9_1 - 5.22321428571427*G20_5_0_0 - 5.22321428571427*G20_5_0_1 - 2.81249999999998*G20_5_1_0 - 1.72996054515353e-14*G20_5_1_1 - 12.0535714285714*G20_5_2_1 + 12.0535714285714*G20_5_3_0 - 0.803571428571364*G20_5_3_1 - 24.1071428571427*G20_5_4_0 - 2.00892857142862*G20_5_4_1 - 12.0535714285714*G20_5_5_0 + 3.21428571428571*G20_5_5_1 + 24.1071428571427*G20_5_6_0 + 14.0624999999999*G20_5_6_1 + 7.63392857142858*G20_5_7_0 - 7.63392857142855*G20_5_7_1 + 0.401785714285667*G20_5_8_0 + 0.803571428571408*G20_5_8_1 + 7.18175519054398e-14*G20_5_9_0 + 9.64285714285714*G20_5_9_1 - 0.66964285714287*G20_6_0_0 - 0.669642857142857*G20_6_0_1 + 4.68749999999997*G20_6_1_0 + 3.40450677932774e-14*G20_6_1_1 + 26.7857142857141*G20_6_2_1 - 24.1071428571427*G20_6_3_0 - 2.00892857142865*G20_6_3_1 + 48.2142857142855*G20_6_4_0 + 4.01785714285718*G20_6_4_1 + 24.1071428571428*G20_6_5_0 + 14.0624999999999*G20_6_5_1 - 48.2142857142855*G20_6_6_0 - 40.1785714285711*G20_6_6_1 - 2.00892857142857*G20_6_7_0 + 8.03571428571426*G20_6_7_1 - 2.00892857142853*G20_6_8_0 + 2.00892857142861*G20_6_8_1 - 4.51583215266282e-14*G20_6_9_0 - 12.0535714285714*G20_6_9_1 - 4.82142857142856*G20_7_0_0 - 4.82142857142857*G20_7_0_1 - 3.6160714285714*G20_7_1_0 + 1.02342846278283e-14*G20_7_1_1 + 1.24969479209369e-14*G20_7_2_1 + 0.401785714285688*G20_7_3_0 - 5.62499999999996*G20_7_3_1 - 2.00892857142857*G20_7_4_0 + 0.401785714285643*G20_7_4_1 - 7.63392857142856*G20_7_5_0 + 7.23214285714284*G20_7_5_1 + 2.00892857142857*G20_7_6_0 - 2.41071428571425*G20_7_6_1 + 6.33664128113498e-14*G20_7_7_0 - 14.8660714285714*G20_7_7_1 + 8.43749999999991*G20_7_8_0 + 5.62499999999999*G20_7_8_1 + 7.23214285714287*G20_7_9_0 + 14.4642857142856*G20_7_9_1 + 3.61607142857144*G20_8_0_0 + 3.61607142857141*G20_8_0_1 + 4.82142857142853*G20_8_1_0 + 1.29826704942104e-14*G20_8_2_1 + 7.63392857142857*G20_8_3_0 + 14.8660714285714*G20_8_3_1 - 2.00892857142857*G20_8_4_0 - 4.41964285714288*G20_8_4_1 - 0.401785714285704*G20_8_5_0 - 6.02678571428564*G20_8_5_1 + 2.00892857142857*G20_8_6_0 + 2.41071428571429*G20_8_6_1 - 8.43750000000002*G20_8_7_0 - 2.81250000000006*G20_8_7_1 + 4.20169541520687e-14*G20_8_8_0 - 14.8660714285713*G20_8_8_1 - 7.23214285714287*G20_8_9_0 + 7.23214285714278*G20_8_9_1 - 2.94642857142855*G20_9_0_0 - 2.94642857142858*G20_9_0_1 + 2.94642857142855*G20_9_1_0 + 5.35714285714286*G20_9_2_1 + 6.65717481140859e-14*G20_9_3_0 + 9.64285714285718*G20_9_3_1 - 12.0535714285714*G20_9_4_1 - 4.96963581397836e-14*G20_9_5_0 + 9.64285714285713*G20_9_5_1 - 12.0535714285713*G20_9_6_1 - 7.23214285714283*G20_9_7_0 - 16.875*G20_9_7_1 + 7.23214285714283*G20_9_8_0 - 9.64285714285707*G20_9_8_1 - 1.59872115546023e-14*G20_9_9_0 + 28.9285714285713*G20_9_9_1 - 2.97619047619046*G21_0_0_10 - 1.77083333333332*G21_0_0_11 - 5.95238095238097*G21_0_0_12 + 2.81250000000001*G21_0_0_13 - 4.68750000000002*G21_0_0_14 - 5.22321428571427*G21_0_0_15 - 0.66964285714287*G21_0_0_16 - 4.82142857142857*G21_0_0_17 + 3.61607142857144*G21_0_0_18 - 2.94642857142855*G21_0_0_19 - 2.97619047619047*G21_0_1_10 - 1.77083333333333*G21_0_1_11 - 5.95238095238097*G21_0_1_12 + 2.81249999999998*G21_0_1_13 - 4.68749999999999*G21_0_1_14 - 5.22321428571427*G21_0_1_15 - 0.669642857142856*G21_0_1_16 - 4.82142857142857*G21_0_1_17 + 3.61607142857141*G21_0_1_18 - 2.94642857142858*G21_0_1_19 + 1.77083333333333*G21_1_0_10 + 2.97619047619046*G21_1_0_11 + 5.95238095238092*G21_1_0_12 + 5.22321428571426*G21_1_0_13 + 0.669642857142854*G21_1_0_14 - 2.81249999999998*G21_1_0_15 + 4.68749999999997*G21_1_0_16 - 3.6160714285714*G21_1_0_17 + 4.82142857142853*G21_1_0_18 + 2.94642857142855*G21_1_0_19 + 5.94199914367746e-14*G21_1_1_12 - 2.70783836443327e-14*G21_1_1_13 + 3.85629135203417e-14*G21_1_1_14 - 1.72996054515353e-14*G21_1_1_15 + 3.40450677932774e-14*G21_1_1_16 + 1.02342846278283e-14*G21_1_1_17 + 2.97619047619046*G21_2_1_10 + 2.97619047619047*G21_2_1_11 + 35.4166666666665*G21_2_1_12 - 12.0535714285713*G21_2_1_13 + 26.7857142857141*G21_2_1_14 - 12.0535714285714*G21_2_1_15 + 26.7857142857141*G21_2_1_16 + 1.241368119409e-14*G21_2_1_17 + 1.2868178744796e-14*G21_2_1_18 + 5.35714285714285*G21_2_1_19 - 2.81249999999998*G21_3_0_10 + 0.13392857142857*G21_3_0_11 - 24.1071428571427*G21_3_0_12 + 12.0535714285714*G21_3_0_13 - 24.1071428571427*G21_3_0_14 + 12.0535714285714*G21_3_0_15 - 24.1071428571427*G21_3_0_16 + 0.401785714285687*G21_3_0_17 + 7.63392857142857*G21_3_0_18 + 6.94722057659192e-14*G21_3_0_19 + 0.803571428571427*G21_3_1_10 + 4.68749999999997*G21_3_1_11 - 8.4821039081362e-14*G21_3_1_12 + 15.2678571428572*G21_3_1_13 - 10.0446428571429*G21_3_1_14 - 0.803571428571364*G21_3_1_15 - 2.00892857142866*G21_3_1_16 - 5.62499999999996*G21_3_1_17 + 14.8660714285714*G21_3_1_18 + 9.64285714285718*G21_3_1_19 + 4.68749999999997*G21_4_0_10 + 4.68749999999998*G21_4_0_11 + 64.285714285714*G21_4_0_12 - 24.1071428571427*G21_4_0_13 + 48.2142857142855*G21_4_0_14 - 24.1071428571427*G21_4_0_15 + 48.2142857142855*G21_4_0_16 - 2.00892857142857*G21_4_0_17 - 2.00892857142857*G21_4_0_18 - 0.133928571428584*G21_4_1_10 + 0.13392857142856*G21_4_1_11 + 10.7142857142856*G21_4_1_12 - 10.0446428571428*G21_4_1_13 + 8.0357142857143*G21_4_1_14 - 2.00892857142862*G21_4_1_15 + 4.01785714285718*G21_4_1_16 + 0.401785714285643*G21_4_1_17 - 4.41964285714288*G21_4_1_18 - 12.0535714285714*G21_4_1_19 - 0.133928571428567*G21_5_0_10 + 2.81249999999999*G21_5_0_11 + 24.1071428571428*G21_5_0_12 - 12.0535714285714*G21_5_0_13 + 24.1071428571428*G21_5_0_14 - 12.0535714285714*G21_5_0_15 + 24.1071428571428*G21_5_0_16 - 7.63392857142856*G21_5_0_17 - 0.401785714285704*G21_5_0_18 - 4.90163465372007e-14*G21_5_0_19 + 4.55357142857141*G21_5_1_10 + 3.61607142857143*G21_5_1_11 + 24.1071428571428*G21_5_1_12 - 12.8571428571427*G21_5_1_13 + 22.0982142857141*G21_5_1_14 + 3.21428571428571*G21_5_1_15 + 14.0624999999999*G21_5_1_16 + 7.23214285714284*G21_5_1_17 - 6.02678571428564*G21_5_1_18 + 9.64285714285713*G21_5_1_19 - 4.68749999999997*G21_6_0_10 - 4.68749999999998*G21_6_0_11 - 64.285714285714*G21_6_0_12 + 24.1071428571427*G21_6_0_13 - 48.2142857142855*G21_6_0_14 + 24.1071428571427*G21_6_0_15 - 48.2142857142855*G21_6_0_16 + 2.00892857142857*G21_6_0_17 + 2.00892857142857*G21_6_0_18 - 4.55357142857139*G21_6_1_10 - 4.82142857142854*G21_6_1_11 - 53.5714285714282*G21_6_1_12 + 22.0982142857141*G21_6_1_13 - 44.1964285714283*G21_6_1_14 + 14.0624999999999*G21_6_1_15 - 40.1785714285711*G21_6_1_16 - 2.41071428571425*G21_6_1_17 + 2.41071428571429*G21_6_1_18 - 12.0535714285713*G21_6_1_19 + 4.82142857142856*G21_7_0_10 + 3.6160714285714*G21_7_0_11 + 2.83106871279415e-14*G21_7_0_12 - 0.401785714285747*G21_7_0_13 + 2.0089285714286*G21_7_0_14 + 7.63392857142858*G21_7_0_15 - 2.00892857142857*G21_7_0_16 + 6.26744749848696e-14*G21_7_0_17 - 8.43750000000001*G21_7_0_18 - 7.23214285714283*G21_7_0_19 + 0.133928571428571*G21_7_1_10 + 2.81249999999997*G21_7_1_11 - 5.13478148889135e-14*G21_7_1_12 + 0.401785714285672*G21_7_1_13 + 4.01785714285716*G21_7_1_14 - 7.63392857142855*G21_7_1_15 + 8.03571428571426*G21_7_1_16 - 14.8660714285714*G21_7_1_17 - 2.81250000000006*G21_7_1_18 - 16.875*G21_7_1_19 - 3.61607142857142*G21_8_0_10 - 4.82142857142854*G21_8_0_11 - 7.63392857142852*G21_8_0_13 + 2.00892857142856*G21_8_0_14 + 0.401785714285666*G21_8_0_15 - 2.00892857142853*G21_8_0_16 + 8.43749999999991*G21_8_0_17 + 4.15589871544109e-14*G21_8_0_18 + 7.23214285714283*G21_8_0_19 - 0.803571428571413*G21_8_1_10 - 4.68749999999994*G21_8_1_11 + 1.10633724403897e-13*G21_8_1_12 - 15.2678571428571*G21_8_1_13 + 10.0446428571428*G21_8_1_14 + 0.803571428571407*G21_8_1_15 + 2.00892857142861*G21_8_1_16 + 5.62499999999999*G21_8_1_17 - 14.8660714285713*G21_8_1_18 - 9.64285714285707*G21_8_1_19 + 2.94642857142855*G21_9_0_10 - 2.94642857142856*G21_9_0_11 - 5.55111512312578e-14*G21_9_0_12 - 4.90718576884319e-14*G21_9_0_13 - 2.79776202205539e-14*G21_9_0_14 + 6.91530166463394e-14*G21_9_0_15 - 4.47142323167782e-14*G21_9_0_16 + 7.23214285714287*G21_9_0_17 - 7.23214285714287*G21_9_0_18 - 1.90958360235527e-14*G21_9_0_19 - 2.16666962149503e-14*G21_9_1_10 - 2.94642857142858*G21_9_1_11 - 10.7142857142858*G21_9_1_12 + 9.64285714285706*G21_9_1_13 - 12.0535714285714*G21_9_1_14 + 9.64285714285714*G21_9_1_15 - 12.0535714285714*G21_9_1_16 + 14.4642857142856*G21_9_1_17 + 7.23214285714277*G21_9_1_18 + 28.9285714285713*G21_9_1_19 + 1.48809523809523*G24_0_0_0 + 1.48809523809523*G24_0_0_1 - 0.885416666666663*G24_0_1_0 - 1.48809523809523*G24_0_2_1 + 1.40624999999999*G24_0_3_0 - 0.401785714285714*G24_0_3_1 - 2.34374999999999*G24_0_4_0 + 0.0669642857142922*G24_0_4_1 + 0.0669642857142833*G24_0_5_0 - 2.27678571428571*G24_0_5_1 + 2.34374999999999*G24_0_6_0 + 2.27678571428569*G24_0_6_1 - 2.41071428571428*G24_0_7_0 - 0.0669642857142852*G24_0_7_1 + 1.80803571428571*G24_0_8_0 + 0.401785714285707*G24_0_8_1 - 1.47321428571427*G24_0_9_0 + 1.08871245352304e-14*G24_0_9_1 + 0.885416666666662*G24_1_0_0 + 0.885416666666666*G24_1_0_1 - 1.48809523809523*G24_1_1_0 - 1.48809523809523*G24_1_2_1 - 0.066964285714285*G24_1_3_0 - 2.34374999999999*G24_1_3_1 - 2.34374999999999*G24_1_4_0 - 0.0669642857142802*G24_1_4_1 - 1.40624999999999*G24_1_5_0 - 1.80803571428571*G24_1_5_1 + 2.34374999999999*G24_1_6_0 + 2.41071428571427*G24_1_6_1 - 1.8080357142857*G24_1_7_0 - 1.40624999999998*G24_1_7_1 + 2.41071428571427*G24_1_8_0 + 2.34374999999997*G24_1_8_1 + 1.47321428571428*G24_1_9_0 + 1.47321428571429*G24_1_9_1 + 2.97619047619048*G24_2_0_0 + 2.97619047619049*G24_2_0_1 - 2.97619047619046*G24_2_1_0 - 2.97099957183873e-14*G24_2_1_1 - 17.7083333333333*G24_2_2_1 + 12.0535714285714*G24_2_3_0 + 4.2410519540681e-14*G24_2_3_1 - 32.142857142857*G24_2_4_0 - 5.35714285714283*G24_2_4_1 - 12.0535714285714*G24_2_5_0 - 12.0535714285714*G24_2_5_1 + 32.142857142857*G24_2_6_0 + 26.7857142857141*G24_2_6_1 - 1.41275879883551e-14*G24_2_7_0 + 2.56183962932255e-14*G24_2_7_1 - 5.52058398994859e-14*G24_2_8_1 + 2.75335310107039e-14*G24_2_9_0 + 5.3571428571429*G24_2_9_1 - 1.40625000000001*G24_3_0_0 - 1.40624999999999*G24_3_0_1 - 2.61160714285713*G24_3_1_0 + 1.35391918221664e-14*G24_3_1_1 + 6.02678571428567*G24_3_2_1 - 6.0267857142857*G24_3_3_0 - 7.63392857142858*G24_3_3_1 + 12.0535714285714*G24_3_4_0 + 5.02232142857141*G24_3_4_1 + 6.02678571428568*G24_3_5_0 + 6.42857142857136*G24_3_5_1 - 12.0535714285714*G24_3_6_0 - 11.0491071428571*G24_3_6_1 + 0.200892857142874*G24_3_7_0 - 0.200892857142836*G24_3_7_1 + 3.81696428571426*G24_3_8_0 + 7.63392857142854*G24_3_8_1 + 2.40918396343659e-14*G24_3_9_0 - 4.82142857142853*G24_3_9_1 + 2.34375000000001*G24_4_0_0 + 2.34375*G24_4_0_1 - 0.334821428571427*G24_4_1_0 - 1.92814567601709e-14*G24_4_1_1 - 13.3928571428571*G24_4_2_1 + 12.0535714285714*G24_4_3_0 + 5.02232142857145*G24_4_3_1 - 24.1071428571427*G24_4_4_0 - 4.01785714285715*G24_4_4_1 - 12.0535714285714*G24_4_5_0 - 11.0491071428571*G24_4_5_1 + 24.1071428571427*G24_4_6_0 + 22.0982142857141*G24_4_6_1 - 1.0044642857143*G24_4_7_0 - 2.00892857142858*G24_4_7_1 - 1.00446428571428*G24_4_8_0 - 5.02232142857142*G24_4_8_1 + 1.50990331349021e-14*G24_4_9_0 + 6.02678571428571*G24_4_9_1 + 2.61160714285713*G24_5_0_0 + 2.61160714285714*G24_5_0_1 + 1.40624999999999*G24_5_1_0 + 6.02678571428568*G24_5_2_1 - 6.02678571428568*G24_5_3_0 + 0.401785714285682*G24_5_3_1 + 12.0535714285714*G24_5_4_0 + 1.00446428571431*G24_5_4_1 + 6.02678571428572*G24_5_5_0 - 1.60714285714286*G24_5_5_1 - 12.0535714285714*G24_5_6_0 - 7.03124999999996*G24_5_6_1 - 3.81696428571429*G24_5_7_0 + 3.81696428571427*G24_5_7_1 - 0.200892857142834*G24_5_8_0 - 0.401785714285704*G24_5_8_1 - 3.59087759527199e-14*G24_5_9_0 - 4.82142857142857*G24_5_9_1 + 0.334821428571435*G24_6_0_0 + 0.334821428571428*G24_6_0_1 - 2.34374999999999*G24_6_1_0 - 1.70225338966387e-14*G24_6_1_1 - 13.3928571428571*G24_6_2_1 + 12.0535714285714*G24_6_3_0 + 1.00446428571433*G24_6_3_1 - 24.1071428571427*G24_6_4_0 - 2.00892857142859*G24_6_4_1 - 12.0535714285714*G24_6_5_0 - 7.03124999999994*G24_6_5_1 + 24.1071428571427*G24_6_6_0 + 20.0892857142856*G24_6_6_1 + 1.00446428571429*G24_6_7_0 - 4.01785714285713*G24_6_7_1 + 1.00446428571427*G24_6_8_0 - 1.0044642857143*G24_6_8_1 + 2.25791607633141e-14*G24_6_9_0 + 6.02678571428572*G24_6_9_1 + 2.41071428571428*G24_7_0_0 + 2.41071428571429*G24_7_0_1 + 1.8080357142857*G24_7_1_0 - 0.200892857142844*G24_7_3_0 + 2.81249999999998*G24_7_3_1 + 1.00446428571428*G24_7_4_0 - 0.200892857142822*G24_7_4_1 + 3.81696428571428*G24_7_5_0 - 3.61607142857142*G24_7_5_1 - 1.00446428571429*G24_7_6_0 + 1.20535714285712*G24_7_6_1 - 3.16832064056749e-14*G24_7_7_0 + 7.43303571428568*G24_7_7_1 - 4.21874999999995*G24_7_8_0 - 2.8125*G24_7_8_1 - 3.61607142857143*G24_7_9_0 - 7.23214285714282*G24_7_9_1 - 1.80803571428572*G24_8_0_0 - 1.8080357142857*G24_8_0_1 - 2.41071428571427*G24_8_1_0 - 3.81696428571428*G24_8_3_0 - 7.4330357142857*G24_8_3_1 + 1.00446428571428*G24_8_4_0 + 2.20982142857144*G24_8_4_1 + 0.200892857142852*G24_8_5_0 + 3.01339285714282*G24_8_5_1 - 1.00446428571428*G24_8_6_0 - 1.20535714285715*G24_8_6_1 + 4.21875000000001*G24_8_7_0 + 1.40625000000003*G24_8_7_1 - 2.10084770760344e-14*G24_8_8_0 + 7.43303571428565*G24_8_8_1 + 3.61607142857143*G24_8_9_0 - 3.61607142857139*G24_8_9_1 + 1.47321428571428*G24_9_0_0 + 1.47321428571429*G24_9_0_1 - 1.47321428571428*G24_9_1_0 - 2.67857142857143*G24_9_2_1 - 3.3285874057043e-14*G24_9_3_0 - 4.82142857142859*G24_9_3_1 + 6.02678571428571*G24_9_4_1 + 2.48481790698918e-14*G24_9_5_0 - 4.82142857142857*G24_9_5_1 + 6.02678571428567*G24_9_6_1 + 3.61607142857142*G24_9_7_0 + 8.43750000000001*G24_9_7_1 - 3.61607142857142*G24_9_8_0 + 4.82142857142853*G24_9_8_1 - 14.4642857142856*G24_9_9_1 + 1.48809523809523*G25_0_0_10 + 0.885416666666662*G25_0_0_11 + 2.97619047619048*G25_0_0_12 - 1.40625000000001*G25_0_0_13 + 2.34375000000001*G25_0_0_14 + 2.61160714285713*G25_0_0_15 + 0.334821428571435*G25_0_0_16 + 2.41071428571428*G25_0_0_17 - 1.80803571428572*G25_0_0_18 + 1.47321428571428*G25_0_0_19 + 1.48809523809523*G25_0_1_10 + 0.885416666666666*G25_0_1_11 + 2.97619047619049*G25_0_1_12 - 1.40624999999999*G25_0_1_13 + 2.34375*G25_0_1_14 + 2.61160714285714*G25_0_1_15 + 0.334821428571428*G25_0_1_16 + 2.41071428571429*G25_0_1_17 - 1.8080357142857*G25_0_1_18 + 1.47321428571429*G25_0_1_19 - 0.885416666666663*G25_1_0_10 - 1.48809523809523*G25_1_0_11 - 2.97619047619046*G25_1_0_12 - 2.61160714285713*G25_1_0_13 - 0.334821428571427*G25_1_0_14 + 1.40624999999999*G25_1_0_15 - 2.34374999999999*G25_1_0_16 + 1.8080357142857*G25_1_0_17 - 2.41071428571427*G25_1_0_18 - 1.47321428571428*G25_1_0_19 - 2.97099957183873e-14*G25_1_1_12 + 1.35391918221664e-14*G25_1_1_13 - 1.92814567601709e-14*G25_1_1_14 - 1.70225338966387e-14*G25_1_1_16 - 1.48809523809523*G25_2_1_10 - 1.48809523809523*G25_2_1_11 - 17.7083333333333*G25_2_1_12 + 6.02678571428567*G25_2_1_13 - 13.3928571428571*G25_2_1_14 + 6.02678571428568*G25_2_1_15 - 13.3928571428571*G25_2_1_16 - 2.67857142857143*G25_2_1_19 + 1.40624999999999*G25_3_0_10 - 0.066964285714285*G25_3_0_11 + 12.0535714285714*G25_3_0_12 - 6.0267857142857*G25_3_0_13 + 12.0535714285714*G25_3_0_14 - 6.02678571428568*G25_3_0_15 + 12.0535714285714*G25_3_0_16 - 0.200892857142844*G25_3_0_17 - 3.81696428571428*G25_3_0_18 - 3.47361028829596e-14*G25_3_0_19 - 0.401785714285714*G25_3_1_10 - 2.34374999999999*G25_3_1_11 + 4.2410519540681e-14*G25_3_1_12 - 7.63392857142858*G25_3_1_13 + 5.02232142857145*G25_3_1_14 + 0.401785714285682*G25_3_1_15 + 1.00446428571433*G25_3_1_16 + 2.81249999999998*G25_3_1_17 - 7.4330357142857*G25_3_1_18 - 4.82142857142859*G25_3_1_19 - 2.34374999999998*G25_4_0_10 - 2.34374999999999*G25_4_0_11 - 32.142857142857*G25_4_0_12 + 12.0535714285714*G25_4_0_13 - 24.1071428571427*G25_4_0_14 + 12.0535714285714*G25_4_0_15 - 24.1071428571427*G25_4_0_16 + 1.00446428571428*G25_4_0_17 + 1.00446428571428*G25_4_0_18 + 0.0669642857142922*G25_4_1_10 - 0.0669642857142801*G25_4_1_11 - 5.35714285714282*G25_4_1_12 + 5.02232142857141*G25_4_1_13 - 4.01785714285715*G25_4_1_14 + 1.00446428571431*G25_4_1_15 - 2.00892857142859*G25_4_1_16 - 0.200892857142822*G25_4_1_17 + 2.20982142857144*G25_4_1_18 + 6.02678571428571*G25_4_1_19 + 0.0669642857142835*G25_5_0_10 - 1.40625*G25_5_0_11 - 12.0535714285714*G25_5_0_12 + 6.02678571428568*G25_5_0_13 - 12.0535714285714*G25_5_0_14 + 6.02678571428572*G25_5_0_15 - 12.0535714285714*G25_5_0_16 + 3.81696428571428*G25_5_0_17 + 0.200892857142852*G25_5_0_18 + 2.45081732686003e-14*G25_5_0_19 - 2.27678571428571*G25_5_1_10 - 1.80803571428571*G25_5_1_11 - 12.0535714285714*G25_5_1_12 + 6.42857142857136*G25_5_1_13 - 11.0491071428571*G25_5_1_14 - 1.60714285714286*G25_5_1_15 - 7.03124999999994*G25_5_1_16 - 3.61607142857142*G25_5_1_17 + 3.01339285714282*G25_5_1_18 - 4.82142857142857*G25_5_1_19 + 2.34374999999998*G25_6_0_10 + 2.34374999999999*G25_6_0_11 + 32.142857142857*G25_6_0_12 - 12.0535714285714*G25_6_0_13 + 24.1071428571427*G25_6_0_14 - 12.0535714285714*G25_6_0_15 + 24.1071428571427*G25_6_0_16 - 1.00446428571429*G25_6_0_17 - 1.00446428571428*G25_6_0_18 + 2.27678571428569*G25_6_1_10 + 2.41071428571427*G25_6_1_11 + 26.7857142857141*G25_6_1_12 - 11.0491071428571*G25_6_1_13 + 22.0982142857141*G25_6_1_14 - 7.03124999999996*G25_6_1_15 + 20.0892857142856*G25_6_1_16 + 1.20535714285712*G25_6_1_17 - 1.20535714285715*G25_6_1_18 + 6.02678571428567*G25_6_1_19 - 2.41071428571428*G25_7_0_10 - 1.8080357142857*G25_7_0_11 - 1.41553435639707e-14*G25_7_0_12 + 0.200892857142874*G25_7_0_13 - 1.0044642857143*G25_7_0_14 - 3.81696428571429*G25_7_0_15 + 1.00446428571429*G25_7_0_16 - 3.13372374924348e-14*G25_7_0_17 + 4.21875000000001*G25_7_0_18 + 3.61607142857141*G25_7_0_19 - 0.0669642857142853*G25_7_1_10 - 1.40624999999998*G25_7_1_11 + 2.56739074444567e-14*G25_7_1_12 - 0.200892857142836*G25_7_1_13 - 2.00892857142858*G25_7_1_14 + 3.81696428571427*G25_7_1_15 - 4.01785714285713*G25_7_1_16 + 7.43303571428568*G25_7_1_17 + 1.40625000000003*G25_7_1_18 + 8.43750000000001*G25_7_1_19 + 1.80803571428571*G25_8_0_10 + 2.41071428571427*G25_8_0_11 + 3.81696428571426*G25_8_0_13 - 1.00446428571428*G25_8_0_14 - 0.200892857142833*G25_8_0_15 + 1.00446428571427*G25_8_0_16 - 4.21874999999995*G25_8_0_17 - 2.07794935772054e-14*G25_8_0_18 - 3.61607142857142*G25_8_0_19 + 0.401785714285707*G25_8_1_10 + 2.34374999999997*G25_8_1_11 - 5.53168622019484e-14*G25_8_1_12 + 7.63392857142854*G25_8_1_13 - 5.02232142857142*G25_8_1_14 - 0.401785714285704*G25_8_1_15 - 1.0044642857143*G25_8_1_16 - 2.8125*G25_8_1_17 + 7.43303571428565*G25_8_1_18 + 4.82142857142853*G25_8_1_19 - 1.47321428571427*G25_9_0_10 + 1.47321428571428*G25_9_0_11 + 2.77555756156289e-14*G25_9_0_12 + 2.4535928844216e-14*G25_9_0_13 + 1.3988810110277e-14*G25_9_0_14 - 3.45765083231697e-14*G25_9_0_15 + 2.23571161583891e-14*G25_9_0_16 - 3.61607142857143*G25_9_0_17 + 3.61607142857143*G25_9_0_18 + 1.08333481074752e-14*G25_9_1_10 + 1.47321428571429*G25_9_1_11 + 5.3571428571429*G25_9_1_12 - 4.82142857142853*G25_9_1_13 + 6.02678571428571*G25_9_1_14 - 4.82142857142857*G25_9_1_15 + 6.02678571428572*G25_9_1_16 - 7.23214285714282*G25_9_1_17 - 3.61607142857139*G25_9_1_18 - 14.4642857142856*G25_9_1_19;
    A[3] = -0.0749999999999957*G4_0_0_0 - 0.0749999999999997*G4_0_0_1 + 0.0749999999999988*G4_0_1_0 - 0.599999999999996*G4_0_2_1 + 3.37499999999999*G4_0_3_0 + 1.6875*G4_0_3_1 - 0.674999999999998*G4_0_4_0 + 1.68749999999998*G4_0_4_1 + 0.675000000000001*G4_0_5_0 + 0.337500000000003*G4_0_5_1 + 0.674999999999998*G4_0_6_0 + 0.337500000000005*G4_0_6_1 + 0.337499999999988*G4_0_7_1 - 1.68749999999999*G4_0_8_1 - 4.04999999999999*G4_0_9_0 - 2.025*G4_0_9_1 - 0.0749999999999985*G4_1_0_0 - 0.0750000000000046*G4_1_0_1 + 1.42499999999999*G4_1_1_0 + 0.0750000000000016*G4_1_2_1 + 1.6875*G4_1_3_0 + 3.375*G4_1_3_1 - 0.337500000000006*G4_1_4_0 - 0.675000000000011*G4_1_4_1 + 0.337499999999999*G4_1_5_0 + 1.73064687580826e-14*G4_1_5_1 + 0.337500000000005*G4_1_6_0 + 0.33749999999999*G4_1_7_0 + 0.674999999999976*G4_1_7_1 - 1.68749999999998*G4_1_8_0 - 3.37499999999998*G4_1_8_1 - 2.025*G4_1_9_0 - 0.0749999999999957*G5_0_0_0 - 0.0749999999999997*G5_0_0_1 + 0.0749999999999988*G5_0_1_0 - 0.599999999999996*G5_0_2_1 + 3.37499999999999*G5_0_3_0 + 1.6875*G5_0_3_1 - 0.674999999999998*G5_0_4_0 + 1.68749999999998*G5_0_4_1 + 0.675000000000001*G5_0_5_0 + 0.337500000000003*G5_0_5_1 + 0.674999999999998*G5_0_6_0 + 0.337500000000005*G5_0_6_1 + 0.337499999999988*G5_0_7_1 - 1.68749999999999*G5_0_8_1 - 4.04999999999999*G5_0_9_0 - 2.025*G5_0_9_1 - 0.0749999999999985*G5_1_0_0 - 0.0750000000000046*G5_1_0_1 + 1.42499999999999*G5_1_1_0 + 0.0750000000000016*G5_1_2_1 + 1.6875*G5_1_3_0 + 3.375*G5_1_3_1 - 0.337500000000006*G5_1_4_0 - 0.675000000000011*G5_1_4_1 + 0.337499999999999*G5_1_5_0 + 1.73064687580826e-14*G5_1_5_1 + 0.337500000000005*G5_1_6_0 + 0.33749999999999*G5_1_7_0 + 0.674999999999976*G5_1_7_1 - 1.68749999999998*G5_1_8_0 - 3.37499999999998*G5_1_8_1 - 2.025*G5_1_9_0 + 0.0749999999999998*G6_0_20 - 0.075*G6_0_21 + 0.149999999999999*G6_0_22 - 0.599999999999998*G6_0_23 - 0.299999999999999*G6_0_25 + 0.074999999999999*G6_1_20 - 0.3*G6_1_21 + 0.0750000000000004*G6_1_22 - 0.299999999999999*G6_1_23 - 0.3*G6_1_25 + 0.0374999999999978*G7_0_0_0 + 0.0374999999999999*G7_0_0_1 - 0.0374999999999994*G7_0_1_0 + 0.299999999999998*G7_0_2_1 - 1.6875*G7_0_3_0 - 0.843750000000001*G7_0_3_1 + 0.337499999999999*G7_0_4_0 - 0.843749999999991*G7_0_4_1 - 0.3375*G7_0_5_0 - 0.168750000000002*G7_0_5_1 - 0.337499999999999*G7_0_6_0 - 0.168750000000003*G7_0_6_1 - 0.168749999999994*G7_0_7_1 + 0.843749999999993*G7_0_8_1 + 2.025*G7_0_9_0 + 1.0125*G7_0_9_1 + 0.0374999999999992*G7_1_0_0 + 0.0375000000000023*G7_1_0_1 - 0.712499999999996*G7_1_1_0 - 0.0375000000000008*G7_1_2_1 - 0.843750000000001*G7_1_3_0 - 1.6875*G7_1_3_1 + 0.168750000000003*G7_1_4_0 + 0.337500000000006*G7_1_4_1 - 0.168749999999999*G7_1_5_0 - 0.168750000000003*G7_1_6_0 - 0.168749999999995*G7_1_7_0 - 0.337499999999988*G7_1_7_1 + 0.843749999999992*G7_1_8_0 + 1.68749999999999*G7_1_8_1 + 1.0125*G7_1_9_0 + 0.0374999999999978*G8_0_0_0 + 0.0374999999999999*G8_0_0_1 - 0.0374999999999994*G8_0_1_0 + 0.299999999999998*G8_0_2_1 - 1.6875*G8_0_3_0 - 0.843750000000001*G8_0_3_1 + 0.337499999999999*G8_0_4_0 - 0.843749999999991*G8_0_4_1 - 0.3375*G8_0_5_0 - 0.168750000000002*G8_0_5_1 - 0.337499999999999*G8_0_6_0 - 0.168750000000003*G8_0_6_1 - 0.168749999999994*G8_0_7_1 + 0.843749999999993*G8_0_8_1 + 2.025*G8_0_9_0 + 1.0125*G8_0_9_1 + 0.0374999999999992*G8_1_0_0 + 0.0375000000000023*G8_1_0_1 - 0.712499999999996*G8_1_1_0 - 0.0375000000000008*G8_1_2_1 - 0.843750000000001*G8_1_3_0 - 1.6875*G8_1_3_1 + 0.168750000000003*G8_1_4_0 + 0.337500000000006*G8_1_4_1 - 0.168749999999999*G8_1_5_0 - 0.168750000000003*G8_1_6_0 - 0.168749999999995*G8_1_7_0 - 0.337499999999988*G8_1_7_1 + 0.843749999999992*G8_1_8_0 + 1.68749999999999*G8_1_8_1 + 1.0125*G8_1_9_0 - 0.0374999999999999*G9_0_20 + 0.0375*G9_0_21 - 0.0749999999999997*G9_0_22 + 0.299999999999999*G9_0_23 + 0.149999999999999*G9_0_25 - 0.0374999999999995*G9_1_20 + 0.15*G9_1_21 - 0.0375000000000002*G9_1_22 + 0.149999999999999*G9_1_23 + 0.15*G9_1_25 - 0.0749999999999957*G10_0_0_0 - 0.0749999999999997*G10_0_0_1 + 0.0749999999999988*G10_0_1_0 - 0.599999999999996*G10_0_2_1 + 3.37499999999999*G10_0_3_0 + 1.6875*G10_0_3_1 - 0.674999999999998*G10_0_4_0 + 1.68749999999998*G10_0_4_1 + 0.675000000000001*G10_0_5_0 + 0.337500000000003*G10_0_5_1 + 0.674999999999998*G10_0_6_0 + 0.337500000000005*G10_0_6_1 + 0.337499999999988*G10_0_7_1 - 1.68749999999999*G10_0_8_1 - 4.04999999999999*G10_0_9_0 - 2.025*G10_0_9_1 - 0.0749999999999985*G10_1_0_0 - 0.0750000000000046*G10_1_0_1 + 1.42499999999999*G10_1_1_0 + 0.0750000000000016*G10_1_2_1 + 1.6875*G10_1_3_0 + 3.375*G10_1_3_1 - 0.337500000000006*G10_1_4_0 - 0.675000000000011*G10_1_4_1 + 0.337499999999999*G10_1_5_0 + 1.73064687580826e-14*G10_1_5_1 + 0.337500000000005*G10_1_6_0 + 0.33749999999999*G10_1_7_0 + 0.674999999999976*G10_1_7_1 - 1.68749999999998*G10_1_8_0 - 3.37499999999998*G10_1_8_1 - 2.025*G10_1_9_0 - 0.0749999999999957*G11_0_10_0 - 0.0749999999999997*G11_0_10_1 + 0.0749999999999988*G11_0_11_0 - 0.599999999999996*G11_0_12_1 + 3.37499999999999*G11_0_13_0 + 1.6875*G11_0_13_1 - 0.674999999999998*G11_0_14_0 + 1.68749999999998*G11_0_14_1 + 0.675000000000001*G11_0_15_0 + 0.337500000000003*G11_0_15_1 + 0.674999999999998*G11_0_16_0 + 0.337500000000005*G11_0_16_1 + 0.337499999999988*G11_0_17_1 - 1.68749999999999*G11_0_18_1 - 4.04999999999999*G11_0_19_0 - 2.025*G11_0_19_1 - 0.0749999999999985*G11_1_10_0 - 0.0750000000000046*G11_1_10_1 + 1.42499999999999*G11_1_11_0 + 0.0750000000000016*G11_1_12_1 + 1.6875*G11_1_13_0 + 3.375*G11_1_13_1 - 0.337500000000006*G11_1_14_0 - 0.675000000000011*G11_1_14_1 + 0.337499999999999*G11_1_15_0 + 1.73064687580826e-14*G11_1_15_1 + 0.337500000000005*G11_1_16_0 + 0.33749999999999*G11_1_17_0 + 0.674999999999976*G11_1_17_1 - 1.68749999999998*G11_1_18_0 - 3.37499999999998*G11_1_18_1 - 2.025*G11_1_19_0 + 0.0374999999999978*G12_0_0_0 + 0.0374999999999999*G12_0_0_1 - 0.0374999999999994*G12_0_1_0 + 0.299999999999998*G12_0_2_1 - 1.6875*G12_0_3_0 - 0.843750000000001*G12_0_3_1 + 0.337499999999999*G12_0_4_0 - 0.843749999999991*G12_0_4_1 - 0.3375*G12_0_5_0 - 0.168750000000002*G12_0_5_1 - 0.337499999999999*G12_0_6_0 - 0.168750000000003*G12_0_6_1 - 0.168749999999994*G12_0_7_1 + 0.843749999999993*G12_0_8_1 + 2.025*G12_0_9_0 + 1.0125*G12_0_9_1 + 0.0374999999999992*G12_1_0_0 + 0.0375000000000023*G12_1_0_1 - 0.712499999999996*G12_1_1_0 - 0.0375000000000008*G12_1_2_1 - 0.843750000000001*G12_1_3_0 - 1.6875*G12_1_3_1 + 0.168750000000003*G12_1_4_0 + 0.337500000000006*G12_1_4_1 - 0.168749999999999*G12_1_5_0 - 0.168750000000003*G12_1_6_0 - 0.168749999999995*G12_1_7_0 - 0.337499999999988*G12_1_7_1 + 0.843749999999992*G12_1_8_0 + 1.68749999999999*G12_1_8_1 + 1.0125*G12_1_9_0 + 0.0374999999999978*G13_0_10_0 + 0.0374999999999999*G13_0_10_1 - 0.0374999999999994*G13_0_11_0 + 0.299999999999998*G13_0_12_1 - 1.6875*G13_0_13_0 - 0.843750000000001*G13_0_13_1 + 0.337499999999999*G13_0_14_0 - 0.843749999999991*G13_0_14_1 - 0.3375*G13_0_15_0 - 0.168750000000002*G13_0_15_1 - 0.337499999999999*G13_0_16_0 - 0.168750000000003*G13_0_16_1 - 0.168749999999994*G13_0_17_1 + 0.843749999999993*G13_0_18_1 + 2.025*G13_0_19_0 + 1.0125*G13_0_19_1 + 0.0374999999999992*G13_1_10_0 + 0.0375000000000023*G13_1_10_1 - 0.712499999999996*G13_1_11_0 - 0.0375000000000008*G13_1_12_1 - 0.843750000000001*G13_1_13_0 - 1.6875*G13_1_13_1 + 0.168750000000003*G13_1_14_0 + 0.337500000000006*G13_1_14_1 - 0.168749999999999*G13_1_15_0 - 0.168750000000003*G13_1_16_0 - 0.168749999999995*G13_1_17_0 - 0.337499999999988*G13_1_17_1 + 0.843749999999992*G13_1_18_0 + 1.68749999999999*G13_1_18_1 + 1.0125*G13_1_19_0 + 1.73611125475759e-14*G20_0_0_0 + 4.82142857142854*G20_0_1_0 - 3.6160714285714*G20_0_2_1 + 14.8660714285714*G20_0_3_0 + 14.8660714285714*G20_0_3_1 - 5.62499999999996*G20_0_4_0 + 2.81249999999994*G20_0_4_1 - 0.40178571428572*G20_0_5_0 - 2.41071428571423*G20_0_5_1 + 5.62499999999996*G20_0_6_0 + 6.02678571428571*G20_0_6_1 + 2.41071428571423*G20_0_7_0 + 4.41964285714275*G20_0_7_1 - 7.23214285714279*G20_0_8_0 - 14.8660714285713*G20_0_8_1 - 14.4642857142857*G20_0_9_0 - 7.23214285714287*G20_0_9_1 - 4.68749999999992*G20_1_0_0 - 4.68749999999998*G20_1_0_1 + 26.7857142857141*G20_1_1_0 - 5.65961111668246e-14*G20_1_1_1 + 0.66964285714289*G20_1_2_1 + 8.03571428571423*G20_1_3_0 + 48.2142857142855*G20_1_3_1 - 10.0446428571428*G20_1_4_0 - 24.1071428571428*G20_1_4_1 + 4.0178571428571*G20_1_5_0 + 2.00892857142869*G20_1_5_1 + 10.0446428571428*G20_1_6_0 + 2.00892857142851*G20_1_6_1 + 22.098214285714*G20_1_7_0 + 24.1071428571426*G20_1_7_1 - 44.1964285714282*G20_1_8_0 - 48.2142857142853*G20_1_8_1 - 12.0535714285713*G20_1_9_0 - 3.54993812123894e-14*G20_1_9_1 + 2.81250000000001*G20_2_0_0 + 2.81249999999998*G20_2_0_1 + 5.22321428571427*G20_2_1_0 - 2.70783836443327e-14*G20_2_1_1 - 12.0535714285713*G20_2_2_1 + 12.0535714285714*G20_2_3_0 + 15.2678571428572*G20_2_3_1 - 24.1071428571427*G20_2_4_0 - 10.0446428571428*G20_2_4_1 - 12.0535714285714*G20_2_5_0 - 12.8571428571427*G20_2_5_1 + 24.1071428571427*G20_2_6_0 + 22.0982142857141*G20_2_6_1 - 0.401785714285747*G20_2_7_0 + 0.401785714285673*G20_2_7_1 - 7.63392857142853*G20_2_8_0 - 15.2678571428571*G20_2_8_1 - 5.08482145278322e-14*G20_2_9_0 + 9.64285714285706*G20_2_9_1 - 29.7321428571424*G20_3_0_0 - 29.7321428571428*G20_3_0_1 + 80.3571428571424*G20_3_1_0 - 6.42857142857127*G20_3_2_1 + 216.964285714285*G20_3_3_0 + 216.964285714285*G20_3_3_1 + 21.6964285714284*G20_3_4_0 + 108.482142857142*G20_3_4_1 + 43.392857142857*G20_3_5_0 + 28.9285714285718*G20_3_5_1 - 21.6964285714285*G20_3_6_0 + 7.23214285714365*G20_3_6_1 + 94.017857142856*G20_3_7_0 + 108.482142857141*G20_3_7_1 - 144.642857142856*G20_3_8_0 - 216.964285714284*G20_3_8_1 - 260.357142857142*G20_3_9_0 - 216.964285714285*G20_3_9_1 + 2.81249999999995*G20_4_0_0 + 2.81250000000007*G20_4_0_1 - 28.1249999999998*G20_4_1_0 - 4.37026712106702e-14*G20_4_1_1 - 28.1249999999999*G20_4_2_1 - 10.8482142857143*G20_4_3_0 - 54.2410714285712*G20_4_3_1 - 54.2410714285711*G20_4_4_0 - 10.848214285714*G20_4_4_1 - 10.8482142857143*G20_4_5_0 - 3.61607142857159*G20_4_5_1 + 54.2410714285712*G20_4_6_0 + 28.928571428571*G20_4_6_1 - 3.61607142857127*G20_4_7_0 - 10.8482142857139*G20_4_7_1 + 28.9285714285712*G20_4_8_0 + 54.2410714285708*G20_4_8_1 + 21.6964285714286*G20_4_9_0 + 21.6964285714288*G20_4_9_1 + 4.41964285714282*G20_5_0_0 + 4.41964285714285*G20_5_0_1 - 4.41964285714283*G20_5_1_0 + 13.6607142857142*G20_5_2_1 - 21.6964285714285*G20_5_3_0 - 14.4642857142857*G20_5_3_1 + 21.6964285714285*G20_5_4_0 - 3.61607142857131*G20_5_4_1 + 21.6964285714284*G20_5_5_0 + 7.23214285714274*G20_5_5_1 - 21.6964285714285*G20_5_6_0 - 25.3124999999999*G20_5_6_1 - 10.8482142857142*G20_5_7_0 + 3.61607142857148*G20_5_7_1 + 10.8482142857142*G20_5_8_0 + 14.4642857142856*G20_5_8_1 + 5.3179682879545e-14*G20_5_9_0 + 9.19611609084825e-14*G20_5_9_1 - 5.22321428571423*G20_6_0_0 - 5.22321428571418*G20_6_0_1 - 5.62499999999999*G20_6_1_0 - 9.45204329536158e-14*G20_6_1_1 - 20.0892857142856*G20_6_2_1 + 10.8482142857141*G20_6_3_0 - 3.61607142857139*G20_6_3_1 - 54.2410714285711*G20_6_4_0 - 25.3124999999998*G20_6_4_1 + 10.8482142857142*G20_6_5_0 + 18.080357142857*G20_6_5_1 + 54.2410714285711*G20_6_6_0 + 7.23214285714258*G20_6_6_1 + 10.8482142857142*G20_6_7_0 + 3.61607142857152*G20_6_7_1 + 2.23484425410092e-14*G20_6_8_0 + 3.61607142857131*G20_6_8_1 - 21.6964285714283*G20_6_9_0 + 21.6964285714287*G20_6_9_1 + 5.62499999999991*G20_7_0_0 + 5.62500000000002*G20_7_0_1 - 20.0892857142856*G20_7_1_0 + 1.12750864801972e-14*G20_7_1_1 + 5.22321428571421*G20_7_2_1 - 47.0089285714285*G20_7_3_0 - 54.2410714285714*G20_7_3_1 + 7.23214285714284*G20_7_4_0 - 10.848214285714*G20_7_4_1 + 3.61607142857139*G20_7_5_0 - 1.64202852703799e-13*G20_7_5_1 - 7.23214285714283*G20_7_6_0 - 10.8482142857144*G20_7_6_1 - 14.4642857142855*G20_7_7_0 - 10.848214285714*G20_7_7_1 + 28.9285714285713*G20_7_8_0 + 54.241071428571*G20_7_8_1 + 43.3928571428571*G20_7_9_0 + 21.6964285714287*G20_7_9_1 - 0.401785714285584*G20_8_0_0 - 0.40178571428581*G20_8_0_1 + 40.1785714285712*G20_8_1_0 - 1.70452359186991e-14*G20_8_1_1 + 0.401785714285846*G20_8_2_1 + 72.3214285714284*G20_8_3_0 + 108.482142857143*G20_8_3_1 - 3.61607142857141*G20_8_4_0 - 4.24635153428721e-13*G20_8_4_1 - 7.23214285714282*G20_8_5_0 - 10.8482142857139*G20_8_5_1 + 3.61607142857139*G20_8_6_0 + 10.8482142857145*G20_8_6_1 - 3.61607142857169*G20_8_7_0 - 6.38141666245429e-13*G20_8_7_1 - 36.1607142857139*G20_8_8_0 - 108.482142857142*G20_8_8_1 - 65.0892857142855*G20_8_9_0 - 3.85313309037016e-13*G20_8_9_1 - 2.41071428571407*G20_9_0_0 - 2.41071428571426*G20_9_0_1 + 24.1071428571427*G20_9_1_0 - 9.44335582115648e-14*G20_9_1_1 - 19.2857142857141*G20_9_2_1 + 130.178571428571*G20_9_3_0 + 108.482142857143*G20_9_3_1 - 43.392857142857*G20_9_4_0 + 21.6964285714282*G20_9_4_1 + 43.3928571428569*G20_9_5_0 + 21.6964285714286*G20_9_5_1 + 43.3928571428569*G20_9_6_0 + 2.40890640768043e-13*G20_9_6_1 - 4.12231880575487e-13*G20_9_7_0 + 21.6964285714279*G20_9_7_1 - 21.6964285714282*G20_9_8_0 - 108.482142857142*G20_9_8_1 - 173.571428571428*G20_9_9_0 - 43.3928571428573*G20_9_9_1 + 1.73602451858379e-14*G21_0_0_10 - 4.68749999999992*G21_0_0_11 + 2.81250000000001*G21_0_0_12 - 29.7321428571424*G21_0_0_13 + 2.81249999999995*G21_0_0_14 + 4.41964285714282*G21_0_0_15 - 5.22321428571423*G21_0_0_16 + 5.62499999999991*G21_0_0_17 - 0.401785714285584*G21_0_0_18 - 2.41071428571407*G21_0_0_19 - 4.68749999999998*G21_0_1_11 + 2.81249999999998*G21_0_1_12 - 29.7321428571428*G21_0_1_13 + 2.81250000000007*G21_0_1_14 + 4.41964285714286*G21_0_1_15 - 5.22321428571418*G21_0_1_16 + 5.62500000000002*G21_0_1_17 - 0.40178571428581*G21_0_1_18 - 2.41071428571425*G21_0_1_19 + 4.82142857142854*G21_1_0_10 + 26.7857142857141*G21_1_0_11 + 5.22321428571427*G21_1_0_12 + 80.3571428571424*G21_1_0_13 - 28.1249999999998*G21_1_0_14 - 4.41964285714283*G21_1_0_15 - 5.62499999999999*G21_1_0_16 - 20.0892857142856*G21_1_0_17 + 40.1785714285712*G21_1_0_18 + 24.1071428571427*G21_1_0_19 - 5.65961111668246e-14*G21_1_1_11 - 2.70783836443327e-14*G21_1_1_12 - 4.37026712106702e-14*G21_1_1_14 - 9.45204329536158e-14*G21_1_1_16 + 1.12750864801972e-14*G21_1_1_17 - 1.70452359186991e-14*G21_1_1_18 - 9.44335582115648e-14*G21_1_1_19 - 3.61607142857139*G21_2_1_10 + 0.66964285714289*G21_2_1_11 - 12.0535714285713*G21_2_1_12 - 6.42857142857127*G21_2_1_13 - 28.1249999999999*G21_2_1_14 + 13.6607142857142*G21_2_1_15 - 20.0892857142856*G21_2_1_16 + 5.22321428571421*G21_2_1_17 + 0.401785714285845*G21_2_1_18 - 19.2857142857141*G21_2_1_19 + 14.8660714285714*G21_3_0_10 + 8.03571428571423*G21_3_0_11 + 12.0535714285714*G21_3_0_12 + 216.964285714285*G21_3_0_13 - 10.8482142857143*G21_3_0_14 - 21.6964285714285*G21_3_0_15 + 10.8482142857141*G21_3_0_16 - 47.0089285714285*G21_3_0_17 + 72.3214285714284*G21_3_0_18 + 130.178571428571*G21_3_0_19 + 14.8660714285714*G21_3_1_10 + 48.2142857142855*G21_3_1_11 + 15.2678571428572*G21_3_1_12 + 216.964285714285*G21_3_1_13 - 54.2410714285712*G21_3_1_14 - 14.4642857142857*G21_3_1_15 - 3.61607142857139*G21_3_1_16 - 54.2410714285714*G21_3_1_17 + 108.482142857143*G21_3_1_18 + 108.482142857143*G21_3_1_19 - 5.62499999999996*G21_4_0_10 - 10.0446428571428*G21_4_0_11 - 24.1071428571427*G21_4_0_12 + 21.6964285714284*G21_4_0_13 - 54.2410714285711*G21_4_0_14 + 21.6964285714285*G21_4_0_15 - 54.2410714285711*G21_4_0_16 + 7.23214285714284*G21_4_0_17 - 3.61607142857141*G21_4_0_18 - 43.392857142857*G21_4_0_19 + 2.81249999999994*G21_4_1_10 - 24.1071428571428*G21_4_1_11 - 10.0446428571428*G21_4_1_12 + 108.482142857142*G21_4_1_13 - 10.848214285714*G21_4_1_14 - 3.61607142857131*G21_4_1_15 - 25.3124999999998*G21_4_1_16 - 10.848214285714*G21_4_1_17 - 4.25523331848421e-13*G21_4_1_18 + 21.6964285714282*G21_4_1_19 - 0.40178571428572*G21_5_0_10 + 4.0178571428571*G21_5_0_11 - 12.0535714285714*G21_5_0_12 + 43.392857142857*G21_5_0_13 - 10.8482142857143*G21_5_0_14 + 21.6964285714284*G21_5_0_15 + 10.8482142857142*G21_5_0_16 + 3.61607142857139*G21_5_0_17 - 7.23214285714282*G21_5_0_18 + 43.3928571428569*G21_5_0_19 - 2.41071428571423*G21_5_1_10 + 2.00892857142869*G21_5_1_11 - 12.8571428571427*G21_5_1_12 + 28.9285714285718*G21_5_1_13 - 3.61607142857158*G21_5_1_14 + 7.23214285714274*G21_5_1_15 + 18.080357142857*G21_5_1_16 - 1.63745753067879e-13*G21_5_1_17 - 10.8482142857139*G21_5_1_18 + 21.6964285714286*G21_5_1_19 + 5.62499999999996*G21_6_0_10 + 10.0446428571428*G21_6_0_11 + 24.1071428571427*G21_6_0_12 - 21.6964285714285*G21_6_0_13 + 54.2410714285712*G21_6_0_14 - 21.6964285714285*G21_6_0_15 + 54.2410714285711*G21_6_0_16 - 7.23214285714283*G21_6_0_17 + 3.61607142857139*G21_6_0_18 + 43.3928571428569*G21_6_0_19 + 6.02678571428571*G21_6_1_10 + 2.00892857142851*G21_6_1_11 + 22.0982142857141*G21_6_1_12 + 7.23214285714365*G21_6_1_13 + 28.928571428571*G21_6_1_14 - 25.3124999999999*G21_6_1_15 + 7.23214285714258*G21_6_1_16 - 10.8482142857144*G21_6_1_17 + 10.8482142857145*G21_6_1_18 + 2.40002462348343e-13*G21_6_1_19 + 2.41071428571423*G21_7_0_10 + 22.098214285714*G21_7_0_11 - 0.401785714285748*G21_7_0_12 + 94.017857142856*G21_7_0_13 - 3.61607142857127*G21_7_0_14 - 10.8482142857142*G21_7_0_15 + 10.8482142857142*G21_7_0_16 - 14.4642857142855*G21_7_0_17 - 3.61607142857169*G21_7_0_18 - 4.13980481839271e-13*G21_7_0_19 + 4.41964285714275*G21_7_1_10 + 24.1071428571426*G21_7_1_11 + 0.401785714285672*G21_7_1_12 + 108.482142857141*G21_7_1_13 - 10.8482142857139*G21_7_1_14 + 3.61607142857148*G21_7_1_15 + 3.61607142857152*G21_7_1_16 - 10.848214285714*G21_7_1_17 - 6.3636444204429e-13*G21_7_1_18 + 21.6964285714279*G21_7_1_19 - 7.23214285714279*G21_8_0_10 - 44.1964285714282*G21_8_0_11 - 7.63392857142853*G21_8_0_12 - 144.642857142856*G21_8_0_13 + 28.9285714285712*G21_8_0_14 + 10.8482142857142*G21_8_0_15 + 2.21784396403635e-14*G21_8_0_16 + 28.9285714285713*G21_8_0_17 - 36.1607142857139*G21_8_0_18 - 21.6964285714282*G21_8_0_19 - 14.8660714285713*G21_8_1_10 - 48.2142857142853*G21_8_1_11 - 15.2678571428571*G21_8_1_12 - 216.964285714284*G21_8_1_13 + 54.2410714285708*G21_8_1_14 + 14.4642857142856*G21_8_1_15 + 3.61607142857131*G21_8_1_16 + 54.241071428571*G21_8_1_17 - 108.482142857142*G21_8_1_18 - 108.482142857142*G21_8_1_19 - 14.4642857142857*G21_9_0_10 - 12.0535714285713*G21_9_0_11 - 4.81836792687318e-14*G21_9_0_12 - 260.357142857142*G21_9_0_13 + 21.6964285714286*G21_9_0_14 + 4.69624339416441e-14*G21_9_0_15 - 21.6964285714283*G21_9_0_16 + 43.3928571428571*G21_9_0_17 - 65.0892857142855*G21_9_0_18 - 173.571428571428*G21_9_0_19 - 7.23214285714287*G21_9_1_10 - 3.54716256367738e-14*G21_9_1_11 + 9.64285714285706*G21_9_1_12 - 216.964285714285*G21_9_1_13 + 21.6964285714288*G21_9_1_14 + 8.75202688099819e-14*G21_9_1_15 + 21.6964285714287*G21_9_1_16 + 21.6964285714287*G21_9_1_17 - 3.81763631124299e-13*G21_9_1_18 - 43.3928571428573*G21_9_1_19 - 2.41071428571427*G24_0_1_0 + 1.8080357142857*G24_0_2_1 - 7.43303571428569*G24_0_3_0 - 7.43303571428569*G24_0_3_1 + 2.81249999999998*G24_0_4_0 - 1.40624999999997*G24_0_4_1 + 0.20089285714286*G24_0_5_0 + 1.20535714285712*G24_0_5_1 - 2.81249999999998*G24_0_6_0 - 3.01339285714286*G24_0_6_1 - 1.20535714285712*G24_0_7_0 - 2.20982142857138*G24_0_7_1 + 3.6160714285714*G24_0_8_0 + 7.43303571428564*G24_0_8_1 + 7.23214285714283*G24_0_9_0 + 3.61607142857143*G24_0_9_1 + 2.34374999999996*G24_1_0_0 + 2.34374999999999*G24_1_0_1 - 13.392857142857*G24_1_1_0 + 2.82980555834123e-14*G24_1_1_1 - 0.334821428571445*G24_1_2_1 - 4.01785714285712*G24_1_3_0 - 24.1071428571428*G24_1_3_1 + 5.0223214285714*G24_1_4_0 + 12.0535714285714*G24_1_4_1 - 2.00892857142855*G24_1_5_0 - 1.00446428571435*G24_1_5_1 - 5.0223214285714*G24_1_6_0 - 1.00446428571425*G24_1_6_1 - 11.049107142857*G24_1_7_0 - 12.0535714285713*G24_1_7_1 + 22.0982142857141*G24_1_8_0 + 24.1071428571426*G24_1_8_1 + 6.02678571428567*G24_1_9_0 + 1.77496906061947e-14*G24_1_9_1 - 1.40625000000001*G24_2_0_0 - 1.40624999999999*G24_2_0_1 - 2.61160714285713*G24_2_1_0 + 1.35391918221664e-14*G24_2_1_1 + 6.02678571428567*G24_2_2_1 - 6.0267857142857*G24_2_3_0 - 7.63392857142858*G24_2_3_1 + 12.0535714285714*G24_2_4_0 + 5.02232142857141*G24_2_4_1 + 6.02678571428568*G24_2_5_0 + 6.42857142857136*G24_2_5_1 - 12.0535714285714*G24_2_6_0 - 11.0491071428571*G24_2_6_1 + 0.200892857142874*G24_2_7_0 - 0.200892857142836*G24_2_7_1 + 3.81696428571426*G24_2_8_0 + 7.63392857142854*G24_2_8_1 + 2.54241072639161e-14*G24_2_9_0 - 4.82142857142853*G24_2_9_1 + 14.8660714285712*G24_3_0_0 + 14.8660714285714*G24_3_0_1 - 40.1785714285712*G24_3_1_0 + 3.21428571428563*G24_3_2_1 - 108.482142857143*G24_3_3_0 - 108.482142857143*G24_3_3_1 - 10.8482142857142*G24_3_4_0 - 54.2410714285708*G24_3_4_1 - 21.6964285714285*G24_3_5_0 - 14.4642857142859*G24_3_5_1 + 10.8482142857142*G24_3_6_0 - 3.61607142857182*G24_3_6_1 - 47.008928571428*G24_3_7_0 - 54.2410714285705*G24_3_7_1 + 72.321428571428*G24_3_8_0 + 108.482142857142*G24_3_8_1 + 130.178571428571*G24_3_9_0 + 108.482142857143*G24_3_9_1 - 1.40624999999998*G24_4_0_0 - 1.40625000000003*G24_4_0_1 + 14.0624999999999*G24_4_1_0 + 2.18513356053351e-14*G24_4_1_1 + 14.0624999999999*G24_4_2_1 + 5.42410714285717*G24_4_3_0 + 27.1205357142856*G24_4_3_1 + 27.1205357142856*G24_4_4_0 + 5.42410714285702*G24_4_4_1 + 5.42410714285713*G24_4_5_0 + 1.80803571428579*G24_4_5_1 - 27.1205357142856*G24_4_6_0 - 14.4642857142855*G24_4_6_1 + 1.80803571428563*G24_4_7_0 + 5.42410714285694*G24_4_7_1 - 14.4642857142856*G24_4_8_0 - 27.1205357142854*G24_4_8_1 - 10.8482142857143*G24_4_9_0 - 10.8482142857144*G24_4_9_1 - 2.20982142857141*G24_5_0_0 - 2.20982142857143*G24_5_0_1 + 2.20982142857142*G24_5_1_0 - 6.83035714285709*G24_5_2_1 + 10.8482142857142*G24_5_3_0 + 7.23214285714286*G24_5_3_1 - 10.8482142857142*G24_5_4_0 + 1.80803571428566*G24_5_4_1 - 10.8482142857142*G24_5_5_0 - 3.61607142857137*G24_5_5_1 + 10.8482142857142*G24_5_6_0 + 12.6562499999999*G24_5_6_1 + 5.42410714285712*G24_5_7_0 - 1.80803571428574*G24_5_7_1 - 5.42410714285712*G24_5_8_0 - 7.23214285714279*G24_5_8_1 - 2.65898414397725e-14*G24_5_9_0 - 4.59805804542412e-14*G24_5_9_1 + 2.61160714285711*G24_6_0_0 + 2.61160714285709*G24_6_0_1 + 2.8125*G24_6_1_0 + 4.72602164768079e-14*G24_6_1_1 + 10.0446428571428*G24_6_2_1 - 5.42410714285707*G24_6_3_0 + 1.80803571428569*G24_6_3_1 + 27.1205357142856*G24_6_4_0 + 12.6562499999999*G24_6_4_1 - 5.42410714285708*G24_6_5_0 - 9.04017857142849*G24_6_5_1 - 27.1205357142856*G24_6_6_0 - 3.61607142857129*G24_6_6_1 - 5.4241071428571*G24_6_7_0 - 1.80803571428576*G24_6_7_1 - 1.11742212705046e-14*G24_6_8_0 - 1.80803571428565*G24_6_8_1 + 10.8482142857141*G24_6_9_0 - 10.8482142857143*G24_6_9_1 - 2.81249999999996*G24_7_0_0 - 2.81250000000001*G24_7_0_1 + 10.0446428571428*G24_7_1_0 - 2.61160714285711*G24_7_2_1 + 23.5044642857143*G24_7_3_0 + 27.1205357142857*G24_7_3_1 - 3.61607142857142*G24_7_4_0 + 5.42410714285702*G24_7_4_1 - 1.80803571428569*G24_7_5_0 + 8.21014263518993e-14*G24_7_5_1 + 3.61607142857141*G24_7_6_0 + 5.42410714285719*G24_7_6_1 + 7.23214285714277*G24_7_7_0 + 5.42410714285699*G24_7_7_1 - 14.4642857142856*G24_7_8_0 - 27.1205357142855*G24_7_8_1 - 21.6964285714286*G24_7_9_0 - 10.8482142857144*G24_7_9_1 + 0.200892857142792*G24_8_0_0 + 0.200892857142905*G24_8_0_1 - 20.0892857142856*G24_8_1_0 - 0.200892857142923*G24_8_2_1 - 36.1607142857142*G24_8_3_0 - 54.2410714285713*G24_8_3_1 + 1.8080357142857*G24_8_4_0 + 2.1231757671436e-13*G24_8_4_1 + 3.61607142857141*G24_8_5_0 + 5.42410714285693*G24_8_5_1 - 1.80803571428569*G24_8_6_0 - 5.42410714285723*G24_8_6_1 + 1.80803571428585*G24_8_7_0 + 3.19070833122714e-13*G24_8_7_1 + 18.080357142857*G24_8_8_0 + 54.2410714285709*G24_8_8_1 + 32.5446428571428*G24_8_9_0 + 1.92656654518508e-13*G24_8_9_1 + 1.20535714285704*G24_9_0_0 + 1.20535714285713*G24_9_0_1 - 12.0535714285713*G24_9_1_0 + 4.72167791057824e-14*G24_9_1_1 + 9.64285714285705*G24_9_2_1 - 65.0892857142856*G24_9_3_0 - 54.2410714285714*G24_9_3_1 + 21.6964285714285*G24_9_4_0 - 10.8482142857141*G24_9_4_1 - 21.6964285714284*G24_9_5_0 - 10.8482142857143*G24_9_5_1 - 21.6964285714285*G24_9_6_0 - 1.20445320384022e-13*G24_9_6_1 + 2.06115940287743e-13*G24_9_7_0 - 10.8482142857139*G24_9_7_1 + 10.8482142857141*G24_9_8_0 + 54.2410714285711*G24_9_8_1 + 86.785714285714*G24_9_9_0 + 21.6964285714286*G24_9_9_1 + 2.34374999999996*G25_0_0_11 - 1.40625000000001*G25_0_0_12 + 14.8660714285712*G25_0_0_13 - 1.40624999999998*G25_0_0_14 - 2.20982142857141*G25_0_0_15 + 2.61160714285711*G25_0_0_16 - 2.81249999999996*G25_0_0_17 + 0.200892857142792*G25_0_0_18 + 1.20535714285704*G25_0_0_19 + 2.34374999999999*G25_0_1_11 - 1.40624999999999*G25_0_1_12 + 14.8660714285714*G25_0_1_13 - 1.40625000000003*G25_0_1_14 - 2.20982142857143*G25_0_1_15 + 2.61160714285709*G25_0_1_16 - 2.81250000000001*G25_0_1_17 + 0.200892857142905*G25_0_1_18 + 1.20535714285713*G25_0_1_19 - 2.41071428571427*G25_1_0_10 - 13.392857142857*G25_1_0_11 - 2.61160714285713*G25_1_0_12 - 40.1785714285712*G25_1_0_13 + 14.0624999999999*G25_1_0_14 + 2.20982142857142*G25_1_0_15 + 2.8125*G25_1_0_16 + 10.0446428571428*G25_1_0_17 - 20.0892857142856*G25_1_0_18 - 12.0535714285713*G25_1_0_19 + 2.82980555834123e-14*G25_1_1_11 + 1.35391918221664e-14*G25_1_1_12 + 2.18513356053351e-14*G25_1_1_14 + 4.72602164768079e-14*G25_1_1_16 + 4.72167791057824e-14*G25_1_1_19 + 1.8080357142857*G25_2_1_10 - 0.334821428571445*G25_2_1_11 + 6.02678571428567*G25_2_1_12 + 3.21428571428563*G25_2_1_13 + 14.0625*G25_2_1_14 - 6.83035714285709*G25_2_1_15 + 10.0446428571428*G25_2_1_16 - 2.61160714285711*G25_2_1_17 - 0.200892857142922*G25_2_1_18 + 9.64285714285705*G25_2_1_19 - 7.43303571428569*G25_3_0_10 - 4.01785714285712*G25_3_0_11 - 6.0267857142857*G25_3_0_12 - 108.482142857143*G25_3_0_13 + 5.42410714285717*G25_3_0_14 + 10.8482142857142*G25_3_0_15 - 5.42410714285706*G25_3_0_16 + 23.5044642857143*G25_3_0_17 - 36.1607142857142*G25_3_0_18 - 65.0892857142856*G25_3_0_19 - 7.43303571428569*G25_3_1_10 - 24.1071428571428*G25_3_1_11 - 7.63392857142858*G25_3_1_12 - 108.482142857143*G25_3_1_13 + 27.1205357142856*G25_3_1_14 + 7.23214285714286*G25_3_1_15 + 1.80803571428569*G25_3_1_16 + 27.1205357142857*G25_3_1_17 - 54.2410714285713*G25_3_1_18 - 54.2410714285714*G25_3_1_19 + 2.81249999999998*G25_4_0_10 + 5.0223214285714*G25_4_0_11 + 12.0535714285714*G25_4_0_12 - 10.8482142857142*G25_4_0_13 + 27.1205357142856*G25_4_0_14 - 10.8482142857142*G25_4_0_15 + 27.1205357142856*G25_4_0_16 - 3.61607142857142*G25_4_0_17 + 1.8080357142857*G25_4_0_18 + 21.6964285714285*G25_4_0_19 - 1.40624999999997*G25_4_1_10 + 12.0535714285714*G25_4_1_11 + 5.02232142857141*G25_4_1_12 - 54.2410714285708*G25_4_1_13 + 5.42410714285702*G25_4_1_14 + 1.80803571428566*G25_4_1_15 + 12.6562499999999*G25_4_1_16 + 5.42410714285702*G25_4_1_17 + 2.1276166592421e-13*G25_4_1_18 - 10.8482142857141*G25_4_1_19 + 0.20089285714286*G25_5_0_10 - 2.00892857142855*G25_5_0_11 + 6.02678571428568*G25_5_0_12 - 21.6964285714285*G25_5_0_13 + 5.42410714285713*G25_5_0_14 - 10.8482142857142*G25_5_0_15 - 5.42410714285708*G25_5_0_16 - 1.80803571428569*G25_5_0_17 + 3.61607142857141*G25_5_0_18 - 21.6964285714284*G25_5_0_19 + 1.20535714285712*G25_5_1_10 - 1.00446428571435*G25_5_1_11 + 6.42857142857136*G25_5_1_12 - 14.4642857142859*G25_5_1_13 + 1.80803571428579*G25_5_1_14 - 3.61607142857137*G25_5_1_15 - 9.04017857142849*G25_5_1_16 + 8.18728765339394e-14*G25_5_1_17 + 5.42410714285693*G25_5_1_18 - 10.8482142857143*G25_5_1_19 - 2.81249999999998*G25_6_0_10 - 5.0223214285714*G25_6_0_11 - 12.0535714285714*G25_6_0_12 + 10.8482142857142*G25_6_0_13 - 27.1205357142856*G25_6_0_14 + 10.8482142857142*G25_6_0_15 - 27.1205357142856*G25_6_0_16 + 3.61607142857141*G25_6_0_17 - 1.80803571428569*G25_6_0_18 - 21.6964285714285*G25_6_0_19 - 3.01339285714286*G25_6_1_10 - 1.00446428571425*G25_6_1_11 - 11.0491071428571*G25_6_1_12 - 3.61607142857182*G25_6_1_13 - 14.4642857142855*G25_6_1_14 + 12.6562499999999*G25_6_1_15 - 3.61607142857129*G25_6_1_16 + 5.42410714285719*G25_6_1_17 - 5.42410714285723*G25_6_1_18 - 1.20001231174172e-13*G25_6_1_19 - 1.20535714285712*G25_7_0_10 - 11.049107142857*G25_7_0_11 + 0.200892857142874*G25_7_0_12 - 47.008928571428*G25_7_0_13 + 1.80803571428563*G25_7_0_14 + 5.42410714285712*G25_7_0_15 - 5.4241071428571*G25_7_0_16 + 7.23214285714277*G25_7_0_17 + 1.80803571428585*G25_7_0_18 + 2.06990240919636e-13*G25_7_0_19 - 2.20982142857138*G25_7_1_10 - 12.0535714285713*G25_7_1_11 - 0.200892857142836*G25_7_1_12 - 54.2410714285705*G25_7_1_13 + 5.42410714285694*G25_7_1_14 - 1.80803571428574*G25_7_1_15 - 1.80803571428576*G25_7_1_16 + 5.42410714285699*G25_7_1_17 + 3.18182221022145e-13*G25_7_1_18 - 10.8482142857139*G25_7_1_19 + 3.61607142857139*G25_8_0_10 + 22.0982142857141*G25_8_0_11 + 3.81696428571426*G25_8_0_12 + 72.321428571428*G25_8_0_13 - 14.4642857142856*G25_8_0_14 - 5.42410714285712*G25_8_0_15 - 1.10892198201817e-14*G25_8_0_16 - 14.4642857142856*G25_8_0_17 + 18.080357142857*G25_8_0_18 + 10.8482142857141*G25_8_0_19 + 7.43303571428564*G25_8_1_10 + 24.1071428571426*G25_8_1_11 + 7.63392857142854*G25_8_1_12 + 108.482142857142*G25_8_1_13 - 27.1205357142854*G25_8_1_14 - 7.23214285714279*G25_8_1_15 - 1.80803571428565*G25_8_1_16 - 27.1205357142855*G25_8_1_17 + 54.2410714285709*G25_8_1_18 + 54.241071428571*G25_8_1_19 + 7.23214285714283*G25_9_0_10 + 6.02678571428567*G25_9_0_11 + 2.40918396343659e-14*G25_9_0_12 + 130.178571428571*G25_9_0_13 - 10.8482142857143*G25_9_0_14 - 2.34812169708221e-14*G25_9_0_15 + 10.8482142857141*G25_9_0_16 - 21.6964285714286*G25_9_0_17 + 32.5446428571428*G25_9_0_18 + 86.785714285714*G25_9_0_19 + 3.61607142857143*G25_9_1_10 + 1.77358128183869e-14*G25_9_1_11 - 4.82142857142853*G25_9_1_12 + 108.482142857143*G25_9_1_13 - 10.8482142857144*G25_9_1_14 - 4.37601344049909e-14*G25_9_1_15 - 10.8482142857143*G25_9_1_16 - 10.8482142857144*G25_9_1_17 + 1.90881815562149e-13*G25_9_1_18 + 21.6964285714286*G25_9_1_19;
    A[4] = -0.0750000000000014*G4_0_0_0 - 0.0750000000000018*G4_0_0_1 + 0.0749999999999997*G4_0_1_0 + 1.42499999999999*G4_0_2_1 - 0.674999999999998*G4_0_3_0 - 0.337500000000006*G4_0_3_1 + 3.37499999999999*G4_0_4_0 + 1.68749999999999*G4_0_4_1 + 0.674999999999999*G4_0_5_0 + 0.337499999999997*G4_0_5_1 - 3.37499999999999*G4_0_6_0 - 1.68749999999998*G4_0_6_1 + 0.337499999999995*G4_0_7_1 + 0.337500000000006*G4_0_8_1 - 2.025*G4_0_9_1 - 0.0749999999999955*G4_1_0_0 - 0.0749999999999958*G4_1_0_1 - 0.6*G4_1_1_0 + 0.0749999999999967*G4_1_2_1 + 1.68749999999998*G4_1_3_0 - 0.675000000000011*G4_1_3_1 + 1.68749999999999*G4_1_4_0 + 3.37499999999998*G4_1_4_1 + 0.337500000000006*G4_1_5_0 - 1.68749999999999*G4_1_6_0 + 1.67227343084164e-14*G4_1_6_1 + 0.337499999999997*G4_1_7_0 + 0.675000000000003*G4_1_7_1 + 0.337499999999998*G4_1_8_0 + 0.675000000000012*G4_1_8_1 - 2.02499999999999*G4_1_9_0 - 4.05*G4_1_9_1 - 0.0750000000000014*G5_0_0_0 - 0.0750000000000018*G5_0_0_1 + 0.0749999999999997*G5_0_1_0 + 1.42499999999999*G5_0_2_1 - 0.674999999999998*G5_0_3_0 - 0.337500000000006*G5_0_3_1 + 3.37499999999999*G5_0_4_0 + 1.68749999999999*G5_0_4_1 + 0.674999999999999*G5_0_5_0 + 0.337499999999997*G5_0_5_1 - 3.37499999999999*G5_0_6_0 - 1.68749999999998*G5_0_6_1 + 0.337499999999995*G5_0_7_1 + 0.337500000000006*G5_0_8_1 - 2.025*G5_0_9_1 - 0.0749999999999955*G5_1_0_0 - 0.0749999999999958*G5_1_0_1 - 0.6*G5_1_1_0 + 0.0749999999999967*G5_1_2_1 + 1.68749999999998*G5_1_3_0 - 0.675000000000011*G5_1_3_1 + 1.68749999999999*G5_1_4_0 + 3.37499999999998*G5_1_4_1 + 0.337500000000006*G5_1_5_0 - 1.68749999999999*G5_1_6_0 + 1.67227343084164e-14*G5_1_6_1 + 0.337499999999997*G5_1_7_0 + 0.675000000000003*G5_1_7_1 + 0.337499999999998*G5_1_8_0 + 0.675000000000012*G5_1_8_1 - 2.02499999999999*G5_1_9_0 - 4.05*G5_1_9_1 + 0.0749999999999997*G6_0_20 + 0.0749999999999997*G6_0_21 - 0.299999999999999*G6_0_22 - 0.299999999999999*G6_0_23 - 0.299999999999999*G6_0_24 + 0.0750000000000002*G6_1_20 + 0.15*G6_1_21 - 0.0750000000000002*G6_1_22 - 0.599999999999995*G6_1_23 - 0.299999999999996*G6_1_24 + 0.0375000000000007*G7_0_0_0 + 0.0375000000000009*G7_0_0_1 - 0.0374999999999999*G7_0_1_0 - 0.712499999999997*G7_0_2_1 + 0.337499999999999*G7_0_3_0 + 0.168750000000003*G7_0_3_1 - 1.68749999999999*G7_0_4_0 - 0.843749999999996*G7_0_4_1 - 0.337499999999999*G7_0_5_0 - 0.168749999999998*G7_0_5_1 + 1.68749999999999*G7_0_6_0 + 0.84374999999999*G7_0_6_1 - 0.168749999999997*G7_0_7_1 - 0.168750000000003*G7_0_8_1 + 1.0125*G7_0_9_1 + 0.0374999999999977*G7_1_0_0 + 0.0374999999999979*G7_1_0_1 + 0.3*G7_1_1_0 - 0.0374999999999983*G7_1_2_1 - 0.843749999999991*G7_1_3_0 + 0.337500000000006*G7_1_3_1 - 0.843749999999996*G7_1_4_0 - 1.68749999999999*G7_1_4_1 - 0.168750000000003*G7_1_5_0 + 0.843749999999996*G7_1_6_0 - 0.168749999999998*G7_1_7_0 - 0.337500000000002*G7_1_7_1 - 0.168749999999999*G7_1_8_0 - 0.337500000000006*G7_1_8_1 + 1.01249999999999*G7_1_9_0 + 2.025*G7_1_9_1 + 0.0375000000000007*G8_0_0_0 + 0.0375000000000009*G8_0_0_1 - 0.0374999999999999*G8_0_1_0 - 0.712499999999997*G8_0_2_1 + 0.337499999999999*G8_0_3_0 + 0.168750000000003*G8_0_3_1 - 1.68749999999999*G8_0_4_0 - 0.843749999999996*G8_0_4_1 - 0.337499999999999*G8_0_5_0 - 0.168749999999998*G8_0_5_1 + 1.68749999999999*G8_0_6_0 + 0.84374999999999*G8_0_6_1 - 0.168749999999997*G8_0_7_1 - 0.168750000000003*G8_0_8_1 + 1.0125*G8_0_9_1 + 0.0374999999999977*G8_1_0_0 + 0.0374999999999979*G8_1_0_1 + 0.3*G8_1_1_0 - 0.0374999999999983*G8_1_2_1 - 0.843749999999991*G8_1_3_0 + 0.337500000000006*G8_1_3_1 - 0.843749999999996*G8_1_4_0 - 1.68749999999999*G8_1_4_1 - 0.168750000000003*G8_1_5_0 + 0.843749999999996*G8_1_6_0 - 0.168749999999998*G8_1_7_0 - 0.337500000000002*G8_1_7_1 - 0.168749999999999*G8_1_8_0 - 0.337500000000006*G8_1_8_1 + 1.01249999999999*G8_1_9_0 + 2.025*G8_1_9_1 - 0.0374999999999998*G9_0_20 - 0.0374999999999998*G9_0_21 + 0.149999999999999*G9_0_22 + 0.149999999999999*G9_0_23 + 0.149999999999999*G9_0_24 - 0.0375000000000001*G9_1_20 - 0.0749999999999998*G9_1_21 + 0.0375000000000001*G9_1_22 + 0.299999999999997*G9_1_23 + 0.149999999999998*G9_1_24 - 0.0750000000000014*G10_0_0_0 - 0.0750000000000018*G10_0_0_1 + 0.0749999999999997*G10_0_1_0 + 1.42499999999999*G10_0_2_1 - 0.674999999999998*G10_0_3_0 - 0.337500000000006*G10_0_3_1 + 3.37499999999999*G10_0_4_0 + 1.68749999999999*G10_0_4_1 + 0.674999999999999*G10_0_5_0 + 0.337499999999997*G10_0_5_1 - 3.37499999999999*G10_0_6_0 - 1.68749999999998*G10_0_6_1 + 0.337499999999995*G10_0_7_1 + 0.337500000000006*G10_0_8_1 - 2.025*G10_0_9_1 - 0.0749999999999955*G10_1_0_0 - 0.0749999999999958*G10_1_0_1 - 0.6*G10_1_1_0 + 0.0749999999999967*G10_1_2_1 + 1.68749999999998*G10_1_3_0 - 0.675000000000011*G10_1_3_1 + 1.68749999999999*G10_1_4_0 + 3.37499999999998*G10_1_4_1 + 0.337500000000006*G10_1_5_0 - 1.68749999999999*G10_1_6_0 + 1.67227343084164e-14*G10_1_6_1 + 0.337499999999997*G10_1_7_0 + 0.675000000000003*G10_1_7_1 + 0.337499999999998*G10_1_8_0 + 0.675000000000012*G10_1_8_1 - 2.02499999999999*G10_1_9_0 - 4.05*G10_1_9_1 - 0.0750000000000014*G11_0_10_0 - 0.0750000000000018*G11_0_10_1 + 0.0749999999999997*G11_0_11_0 + 1.42499999999999*G11_0_12_1 - 0.674999999999998*G11_0_13_0 - 0.337500000000006*G11_0_13_1 + 3.37499999999999*G11_0_14_0 + 1.68749999999999*G11_0_14_1 + 0.674999999999999*G11_0_15_0 + 0.337499999999997*G11_0_15_1 - 3.37499999999999*G11_0_16_0 - 1.68749999999998*G11_0_16_1 + 0.337499999999995*G11_0_17_1 + 0.337500000000006*G11_0_18_1 - 2.025*G11_0_19_1 - 0.0749999999999955*G11_1_10_0 - 0.0749999999999958*G11_1_10_1 - 0.6*G11_1_11_0 + 0.0749999999999967*G11_1_12_1 + 1.68749999999998*G11_1_13_0 - 0.675000000000011*G11_1_13_1 + 1.68749999999999*G11_1_14_0 + 3.37499999999998*G11_1_14_1 + 0.337500000000006*G11_1_15_0 - 1.68749999999999*G11_1_16_0 + 1.67227343084164e-14*G11_1_16_1 + 0.337499999999997*G11_1_17_0 + 0.675000000000003*G11_1_17_1 + 0.337499999999998*G11_1_18_0 + 0.675000000000012*G11_1_18_1 - 2.02499999999999*G11_1_19_0 - 4.05*G11_1_19_1 + 0.0375000000000007*G12_0_0_0 + 0.0375000000000009*G12_0_0_1 - 0.0374999999999999*G12_0_1_0 - 0.712499999999997*G12_0_2_1 + 0.337499999999999*G12_0_3_0 + 0.168750000000003*G12_0_3_1 - 1.68749999999999*G12_0_4_0 - 0.843749999999996*G12_0_4_1 - 0.337499999999999*G12_0_5_0 - 0.168749999999998*G12_0_5_1 + 1.68749999999999*G12_0_6_0 + 0.84374999999999*G12_0_6_1 - 0.168749999999997*G12_0_7_1 - 0.168750000000003*G12_0_8_1 + 1.0125*G12_0_9_1 + 0.0374999999999977*G12_1_0_0 + 0.0374999999999979*G12_1_0_1 + 0.3*G12_1_1_0 - 0.0374999999999983*G12_1_2_1 - 0.843749999999991*G12_1_3_0 + 0.337500000000006*G12_1_3_1 - 0.843749999999996*G12_1_4_0 - 1.68749999999999*G12_1_4_1 - 0.168750000000003*G12_1_5_0 + 0.843749999999996*G12_1_6_0 - 0.168749999999998*G12_1_7_0 - 0.337500000000002*G12_1_7_1 - 0.168749999999999*G12_1_8_0 - 0.337500000000006*G12_1_8_1 + 1.01249999999999*G12_1_9_0 + 2.025*G12_1_9_1 + 0.0375000000000007*G13_0_10_0 + 0.0375000000000009*G13_0_10_1 - 0.0374999999999999*G13_0_11_0 - 0.712499999999997*G13_0_12_1 + 0.337499999999999*G13_0_13_0 + 0.168750000000003*G13_0_13_1 - 1.68749999999999*G13_0_14_0 - 0.843749999999996*G13_0_14_1 - 0.337499999999999*G13_0_15_0 - 0.168749999999998*G13_0_15_1 + 1.68749999999999*G13_0_16_0 + 0.84374999999999*G13_0_16_1 - 0.168749999999997*G13_0_17_1 - 0.168750000000003*G13_0_18_1 + 1.0125*G13_0_19_1 + 0.0374999999999977*G13_1_10_0 + 0.0374999999999979*G13_1_10_1 + 0.3*G13_1_11_0 - 0.0374999999999983*G13_1_12_1 - 0.843749999999991*G13_1_13_0 + 0.337500000000006*G13_1_13_1 - 0.843749999999996*G13_1_14_0 - 1.68749999999999*G13_1_14_1 - 0.168750000000003*G13_1_15_0 + 0.843749999999996*G13_1_16_0 - 0.168749999999998*G13_1_17_0 - 0.337500000000002*G13_1_17_1 - 0.168749999999999*G13_1_18_0 - 0.337500000000006*G13_1_18_1 + 1.01249999999999*G13_1_19_0 + 2.025*G13_1_19_1 - 3.61607142857141*G20_0_1_0 + 2.62072575252402e-14*G20_0_1_1 + 4.82142857142853*G20_0_2_1 + 2.81249999999998*G20_0_3_0 - 5.62500000000001*G20_0_3_1 + 14.8660714285713*G20_0_4_0 + 14.8660714285713*G20_0_4_1 + 4.41964285714284*G20_0_5_0 + 2.41071428571424*G20_0_5_1 - 14.8660714285713*G20_0_6_0 - 7.23214285714273*G20_0_6_1 - 2.41071428571428*G20_0_7_0 - 0.401785714285736*G20_0_7_1 + 6.02678571428569*G20_0_8_0 + 5.625*G20_0_8_1 - 7.23214285714281*G20_0_9_0 - 14.4642857142856*G20_0_9_1 + 2.81249999999995*G20_1_0_0 + 2.81249999999999*G20_1_0_1 - 12.0535714285713*G20_1_1_0 + 3.74610151985569e-14*G20_1_1_1 + 5.22321428571425*G20_1_2_1 - 10.0446428571428*G20_1_3_0 - 24.1071428571428*G20_1_3_1 + 15.2678571428571*G20_1_4_0 + 12.0535714285714*G20_1_4_1 + 0.401785714285727*G20_1_5_0 - 0.401785714285777*G20_1_5_1 - 15.2678571428571*G20_1_6_0 - 7.6339285714285*G20_1_6_1 - 12.8571428571427*G20_1_7_0 - 12.0535714285713*G20_1_7_1 + 22.0982142857141*G20_1_8_0 + 24.1071428571427*G20_1_8_1 + 9.6428571428571*G20_1_9_0 + 1.97064586870965e-14*G20_1_9_1 - 4.68750000000002*G20_2_0_0 - 4.68749999999999*G20_2_0_1 + 0.669642857142854*G20_2_1_0 + 3.85629135203417e-14*G20_2_1_1 + 26.7857142857141*G20_2_2_1 - 24.1071428571427*G20_2_3_0 - 10.0446428571429*G20_2_3_1 + 48.2142857142855*G20_2_4_0 + 8.0357142857143*G20_2_4_1 + 24.1071428571428*G20_2_5_0 + 22.0982142857141*G20_2_5_1 - 48.2142857142855*G20_2_6_0 - 44.1964285714283*G20_2_6_1 + 2.0089285714286*G20_2_7_0 + 4.01785714285716*G20_2_7_1 + 2.00892857142856*G20_2_8_0 + 10.0446428571428*G20_2_8_1 - 2.8421709430404e-14*G20_2_9_0 - 12.0535714285714*G20_2_9_1 + 2.81249999999995*G20_3_0_0 + 2.81250000000007*G20_3_0_1 - 28.1249999999998*G20_3_1_0 - 4.37026712106702e-14*G20_3_1_1 - 28.1249999999999*G20_3_2_1 - 10.8482142857143*G20_3_3_0 - 54.2410714285712*G20_3_3_1 - 54.2410714285711*G20_3_4_0 - 10.848214285714*G20_3_4_1 - 10.8482142857143*G20_3_5_0 - 3.61607142857158*G20_3_5_1 + 54.2410714285712*G20_3_6_0 + 28.928571428571*G20_3_6_1 - 3.61607142857127*G20_3_7_0 - 10.8482142857139*G20_3_7_1 + 28.9285714285712*G20_3_8_0 + 54.2410714285708*G20_3_8_1 + 21.6964285714286*G20_3_9_0 + 21.6964285714288*G20_3_9_1 - 29.7321428571427*G20_4_0_0 - 29.7321428571429*G20_4_0_1 - 6.42857142857147*G20_4_1_0 + 2.95750098354277e-13*G20_4_1_1 + 80.3571428571424*G20_4_2_1 + 108.482142857142*G20_4_3_0 + 21.6964285714282*G20_4_3_1 + 216.964285714285*G20_4_4_0 + 216.964285714284*G20_4_4_1 + 108.482142857142*G20_4_5_0 + 94.0178571428566*G20_4_5_1 - 216.964285714285*G20_4_6_0 - 144.642857142855*G20_4_6_1 + 28.9285714285711*G20_4_7_0 + 43.3928571428562*G20_4_7_1 + 7.23214285714306*G20_4_8_0 - 21.6964285714276*G20_4_8_1 - 216.964285714285*G20_4_9_0 - 260.357142857142*G20_4_9_1 + 5.62500000000002*G20_5_0_0 + 5.62500000000005*G20_5_0_1 + 5.22321428571426*G20_5_1_0 - 9.04842325156415e-14*G20_5_1_1 - 20.0892857142856*G20_5_2_1 - 10.8482142857142*G20_5_3_0 + 7.23214285714292*G20_5_3_1 - 54.2410714285712*G20_5_4_0 - 47.0089285714283*G20_5_4_1 - 10.8482142857142*G20_5_5_0 - 14.4642857142857*G20_5_5_1 + 54.2410714285712*G20_5_6_0 + 28.928571428571*G20_5_6_1 - 4.46240266960274e-14*G20_5_7_0 + 3.61607142857155*G20_5_7_1 - 10.8482142857142*G20_5_8_0 - 7.23214285714301*G20_5_8_1 + 21.6964285714285*G20_5_9_0 + 43.3928571428571*G20_5_9_1 - 0.401785714285763*G20_6_0_0 - 0.401785714285836*G20_6_0_1 + 0.40178571428571*G20_6_1_0 + 1.85004665469257e-13*G20_6_1_1 + 40.1785714285712*G20_6_2_1 - 2.35089725464377e-14*G20_6_3_0 - 3.61607142857161*G20_6_3_1 + 108.482142857142*G20_6_4_0 + 72.321428571428*G20_6_4_1 + 3.82471831983366e-14*G20_6_5_0 - 3.61607142857137*G20_6_5_1 - 108.482142857142*G20_6_6_0 - 36.1607142857136*G20_6_6_1 - 10.8482142857142*G20_6_7_0 - 7.23214285714311*G20_6_7_1 + 10.8482142857143*G20_6_8_0 + 3.61607142857178*G20_6_8_1 + 1.16850973341798e-14*G20_6_9_0 - 65.0892857142857*G20_6_9_1 + 4.41964285714288*G20_7_0_0 + 4.41964285714288*G20_7_0_1 + 13.6607142857142*G20_7_1_0 - 4.87310832596425e-14*G20_7_1_1 - 4.41964285714285*G20_7_2_1 - 3.61607142857137*G20_7_3_0 + 21.6964285714285*G20_7_3_1 - 14.4642857142857*G20_7_4_0 - 21.6964285714284*G20_7_4_1 + 3.61607142857142*G20_7_5_0 - 10.8482142857142*G20_7_5_1 + 14.4642857142857*G20_7_6_0 + 10.8482142857141*G20_7_6_1 + 7.23214285714272*G20_7_7_0 + 21.6964285714285*G20_7_7_1 - 25.3124999999998*G20_7_8_0 - 21.6964285714285*G20_7_8_1 - 4.97969721013902e-14*G20_7_9_0 + 4.21902096592319e-14*G20_7_9_1 - 5.22321428571432*G20_8_0_0 - 5.2232142857142*G20_8_0_1 - 20.0892857142856*G20_8_1_0 - 5.62500000000006*G20_8_2_1 - 25.3125*G20_8_3_0 - 54.2410714285713*G20_8_3_1 - 3.61607142857146*G20_8_4_0 + 10.8482142857144*G20_8_4_1 + 3.61607142857138*G20_8_5_0 + 10.848214285714*G20_8_5_1 + 3.61607142857147*G20_8_6_0 - 6.51041720534096e-14*G20_8_6_1 + 18.0803571428572*G20_8_7_0 + 10.8482142857145*G20_8_7_1 + 7.2321428571427*G20_8_8_0 + 54.2410714285709*G20_8_8_1 + 21.6964285714286*G20_8_9_0 - 21.6964285714282*G20_8_9_1 - 2.41071428571435*G20_9_0_0 - 2.41071428571433*G20_9_0_1 - 19.2857142857142*G20_9_1_0 + 1.96889461695947e-13*G20_9_1_1 + 24.1071428571426*G20_9_2_1 + 21.6964285714284*G20_9_3_0 - 43.3928571428574*G20_9_3_1 + 108.482142857142*G20_9_4_0 + 130.178571428571*G20_9_4_1 + 21.6964285714286*G20_9_5_0 - 1.54903867510825e-13*G20_9_5_1 - 108.482142857142*G20_9_6_0 - 21.6964285714279*G20_9_6_1 + 21.6964285714285*G20_9_7_0 + 43.3928571428569*G20_9_7_1 + 4.62772181686333e-14*G20_9_8_0 + 43.3928571428572*G20_9_8_1 - 43.392857142857*G20_9_9_0 - 173.571428571428*G20_9_9_1 + 2.81249999999995*G21_0_0_11 - 4.68750000000002*G21_0_0_12 + 2.81249999999995*G21_0_0_13 - 29.7321428571427*G21_0_0_14 + 5.62500000000002*G21_0_0_15 - 0.401785714285763*G21_0_0_16 + 4.41964285714288*G21_0_0_17 - 5.22321428571432*G21_0_0_18 - 2.41071428571434*G21_0_0_19 + 2.81249999999999*G21_0_1_11 - 4.68749999999999*G21_0_1_12 + 2.81250000000007*G21_0_1_13 - 29.7321428571429*G21_0_1_14 + 5.62500000000005*G21_0_1_15 - 0.401785714285836*G21_0_1_16 + 4.41964285714288*G21_0_1_17 - 5.2232142857142*G21_0_1_18 - 2.41071428571433*G21_0_1_19 - 3.61607142857141*G21_1_0_10 - 12.0535714285713*G21_1_0_11 + 0.669642857142853*G21_1_0_12 - 28.1249999999998*G21_1_0_13 - 6.42857142857147*G21_1_0_14 + 5.22321428571427*G21_1_0_15 + 0.401785714285711*G21_1_0_16 + 13.6607142857142*G21_1_0_17 - 20.0892857142856*G21_1_0_18 - 19.2857142857142*G21_1_0_19 + 2.62072575252402e-14*G21_1_1_10 + 3.74610151985569e-14*G21_1_1_11 + 3.85629135203417e-14*G21_1_1_12 - 4.37026712106702e-14*G21_1_1_13 + 2.95750098354277e-13*G21_1_1_14 - 9.04842325156415e-14*G21_1_1_15 + 1.85004665469257e-13*G21_1_1_16 - 4.87310832596425e-14*G21_1_1_17 + 1.96889461695947e-13*G21_1_1_19 + 4.82142857142853*G21_2_1_10 + 5.22321428571425*G21_2_1_11 + 26.7857142857141*G21_2_1_12 - 28.1249999999999*G21_2_1_13 + 80.3571428571424*G21_2_1_14 - 20.0892857142856*G21_2_1_15 + 40.1785714285712*G21_2_1_16 - 4.41964285714285*G21_2_1_17 - 5.62500000000006*G21_2_1_18 + 24.1071428571426*G21_2_1_19 + 2.81249999999998*G21_3_0_10 - 10.0446428571428*G21_3_0_11 - 24.1071428571427*G21_3_0_12 - 10.8482142857143*G21_3_0_13 + 108.482142857142*G21_3_0_14 - 10.8482142857142*G21_3_0_15 - 2.39253061806721e-14*G21_3_0_16 - 3.61607142857137*G21_3_0_17 - 25.3125*G21_3_0_18 + 21.6964285714284*G21_3_0_19 - 5.62500000000001*G21_3_1_10 - 24.1071428571428*G21_3_1_11 - 10.0446428571429*G21_3_1_12 - 54.2410714285712*G21_3_1_13 + 21.6964285714282*G21_3_1_14 + 7.23214285714292*G21_3_1_15 - 3.61607142857161*G21_3_1_16 + 21.6964285714285*G21_3_1_17 - 54.2410714285713*G21_3_1_18 - 43.3928571428574*G21_3_1_19 + 14.8660714285713*G21_4_0_10 + 15.2678571428571*G21_4_0_11 + 48.2142857142855*G21_4_0_12 - 54.2410714285711*G21_4_0_13 + 216.964285714285*G21_4_0_14 - 54.2410714285712*G21_4_0_15 + 108.482142857142*G21_4_0_16 - 14.4642857142857*G21_4_0_17 - 3.61607142857146*G21_4_0_18 + 108.482142857142*G21_4_0_19 + 14.8660714285713*G21_4_1_10 + 12.0535714285714*G21_4_1_11 + 8.0357142857143*G21_4_1_12 - 10.848214285714*G21_4_1_13 + 216.964285714284*G21_4_1_14 - 47.0089285714283*G21_4_1_15 + 72.3214285714281*G21_4_1_16 - 21.6964285714284*G21_4_1_17 + 10.8482142857144*G21_4_1_18 + 130.178571428571*G21_4_1_19 + 4.41964285714284*G21_5_0_10 + 0.401785714285727*G21_5_0_11 + 24.1071428571428*G21_5_0_12 - 10.8482142857143*G21_5_0_13 + 108.482142857142*G21_5_0_14 - 10.8482142857142*G21_5_0_15 + 3.82471831983366e-14*G21_5_0_16 + 3.61607142857142*G21_5_0_17 + 3.61607142857138*G21_5_0_18 + 21.6964285714286*G21_5_0_19 + 2.41071428571424*G21_5_1_10 - 0.401785714285777*G21_5_1_11 + 22.0982142857141*G21_5_1_12 - 3.61607142857158*G21_5_1_13 + 94.0178571428566*G21_5_1_14 - 14.4642857142857*G21_5_1_15 - 3.61607142857137*G21_5_1_16 - 10.8482142857142*G21_5_1_17 + 10.848214285714*G21_5_1_18 - 1.58900670399476e-13*G21_5_1_19 - 14.8660714285713*G21_6_0_10 - 15.2678571428571*G21_6_0_11 - 48.2142857142855*G21_6_0_12 + 54.2410714285712*G21_6_0_13 - 216.964285714285*G21_6_0_14 + 54.2410714285712*G21_6_0_15 - 108.482142857142*G21_6_0_16 + 14.4642857142857*G21_6_0_17 + 3.61607142857147*G21_6_0_18 - 108.482142857142*G21_6_0_19 - 7.23214285714274*G21_6_1_10 - 7.6339285714285*G21_6_1_11 - 44.1964285714283*G21_6_1_12 + 28.928571428571*G21_6_1_13 - 144.642857142855*G21_6_1_14 + 28.928571428571*G21_6_1_15 - 36.1607142857136*G21_6_1_16 + 10.8482142857141*G21_6_1_17 - 6.38829267263219e-14*G21_6_1_18 - 21.6964285714279*G21_6_1_19 - 2.41071428571428*G21_7_0_10 - 12.8571428571427*G21_7_0_11 + 2.0089285714286*G21_7_0_12 - 3.61607142857126*G21_7_0_13 + 28.9285714285711*G21_7_0_14 - 4.46274961429793e-14*G21_7_0_15 - 10.8482142857142*G21_7_0_16 + 7.23214285714272*G21_7_0_17 + 18.0803571428572*G21_7_0_18 + 21.6964285714285*G21_7_0_19 - 0.401785714285736*G21_7_1_10 - 12.0535714285713*G21_7_1_11 + 4.01785714285716*G21_7_1_12 - 10.8482142857139*G21_7_1_13 + 43.3928571428562*G21_7_1_14 + 3.61607142857155*G21_7_1_15 - 7.23214285714311*G21_7_1_16 + 21.6964285714285*G21_7_1_17 + 10.8482142857145*G21_7_1_18 + 43.3928571428569*G21_7_1_19 + 6.02678571428569*G21_8_0_10 + 22.0982142857141*G21_8_0_11 + 2.00892857142856*G21_8_0_12 + 28.9285714285712*G21_8_0_13 + 7.23214285714306*G21_8_0_14 - 10.8482142857142*G21_8_0_15 + 10.8482142857143*G21_8_0_16 - 25.3124999999998*G21_8_0_17 + 7.23214285714269*G21_8_0_18 + 4.53899071106711e-14*G21_8_0_19 + 5.625*G21_8_1_10 + 24.1071428571427*G21_8_1_11 + 10.0446428571428*G21_8_1_12 + 54.2410714285708*G21_8_1_13 - 21.6964285714276*G21_8_1_14 - 7.23214285714301*G21_8_1_15 + 3.61607142857177*G21_8_1_16 - 21.6964285714285*G21_8_1_17 + 54.2410714285709*G21_8_1_18 + 43.3928571428572*G21_8_1_19 - 7.23214285714281*G21_9_0_10 + 9.6428571428571*G21_9_0_11 - 2.75335310107039e-14*G21_9_0_12 + 21.6964285714286*G21_9_0_13 - 216.964285714285*G21_9_0_14 + 21.6964285714285*G21_9_0_15 - 4.71324368422898e-14*G21_9_0_17 + 21.6964285714286*G21_9_0_18 - 43.392857142857*G21_9_0_19 - 14.4642857142856*G21_9_1_10 + 2.08721928629529e-14*G21_9_1_11 - 12.0535714285714*G21_9_1_12 + 21.6964285714288*G21_9_1_13 - 260.357142857142*G21_9_1_14 + 43.3928571428571*G21_9_1_15 - 65.0892857142857*G21_9_1_16 + 4.19681650543069e-14*G21_9_1_17 - 21.6964285714282*G21_9_1_18 - 173.571428571428*G21_9_1_19 + 1.8080357142857*G24_0_1_0 - 1.31036287626201e-14*G24_0_1_1 - 2.41071428571427*G24_0_2_1 - 1.40624999999999*G24_0_3_0 + 2.8125*G24_0_3_1 - 7.43303571428567*G24_0_4_0 - 7.43303571428567*G24_0_4_1 - 2.20982142857142*G24_0_5_0 - 1.20535714285712*G24_0_5_1 + 7.43303571428567*G24_0_6_0 + 3.61607142857137*G24_0_6_1 + 1.20535714285714*G24_0_7_0 + 0.200892857142868*G24_0_7_1 - 3.01339285714285*G24_0_8_0 - 2.8125*G24_0_8_1 + 3.61607142857141*G24_0_9_0 + 7.23214285714282*G24_0_9_1 - 1.40624999999998*G24_1_0_0 - 1.40624999999999*G24_1_0_1 + 6.02678571428567*G24_1_1_0 - 1.87305075992784e-14*G24_1_1_1 - 2.61160714285713*G24_1_2_1 + 5.02232142857141*G24_1_3_0 + 12.0535714285714*G24_1_3_1 - 7.63392857142854*G24_1_4_0 - 6.0267857142857*G24_1_4_1 - 0.200892857142864*G24_1_5_0 + 0.200892857142888*G24_1_5_1 + 7.63392857142854*G24_1_6_0 + 3.81696428571425*G24_1_6_1 + 6.42857142857136*G24_1_7_0 + 6.02678571428565*G24_1_7_1 - 11.0491071428571*G24_1_8_0 - 12.0535714285713*G24_1_8_1 - 4.82142857142855*G24_1_9_0 + 2.34375000000001*G24_2_0_0 + 2.34375*G24_2_0_1 - 0.334821428571427*G24_2_1_0 - 1.92814567601709e-14*G24_2_1_1 - 13.3928571428571*G24_2_2_1 + 12.0535714285714*G24_2_3_0 + 5.02232142857145*G24_2_3_1 - 24.1071428571427*G24_2_4_0 - 4.01785714285715*G24_2_4_1 - 12.0535714285714*G24_2_5_0 - 11.0491071428571*G24_2_5_1 + 24.1071428571427*G24_2_6_0 + 22.0982142857141*G24_2_6_1 - 1.0044642857143*G24_2_7_0 - 2.00892857142858*G24_2_7_1 - 1.00446428571428*G24_2_8_0 - 5.02232142857142*G24_2_8_1 + 1.4210854715202e-14*G24_2_9_0 + 6.02678571428571*G24_2_9_1 - 1.40624999999998*G24_3_0_0 - 1.40625000000003*G24_3_0_1 + 14.0624999999999*G24_3_1_0 + 2.18513356053351e-14*G24_3_1_1 + 14.0625*G24_3_2_1 + 5.42410714285717*G24_3_3_0 + 27.1205357142856*G24_3_3_1 + 27.1205357142856*G24_3_4_0 + 5.42410714285702*G24_3_4_1 + 5.42410714285713*G24_3_5_0 + 1.80803571428579*G24_3_5_1 - 27.1205357142856*G24_3_6_0 - 14.4642857142855*G24_3_6_1 + 1.80803571428563*G24_3_7_0 + 5.42410714285694*G24_3_7_1 - 14.4642857142856*G24_3_8_0 - 27.1205357142854*G24_3_8_1 - 10.8482142857143*G24_3_9_0 - 10.8482142857144*G24_3_9_1 + 14.8660714285714*G24_4_0_0 + 14.8660714285715*G24_4_0_1 + 3.21428571428573*G24_4_1_0 - 1.47875049177138e-13*G24_4_1_1 - 40.1785714285712*G24_4_2_1 - 54.2410714285712*G24_4_3_0 - 10.8482142857141*G24_4_3_1 - 108.482142857142*G24_4_4_0 - 108.482142857142*G24_4_4_1 - 54.2410714285712*G24_4_5_0 - 47.0089285714283*G24_4_5_1 + 108.482142857142*G24_4_6_0 + 72.3214285714276*G24_4_6_1 - 14.4642857142855*G24_4_7_0 - 21.6964285714281*G24_4_7_1 - 3.61607142857153*G24_4_8_0 + 10.8482142857138*G24_4_8_1 + 108.482142857142*G24_4_9_0 + 130.178571428571*G24_4_9_1 - 2.81250000000001*G24_5_0_0 - 2.81250000000002*G24_5_0_1 - 2.61160714285713*G24_5_1_0 + 4.52421162578208e-14*G24_5_1_1 + 10.0446428571428*G24_5_2_1 + 5.42410714285712*G24_5_3_0 - 3.61607142857146*G24_5_3_1 + 27.1205357142856*G24_5_4_0 + 23.5044642857141*G24_5_4_1 + 5.42410714285712*G24_5_5_0 + 7.23214285714283*G24_5_5_1 - 27.1205357142856*G24_5_6_0 - 14.4642857142855*G24_5_6_1 + 2.23120133480137e-14*G24_5_7_0 - 1.80803571428577*G24_5_7_1 + 5.42410714285712*G24_5_8_0 + 3.61607142857151*G24_5_8_1 - 10.8482142857142*G24_5_9_0 - 21.6964285714286*G24_5_9_1 + 0.200892857142881*G24_6_0_0 + 0.200892857142918*G24_6_0_1 - 0.200892857142855*G24_6_1_0 - 9.25023327346287e-14*G24_6_1_1 - 20.0892857142856*G24_6_2_1 + 1.17544862732188e-14*G24_6_3_0 + 1.8080357142858*G24_6_3_1 - 54.2410714285712*G24_6_4_0 - 36.160714285714*G24_6_4_1 - 1.91235915991683e-14*G24_6_5_0 + 1.80803571428569*G24_6_5_1 + 54.2410714285712*G24_6_6_0 + 18.0803571428568*G24_6_6_1 + 5.42410714285711*G24_6_7_0 + 3.61607142857156*G24_6_7_1 - 5.42410714285713*G24_6_8_0 - 1.80803571428589*G24_6_8_1 + 32.5446428571428*G24_6_9_1 - 2.20982142857144*G24_7_0_0 - 2.20982142857144*G24_7_0_1 - 6.83035714285711*G24_7_1_0 + 2.43655416298213e-14*G24_7_1_1 + 2.20982142857143*G24_7_2_1 + 1.80803571428568*G24_7_3_0 - 10.8482142857143*G24_7_3_1 + 7.23214285714284*G24_7_4_0 + 10.8482142857142*G24_7_4_1 - 1.80803571428571*G24_7_5_0 + 5.42410714285712*G24_7_5_1 - 7.23214285714284*G24_7_6_0 - 5.42410714285707*G24_7_6_1 - 3.61607142857136*G24_7_7_0 - 10.8482142857142*G24_7_7_1 + 12.6562499999999*G24_7_8_0 + 10.8482142857143*G24_7_8_1 + 2.48984860506951e-14*G24_7_9_0 - 2.1095104829616e-14*G24_7_9_1 + 2.61160714285716*G24_8_0_0 + 2.6116071428571*G24_8_0_1 + 10.0446428571428*G24_8_1_0 + 2.81250000000003*G24_8_2_1 + 12.65625*G24_8_3_0 + 27.1205357142856*G24_8_3_1 + 1.80803571428573*G24_8_4_0 - 5.42410714285719*G24_8_4_1 - 1.80803571428569*G24_8_5_0 - 5.42410714285701*G24_8_5_1 - 1.80803571428574*G24_8_6_0 + 3.25520860267048e-14*G24_8_6_1 - 9.0401785714286*G24_8_7_0 - 5.42410714285727*G24_8_7_1 - 3.61607142857135*G24_8_8_0 - 27.1205357142854*G24_8_8_1 - 10.8482142857143*G24_8_9_0 + 10.8482142857141*G24_8_9_1 + 1.20535714285717*G24_9_0_0 + 1.20535714285717*G24_9_0_1 + 9.64285714285711*G24_9_1_0 - 9.84447308479733e-14*G24_9_1_1 - 12.0535714285713*G24_9_2_1 - 10.8482142857142*G24_9_3_0 + 21.6964285714287*G24_9_3_1 - 54.2410714285712*G24_9_4_0 - 65.0892857142855*G24_9_4_1 - 10.8482142857143*G24_9_5_0 + 7.74519337554125e-14*G24_9_5_1 + 54.2410714285712*G24_9_6_0 + 10.848214285714*G24_9_6_1 - 10.8482142857142*G24_9_7_0 - 21.6964285714285*G24_9_7_1 - 2.31386090843166e-14*G24_9_8_0 - 21.6964285714286*G24_9_8_1 + 21.6964285714285*G24_9_9_0 + 86.785714285714*G24_9_9_1 - 1.40624999999998*G25_0_0_11 + 2.34375000000001*G25_0_0_12 - 1.40624999999998*G25_0_0_13 + 14.8660714285714*G25_0_0_14 - 2.81250000000001*G25_0_0_15 + 0.200892857142882*G25_0_0_16 - 2.20982142857144*G25_0_0_17 + 2.61160714285716*G25_0_0_18 + 1.20535714285717*G25_0_0_19 - 1.40624999999999*G25_0_1_11 + 2.34375*G25_0_1_12 - 1.40625000000003*G25_0_1_13 + 14.8660714285714*G25_0_1_14 - 2.81250000000002*G25_0_1_15 + 0.200892857142918*G25_0_1_16 - 2.20982142857144*G25_0_1_17 + 2.6116071428571*G25_0_1_18 + 1.20535714285717*G25_0_1_19 + 1.8080357142857*G25_1_0_10 + 6.02678571428567*G25_1_0_11 - 0.334821428571427*G25_1_0_12 + 14.0624999999999*G25_1_0_13 + 3.21428571428573*G25_1_0_14 - 2.61160714285713*G25_1_0_15 - 0.200892857142855*G25_1_0_16 - 6.83035714285711*G25_1_0_17 + 10.0446428571428*G25_1_0_18 + 9.64285714285711*G25_1_0_19 - 1.31036287626201e-14*G25_1_1_10 - 1.87305075992784e-14*G25_1_1_11 - 1.92814567601709e-14*G25_1_1_12 + 2.18513356053351e-14*G25_1_1_13 - 1.47875049177138e-13*G25_1_1_14 + 4.52421162578208e-14*G25_1_1_15 - 9.25023327346287e-14*G25_1_1_16 + 2.43655416298213e-14*G25_1_1_17 - 9.84447308479733e-14*G25_1_1_19 - 2.41071428571427*G25_2_1_10 - 2.61160714285713*G25_2_1_11 - 13.3928571428571*G25_2_1_12 + 14.0624999999999*G25_2_1_13 - 40.1785714285712*G25_2_1_14 + 10.0446428571428*G25_2_1_15 - 20.0892857142856*G25_2_1_16 + 2.20982142857143*G25_2_1_17 + 2.81250000000003*G25_2_1_18 - 12.0535714285713*G25_2_1_19 - 1.40624999999999*G25_3_0_10 + 5.02232142857141*G25_3_0_11 + 12.0535714285714*G25_3_0_12 + 5.42410714285717*G25_3_0_13 - 54.2410714285712*G25_3_0_14 + 5.42410714285712*G25_3_0_15 + 1.19626530903361e-14*G25_3_0_16 + 1.80803571428568*G25_3_0_17 + 12.65625*G25_3_0_18 - 10.8482142857142*G25_3_0_19 + 2.8125*G25_3_1_10 + 12.0535714285714*G25_3_1_11 + 5.02232142857145*G25_3_1_12 + 27.1205357142856*G25_3_1_13 - 10.8482142857141*G25_3_1_14 - 3.61607142857146*G25_3_1_15 + 1.8080357142858*G25_3_1_16 - 10.8482142857143*G25_3_1_17 + 27.1205357142856*G25_3_1_18 + 21.6964285714287*G25_3_1_19 - 7.43303571428567*G25_4_0_10 - 7.63392857142854*G25_4_0_11 - 24.1071428571427*G25_4_0_12 + 27.1205357142856*G25_4_0_13 - 108.482142857142*G25_4_0_14 + 27.1205357142856*G25_4_0_15 - 54.2410714285712*G25_4_0_16 + 7.23214285714284*G25_4_0_17 + 1.80803571428573*G25_4_0_18 - 54.2410714285712*G25_4_0_19 - 7.43303571428567*G25_4_1_10 - 6.0267857142857*G25_4_1_11 - 4.01785714285715*G25_4_1_12 + 5.42410714285702*G25_4_1_13 - 108.482142857142*G25_4_1_14 + 23.5044642857141*G25_4_1_15 - 36.160714285714*G25_4_1_16 + 10.8482142857142*G25_4_1_17 - 5.42410714285719*G25_4_1_18 - 65.0892857142855*G25_4_1_19 - 2.20982142857142*G25_5_0_10 - 0.200892857142863*G25_5_0_11 - 12.0535714285714*G25_5_0_12 + 5.42410714285713*G25_5_0_13 - 54.2410714285712*G25_5_0_14 + 5.42410714285712*G25_5_0_15 - 1.91235915991683e-14*G25_5_0_16 - 1.80803571428571*G25_5_0_17 - 1.80803571428569*G25_5_0_18 - 10.8482142857143*G25_5_0_19 - 1.20535714285712*G25_5_1_10 + 0.200892857142889*G25_5_1_11 - 11.0491071428571*G25_5_1_12 + 1.80803571428579*G25_5_1_13 - 47.0089285714283*G25_5_1_14 + 7.23214285714283*G25_5_1_15 + 1.80803571428568*G25_5_1_16 + 5.42410714285712*G25_5_1_17 - 5.42410714285701*G25_5_1_18 + 7.94503351997378e-14*G25_5_1_19 + 7.43303571428567*G25_6_0_10 + 7.63392857142854*G25_6_0_11 + 24.1071428571427*G25_6_0_12 - 27.1205357142856*G25_6_0_13 + 108.482142857142*G25_6_0_14 - 27.1205357142856*G25_6_0_15 + 54.2410714285712*G25_6_0_16 - 7.23214285714284*G25_6_0_17 - 1.80803571428574*G25_6_0_18 + 54.2410714285712*G25_6_0_19 + 3.61607142857137*G25_6_1_10 + 3.81696428571425*G25_6_1_11 + 22.0982142857141*G25_6_1_12 - 14.4642857142855*G25_6_1_13 + 72.3214285714276*G25_6_1_14 - 14.4642857142855*G25_6_1_15 + 18.0803571428568*G25_6_1_16 - 5.42410714285707*G25_6_1_17 + 3.19414633631609e-14*G25_6_1_18 + 10.848214285714*G25_6_1_19 + 1.20535714285714*G25_7_0_10 + 6.42857142857136*G25_7_0_11 - 1.0044642857143*G25_7_0_12 + 1.80803571428563*G25_7_0_13 - 14.4642857142855*G25_7_0_14 + 2.23137480714897e-14*G25_7_0_15 + 5.42410714285711*G25_7_0_16 - 3.61607142857136*G25_7_0_17 - 9.0401785714286*G25_7_0_18 - 10.8482142857142*G25_7_0_19 + 0.200892857142868*G25_7_1_10 + 6.02678571428565*G25_7_1_11 - 2.00892857142858*G25_7_1_12 + 5.42410714285694*G25_7_1_13 - 21.6964285714281*G25_7_1_14 - 1.80803571428577*G25_7_1_15 + 3.61607142857156*G25_7_1_16 - 10.8482142857142*G25_7_1_17 - 5.42410714285727*G25_7_1_18 - 21.6964285714285*G25_7_1_19 - 3.01339285714284*G25_8_0_10 - 11.0491071428571*G25_8_0_11 - 1.00446428571428*G25_8_0_12 - 14.4642857142856*G25_8_0_13 - 3.61607142857153*G25_8_0_14 + 5.42410714285712*G25_8_0_15 - 5.42410714285713*G25_8_0_16 + 12.6562499999999*G25_8_0_17 - 3.61607142857135*G25_8_0_18 - 2.26949535553356e-14*G25_8_0_19 - 2.8125*G25_8_1_10 - 12.0535714285713*G25_8_1_11 - 5.02232142857142*G25_8_1_12 - 27.1205357142854*G25_8_1_13 + 10.8482142857138*G25_8_1_14 + 3.61607142857151*G25_8_1_15 - 1.80803571428589*G25_8_1_16 + 10.8482142857143*G25_8_1_17 - 27.1205357142854*G25_8_1_18 - 21.6964285714286*G25_8_1_19 + 3.61607142857141*G25_9_0_10 - 4.82142857142855*G25_9_0_11 + 1.37667655053519e-14*G25_9_0_12 - 10.8482142857143*G25_9_0_13 + 108.482142857142*G25_9_0_14 - 10.8482142857142*G25_9_0_15 + 2.35662184211449e-14*G25_9_0_17 - 10.8482142857143*G25_9_0_18 + 21.6964285714285*G25_9_0_19 + 7.23214285714282*G25_9_1_10 - 1.04360964314765e-14*G25_9_1_11 + 6.02678571428571*G25_9_1_12 - 10.8482142857144*G25_9_1_13 + 130.178571428571*G25_9_1_14 - 21.6964285714286*G25_9_1_15 + 32.5446428571428*G25_9_1_16 - 2.09840825271534e-14*G25_9_1_17 + 10.8482142857141*G25_9_1_18 + 86.7857142857141*G25_9_1_19;
    A[5] = 0.0750000000000018*G4_0_0_0 + 0.0750000000000038*G4_0_0_1 - 0.0750000000000011*G4_0_1_0 + 0.599999999999996*G4_0_2_1 + 0.675000000000001*G4_0_3_0 + 0.337499999999999*G4_0_3_1 + 0.674999999999999*G4_0_4_0 + 0.337500000000006*G4_0_4_1 + 3.37499999999999*G4_0_5_0 + 1.68749999999999*G4_0_5_1 - 0.674999999999999*G4_0_6_0 - 2.36249999999999*G4_0_6_1 + 1.68749999999999*G4_0_7_1 - 0.337500000000002*G4_0_8_1 - 4.04999999999999*G4_0_9_0 - 2.02499999999999*G4_0_9_1 - 1.35*G4_1_0_0 - 1.35*G4_1_0_1 + 0.674999999999999*G4_1_2_1 + 0.337500000000003*G4_1_3_0 + 1.7278713182467e-14*G4_1_3_1 + 0.337499999999997*G4_1_4_0 + 1.68749999999999*G4_1_5_0 + 3.37499999999998*G4_1_5_1 - 0.337499999999997*G4_1_6_0 - 2.69999999999999*G4_1_6_1 + 1.68749999999999*G4_1_7_0 - 0.337500000000004*G4_1_8_0 - 1.25255708582905e-14*G4_1_8_1 - 2.02499999999999*G4_1_9_0 + 1.00058850094342e-14*G4_1_9_1 + 0.0750000000000018*G5_0_0_0 + 0.0750000000000038*G5_0_0_1 - 0.0750000000000011*G5_0_1_0 + 0.599999999999996*G5_0_2_1 + 0.675000000000001*G5_0_3_0 + 0.337499999999999*G5_0_3_1 + 0.674999999999999*G5_0_4_0 + 0.337500000000006*G5_0_4_1 + 3.37499999999999*G5_0_5_0 + 1.68749999999999*G5_0_5_1 - 0.674999999999999*G5_0_6_0 - 2.36249999999999*G5_0_6_1 + 1.68749999999999*G5_0_7_1 - 0.337500000000002*G5_0_8_1 - 4.04999999999999*G5_0_9_0 - 2.02499999999999*G5_0_9_1 - 1.35*G5_1_0_0 - 1.35*G5_1_0_1 + 0.674999999999999*G5_1_2_1 + 0.337500000000003*G5_1_3_0 + 1.7278713182467e-14*G5_1_3_1 + 0.337499999999997*G5_1_4_0 + 1.68749999999999*G5_1_5_0 + 3.37499999999998*G5_1_5_1 - 0.337499999999997*G5_1_6_0 - 2.69999999999999*G5_1_6_1 + 1.68749999999999*G5_1_7_0 - 0.337500000000004*G5_1_8_0 - 1.25255708582905e-14*G5_1_8_1 - 2.02499999999999*G5_1_9_0 + 1.00058850094342e-14*G5_1_9_1 + 0.0749999999999997*G6_0_20 - 0.0749999999999997*G6_0_21 - 0.15*G6_0_22 + 0.599999999999997*G6_0_24 + 0.299999999999999*G6_0_25 - 0.224999999999999*G6_1_20 - 0.0749999999999992*G6_1_22 + 0.299999999999997*G6_1_24 - 0.0375000000000009*G7_0_0_0 - 0.0375000000000019*G7_0_0_1 + 0.0375000000000006*G7_0_1_0 - 0.299999999999998*G7_0_2_1 - 0.3375*G7_0_3_0 - 0.168749999999999*G7_0_3_1 - 0.337499999999999*G7_0_4_0 - 0.168750000000003*G7_0_4_1 - 1.68749999999999*G7_0_5_0 - 0.843749999999994*G7_0_5_1 + 0.3375*G7_0_6_0 + 1.18125*G7_0_6_1 - 0.843749999999997*G7_0_7_1 + 0.168750000000001*G7_0_8_1 + 2.02499999999999*G7_0_9_0 + 1.01249999999999*G7_0_9_1 + 0.674999999999998*G7_1_0_0 + 0.674999999999998*G7_1_0_1 - 0.3375*G7_1_2_1 - 0.168750000000002*G7_1_3_0 - 0.168749999999998*G7_1_4_0 - 0.843749999999994*G7_1_5_0 - 1.68749999999999*G7_1_5_1 + 0.168749999999999*G7_1_6_0 + 1.34999999999999*G7_1_6_1 - 0.843749999999997*G7_1_7_0 + 0.168750000000002*G7_1_8_0 + 1.01249999999999*G7_1_9_0 - 0.0375000000000009*G8_0_0_0 - 0.0375000000000019*G8_0_0_1 + 0.0375000000000006*G8_0_1_0 - 0.299999999999998*G8_0_2_1 - 0.3375*G8_0_3_0 - 0.168749999999999*G8_0_3_1 - 0.337499999999999*G8_0_4_0 - 0.168750000000003*G8_0_4_1 - 1.68749999999999*G8_0_5_0 - 0.843749999999994*G8_0_5_1 + 0.3375*G8_0_6_0 + 1.18125*G8_0_6_1 - 0.843749999999997*G8_0_7_1 + 0.168750000000001*G8_0_8_1 + 2.02499999999999*G8_0_9_0 + 1.01249999999999*G8_0_9_1 + 0.674999999999998*G8_1_0_0 + 0.674999999999998*G8_1_0_1 - 0.3375*G8_1_2_1 - 0.168750000000002*G8_1_3_0 - 0.168749999999998*G8_1_4_0 - 0.843749999999994*G8_1_5_0 - 1.68749999999999*G8_1_5_1 + 0.168749999999999*G8_1_6_0 + 1.34999999999999*G8_1_6_1 - 0.843749999999997*G8_1_7_0 + 0.168750000000002*G8_1_8_0 + 1.01249999999999*G8_1_9_0 - 0.0374999999999998*G9_0_20 + 0.0374999999999998*G9_0_21 + 0.0749999999999998*G9_0_22 - 0.299999999999999*G9_0_24 - 0.149999999999999*G9_0_25 + 0.1125*G9_1_20 + 0.0374999999999996*G9_1_22 - 0.149999999999999*G9_1_24 + 0.0750000000000018*G10_0_0_0 + 0.0750000000000038*G10_0_0_1 - 0.0750000000000011*G10_0_1_0 + 0.599999999999996*G10_0_2_1 + 0.675000000000001*G10_0_3_0 + 0.337499999999999*G10_0_3_1 + 0.674999999999999*G10_0_4_0 + 0.337500000000006*G10_0_4_1 + 3.37499999999999*G10_0_5_0 + 1.68749999999999*G10_0_5_1 - 0.674999999999999*G10_0_6_0 - 2.36249999999999*G10_0_6_1 + 1.68749999999999*G10_0_7_1 - 0.337500000000002*G10_0_8_1 - 4.04999999999999*G10_0_9_0 - 2.02499999999999*G10_0_9_1 - 1.35*G10_1_0_0 - 1.35*G10_1_0_1 + 0.674999999999999*G10_1_2_1 + 0.337500000000003*G10_1_3_0 + 1.7278713182467e-14*G10_1_3_1 + 0.337499999999997*G10_1_4_0 + 1.68749999999999*G10_1_5_0 + 3.37499999999998*G10_1_5_1 - 0.337499999999997*G10_1_6_0 - 2.69999999999999*G10_1_6_1 + 1.68749999999999*G10_1_7_0 - 0.337500000000004*G10_1_8_0 - 1.25255708582905e-14*G10_1_8_1 - 2.02499999999999*G10_1_9_0 + 1.00058850094342e-14*G10_1_9_1 + 0.0750000000000018*G11_0_10_0 + 0.0750000000000038*G11_0_10_1 - 0.0750000000000011*G11_0_11_0 + 0.599999999999996*G11_0_12_1 + 0.675000000000001*G11_0_13_0 + 0.337499999999999*G11_0_13_1 + 0.674999999999999*G11_0_14_0 + 0.337500000000006*G11_0_14_1 + 3.37499999999999*G11_0_15_0 + 1.68749999999999*G11_0_15_1 - 0.674999999999999*G11_0_16_0 - 2.36249999999999*G11_0_16_1 + 1.68749999999999*G11_0_17_1 - 0.337500000000002*G11_0_18_1 - 4.04999999999999*G11_0_19_0 - 2.02499999999999*G11_0_19_1 - 1.35*G11_1_10_0 - 1.35*G11_1_10_1 + 0.674999999999999*G11_1_12_1 + 0.337500000000003*G11_1_13_0 + 1.7278713182467e-14*G11_1_13_1 + 0.337499999999997*G11_1_14_0 + 1.68749999999999*G11_1_15_0 + 3.37499999999998*G11_1_15_1 - 0.337499999999997*G11_1_16_0 - 2.69999999999999*G11_1_16_1 + 1.68749999999999*G11_1_17_0 - 0.337500000000004*G11_1_18_0 - 1.25255708582905e-14*G11_1_18_1 - 2.02499999999999*G11_1_19_0 + 1.00058850094342e-14*G11_1_19_1 - 0.0375000000000009*G12_0_0_0 - 0.0375000000000019*G12_0_0_1 + 0.0375000000000006*G12_0_1_0 - 0.299999999999998*G12_0_2_1 - 0.3375*G12_0_3_0 - 0.168749999999999*G12_0_3_1 - 0.337499999999999*G12_0_4_0 - 0.168750000000003*G12_0_4_1 - 1.68749999999999*G12_0_5_0 - 0.843749999999994*G12_0_5_1 + 0.3375*G12_0_6_0 + 1.18125*G12_0_6_1 - 0.843749999999997*G12_0_7_1 + 0.168750000000001*G12_0_8_1 + 2.02499999999999*G12_0_9_0 + 1.01249999999999*G12_0_9_1 + 0.674999999999998*G12_1_0_0 + 0.674999999999998*G12_1_0_1 - 0.3375*G12_1_2_1 - 0.168750000000002*G12_1_3_0 - 0.168749999999998*G12_1_4_0 - 0.843749999999994*G12_1_5_0 - 1.68749999999999*G12_1_5_1 + 0.168749999999999*G12_1_6_0 + 1.34999999999999*G12_1_6_1 - 0.843749999999997*G12_1_7_0 + 0.168750000000002*G12_1_8_0 + 1.01249999999999*G12_1_9_0 - 0.0375000000000009*G13_0_10_0 - 0.0375000000000019*G13_0_10_1 + 0.0375000000000006*G13_0_11_0 - 0.299999999999998*G13_0_12_1 - 0.3375*G13_0_13_0 - 0.168749999999999*G13_0_13_1 - 0.337499999999999*G13_0_14_0 - 0.168750000000003*G13_0_14_1 - 1.68749999999999*G13_0_15_0 - 0.843749999999994*G13_0_15_1 + 0.3375*G13_0_16_0 + 1.18125*G13_0_16_1 - 0.843749999999997*G13_0_17_1 + 0.168750000000001*G13_0_18_1 + 2.02499999999999*G13_0_19_0 + 1.01249999999999*G13_0_19_1 + 0.674999999999998*G13_1_10_0 + 0.674999999999998*G13_1_10_1 - 0.3375*G13_1_12_1 - 0.168750000000002*G13_1_13_0 - 0.168749999999998*G13_1_14_0 - 0.843749999999994*G13_1_15_0 - 1.68749999999999*G13_1_15_1 + 0.168749999999999*G13_1_16_0 + 1.34999999999999*G13_1_16_1 - 0.843749999999997*G13_1_17_0 + 0.168750000000002*G13_1_18_0 + 1.01249999999999*G13_1_19_0 - 26.7857142857142*G20_0_0_0 - 26.7857142857141*G20_0_0_1 + 4.6875*G20_0_1_0 - 1.96327547755179e-14*G20_0_1_1 + 0.669642857142897*G20_0_2_1 - 4.01785714285713*G20_0_3_0 - 2.00892857142845*G20_0_3_1 - 10.0446428571428*G20_0_4_0 - 8.03571428571436*G20_0_4_1 - 8.0357142857142*G20_0_5_0 + 40.1785714285712*G20_0_5_1 + 10.0446428571428*G20_0_6_0 - 14.0625*G20_0_6_1 + 44.1964285714284*G20_0_7_0 - 4.01785714285706*G20_0_7_1 - 22.0982142857143*G20_0_8_0 + 2.00892857142852*G20_0_8_1 + 12.0535714285713*G20_0_9_0 + 12.0535714285713*G20_0_9_1 - 4.82142857142856*G20_1_0_0 - 4.82142857142857*G20_1_0_1 + 1.12440438904127e-14*G20_1_1_0 - 3.6160714285714*G20_1_2_1 + 0.401785714285697*G20_1_3_0 - 2.00892857142854*G20_1_3_1 - 5.62499999999998*G20_1_4_0 + 0.401785714285664*G20_1_4_1 - 14.8660714285714*G20_1_5_0 + 1.71494762835067e-14*G20_1_5_1 + 5.62499999999998*G20_1_6_0 + 8.43749999999999*G20_1_6_1 + 7.23214285714288*G20_1_7_0 - 7.63392857142854*G20_1_7_1 - 2.41071428571433*G20_1_8_0 + 2.00892857142857*G20_1_8_1 + 14.4642857142857*G20_1_9_0 + 7.2321428571428*G20_1_9_1 - 5.22321428571427*G20_2_0_0 - 5.22321428571427*G20_2_0_1 - 2.81249999999998*G20_2_1_0 - 1.72996054515353e-14*G20_2_1_1 - 12.0535714285714*G20_2_2_1 + 12.0535714285714*G20_2_3_0 - 0.803571428571365*G20_2_3_1 - 24.1071428571427*G20_2_4_0 - 2.00892857142862*G20_2_4_1 - 12.0535714285714*G20_2_5_0 + 3.21428571428571*G20_2_5_1 + 24.1071428571427*G20_2_6_0 + 14.0624999999999*G20_2_6_1 + 7.63392857142858*G20_2_7_0 - 7.63392857142855*G20_2_7_1 + 0.401785714285668*G20_2_8_0 + 0.803571428571407*G20_2_8_1 + 7.04436509124662e-14*G20_2_9_0 + 9.64285714285713*G20_2_9_1 + 4.41964285714282*G20_3_0_0 + 4.41964285714286*G20_3_0_1 - 4.41964285714283*G20_3_1_0 + 13.6607142857142*G20_3_2_1 - 21.6964285714285*G20_3_3_0 - 14.4642857142857*G20_3_3_1 + 21.6964285714285*G20_3_4_0 - 3.61607142857131*G20_3_4_1 + 21.6964285714284*G20_3_5_0 + 7.23214285714274*G20_3_5_1 - 21.6964285714285*G20_3_6_0 - 25.3124999999999*G20_3_6_1 - 10.8482142857142*G20_3_7_0 + 3.61607142857148*G20_3_7_1 + 10.8482142857142*G20_3_8_0 + 14.4642857142856*G20_3_8_1 + 5.31172328344098e-14*G20_3_9_0 + 9.18987108633473e-14*G20_3_9_1 + 5.62500000000002*G20_4_0_0 + 5.62500000000005*G20_4_0_1 + 5.22321428571426*G20_4_1_0 - 9.04842325156415e-14*G20_4_1_1 - 20.0892857142856*G20_4_2_1 - 10.8482142857142*G20_4_3_0 + 7.23214285714292*G20_4_3_1 - 54.2410714285712*G20_4_4_0 - 47.0089285714283*G20_4_4_1 - 10.8482142857142*G20_4_5_0 - 14.4642857142857*G20_4_5_1 + 54.2410714285712*G20_4_6_0 + 28.928571428571*G20_4_6_1 - 4.46274961429793e-14*G20_4_7_0 + 3.61607142857155*G20_4_7_1 - 10.8482142857142*G20_4_8_0 - 7.23214285714301*G20_4_8_1 + 21.6964285714285*G20_4_9_0 + 43.3928571428571*G20_4_9_1 - 80.3571428571428*G20_5_0_0 - 80.3571428571429*G20_5_0_1 + 29.7321428571428*G20_5_1_0 + 2.53992908467142e-13*G20_5_1_1 - 6.4285714285712*G20_5_2_1 - 43.3928571428573*G20_5_3_0 - 14.4642857142857*G20_5_3_1 + 21.6964285714285*G20_5_4_0 + 28.9285714285706*G20_5_4_1 - 216.964285714285*G20_5_5_0 + 4.46444964330439e-13*G20_5_5_1 - 21.6964285714285*G20_5_6_0 + 86.7857142857144*G20_5_6_1 + 144.642857142857*G20_5_7_0 - 72.3214285714285*G20_5_7_1 - 94.0178571428572*G20_5_8_0 + 14.4642857142862*G20_5_8_1 + 260.357142857142*G20_5_9_0 + 43.3928571428565*G20_5_9_1 + 28.125*G20_6_0_0 + 28.125*G20_6_0_1 - 2.81250000000001*G20_6_1_0 - 9.28580036242362e-14*G20_6_1_1 - 28.1249999999999*G20_6_2_1 + 10.8482142857143*G20_6_3_0 + 7.23214285714284*G20_6_3_1 - 54.2410714285712*G20_6_4_0 - 25.3124999999996*G20_6_4_1 + 10.8482142857143*G20_6_5_0 - 43.392857142857*G20_6_5_1 + 54.2410714285712*G20_6_6_0 + 43.3928571428567*G20_6_6_1 - 28.9285714285715*G20_6_7_0 + 25.3125*G20_6_7_1 + 3.61607142857154*G20_6_8_0 - 7.23214285714303*G20_6_8_1 - 21.6964285714286*G20_6_9_0 + 1.6050702433823e-13*G20_6_9_1 - 40.1785714285713*G20_7_0_0 - 40.1785714285714*G20_7_0_1 + 0.401785714285776*G20_7_1_0 + 8.24652219353823e-14*G20_7_1_1 + 0.401785714285856*G20_7_2_1 + 7.23214285714274*G20_7_3_0 - 3.61607142857123*G20_7_3_1 - 3.6160714285714*G20_7_4_0 + 7.23214285714232*G20_7_4_1 - 72.3214285714283*G20_7_5_0 + 36.1607142857144*G20_7_5_1 + 3.61607142857141*G20_7_6_0 + 3.61607142857161*G20_7_6_1 + 36.1607142857145*G20_7_7_0 - 72.3214285714284*G20_7_7_1 + 3.61607142857111*G20_7_8_0 + 3.61607142857163*G20_7_8_1 + 65.0892857142855*G20_7_9_0 + 65.0892857142852*G20_7_9_1 + 20.0892857142857*G20_8_0_0 + 20.0892857142858*G20_8_0_1 - 5.625*G20_8_1_0 - 3.98999081119768e-14*G20_8_1_1 + 5.22321428571421*G20_8_2_1 - 3.61607142857133*G20_8_3_0 - 3.61607142857145*G20_8_3_1 + 7.23214285714284*G20_8_4_0 - 3.61607142857118*G20_8_4_1 + 47.0089285714285*G20_8_5_0 - 7.23214285714296*G20_8_5_1 - 7.23214285714285*G20_8_6_0 - 18.0803571428572*G20_8_6_1 - 28.9285714285715*G20_8_7_0 + 25.3125*G20_8_7_1 + 14.4642857142858*G20_8_8_0 + 3.61607142857126*G20_8_8_1 - 43.3928571428571*G20_8_9_0 - 21.6964285714284*G20_8_9_1 - 24.107142857143*G20_9_0_0 - 24.107142857143*G20_9_0_1 + 2.41071428571437*G20_9_1_0 + 6.45874451709362e-14*G20_9_1_1 - 19.2857142857141*G20_9_2_1 - 43.3928571428571*G20_9_3_0 - 21.6964285714284*G20_9_3_1 - 43.392857142857*G20_9_4_0 - 43.3928571428573*G20_9_4_1 - 130.178571428571*G20_9_5_0 - 21.6964285714282*G20_9_5_1 + 43.392857142857*G20_9_6_0 + 65.0892857142855*G20_9_6_1 + 21.696428571429*G20_9_7_0 - 86.7857142857139*G20_9_7_1 - 4.29566565695108e-13*G20_9_8_0 + 21.6964285714285*G20_9_8_1 + 173.571428571428*G20_9_9_0 + 130.178571428571*G20_9_9_1 - 26.7857142857142*G21_0_0_10 - 4.82142857142856*G21_0_0_11 - 5.22321428571427*G21_0_0_12 + 4.41964285714282*G21_0_0_13 + 5.62500000000002*G21_0_0_14 - 80.3571428571428*G21_0_0_15 + 28.125*G21_0_0_16 - 40.1785714285713*G21_0_0_17 + 20.0892857142857*G21_0_0_18 - 24.107142857143*G21_0_0_19 - 26.7857142857141*G21_0_1_10 - 4.82142857142857*G21_0_1_11 - 5.22321428571427*G21_0_1_12 + 4.41964285714286*G21_0_1_13 + 5.62500000000005*G21_0_1_14 - 80.3571428571429*G21_0_1_15 + 28.125*G21_0_1_16 - 40.1785714285714*G21_0_1_17 + 20.0892857142858*G21_0_1_18 - 24.107142857143*G21_0_1_19 + 4.6875*G21_1_0_10 + 1.13004224033819e-14*G21_1_0_11 - 2.81249999999998*G21_1_0_12 - 4.41964285714283*G21_1_0_13 + 5.22321428571427*G21_1_0_14 + 29.7321428571428*G21_1_0_15 - 2.81250000000001*G21_1_0_16 + 0.401785714285775*G21_1_0_17 - 5.625*G21_1_0_18 + 2.41071428571437*G21_1_0_19 - 1.96327547755179e-14*G21_1_1_10 - 1.72996054515353e-14*G21_1_1_12 - 9.04842325156416e-14*G21_1_1_14 + 2.53992908467142e-13*G21_1_1_15 - 9.28580036242362e-14*G21_1_1_16 + 8.24652219353823e-14*G21_1_1_17 - 3.98999081119768e-14*G21_1_1_18 + 6.45874451709362e-14*G21_1_1_19 + 0.669642857142897*G21_2_1_10 - 3.6160714285714*G21_2_1_11 - 12.0535714285714*G21_2_1_12 + 13.6607142857142*G21_2_1_13 - 20.0892857142856*G21_2_1_14 - 6.4285714285712*G21_2_1_15 - 28.1249999999999*G21_2_1_16 + 0.401785714285855*G21_2_1_17 + 5.22321428571421*G21_2_1_18 - 19.2857142857141*G21_2_1_19 - 4.01785714285713*G21_3_0_10 + 0.401785714285697*G21_3_0_11 + 12.0535714285714*G21_3_0_12 - 21.6964285714285*G21_3_0_13 - 10.8482142857142*G21_3_0_14 - 43.3928571428573*G21_3_0_15 + 10.8482142857143*G21_3_0_16 + 7.23214285714274*G21_3_0_17 - 3.61607142857133*G21_3_0_18 - 43.3928571428571*G21_3_0_19 - 2.00892857142845*G21_3_1_10 - 2.00892857142854*G21_3_1_11 - 0.803571428571364*G21_3_1_12 - 14.4642857142857*G21_3_1_13 + 7.23214285714292*G21_3_1_14 - 14.4642857142857*G21_3_1_15 + 7.23214285714284*G21_3_1_16 - 3.61607142857123*G21_3_1_17 - 3.61607142857145*G21_3_1_18 - 21.6964285714284*G21_3_1_19 - 10.0446428571428*G21_4_0_10 - 5.62499999999998*G21_4_0_11 - 24.1071428571427*G21_4_0_12 + 21.6964285714285*G21_4_0_13 - 54.2410714285712*G21_4_0_14 + 21.6964285714285*G21_4_0_15 - 54.2410714285712*G21_4_0_16 - 3.6160714285714*G21_4_0_17 + 7.23214285714284*G21_4_0_18 - 43.392857142857*G21_4_0_19 - 8.03571428571436*G21_4_1_10 + 0.401785714285664*G21_4_1_11 - 2.00892857142862*G21_4_1_12 - 3.61607142857131*G21_4_1_13 - 47.0089285714283*G21_4_1_14 + 28.9285714285706*G21_4_1_15 - 25.3124999999996*G21_4_1_16 + 7.23214285714232*G21_4_1_17 - 3.61607142857118*G21_4_1_18 - 43.3928571428573*G21_4_1_19 - 8.0357142857142*G21_5_0_10 - 14.8660714285714*G21_5_0_11 - 12.0535714285714*G21_5_0_12 + 21.6964285714284*G21_5_0_13 - 10.8482142857142*G21_5_0_14 - 216.964285714285*G21_5_0_15 + 10.8482142857143*G21_5_0_16 - 72.3214285714283*G21_5_0_17 + 47.0089285714285*G21_5_0_18 - 130.178571428571*G21_5_0_19 + 40.1785714285712*G21_5_1_10 + 1.68406955047828e-14*G21_5_1_11 + 3.21428571428571*G21_5_1_12 + 7.23214285714274*G21_5_1_13 - 14.4642857142857*G21_5_1_14 + 4.54244281078431e-13*G21_5_1_15 - 43.392857142857*G21_5_1_16 + 36.1607142857144*G21_5_1_17 - 7.23214285714296*G21_5_1_18 - 21.6964285714282*G21_5_1_19 + 10.0446428571428*G21_6_0_10 + 5.62499999999998*G21_6_0_11 + 24.1071428571427*G21_6_0_12 - 21.6964285714285*G21_6_0_13 + 54.2410714285712*G21_6_0_14 - 21.6964285714285*G21_6_0_15 + 54.2410714285712*G21_6_0_16 + 3.61607142857141*G21_6_0_17 - 7.23214285714285*G21_6_0_18 + 43.392857142857*G21_6_0_19 - 14.0625*G21_6_1_10 + 8.43749999999999*G21_6_1_11 + 14.0624999999999*G21_6_1_12 - 25.3124999999999*G21_6_1_13 + 28.928571428571*G21_6_1_14 + 86.7857142857144*G21_6_1_15 + 43.3928571428567*G21_6_1_16 + 3.61607142857161*G21_6_1_17 - 18.0803571428572*G21_6_1_18 + 65.0892857142854*G21_6_1_19 + 44.1964285714284*G21_7_0_10 + 7.23214285714288*G21_7_0_11 + 7.63392857142858*G21_7_0_12 - 10.8482142857142*G21_7_0_13 - 4.46274961429793e-14*G21_7_0_14 + 144.642857142857*G21_7_0_15 - 28.9285714285715*G21_7_0_16 + 36.1607142857145*G21_7_0_17 - 28.9285714285715*G21_7_0_18 + 21.696428571429*G21_7_0_19 - 4.01785714285706*G21_7_1_10 - 7.63392857142854*G21_7_1_11 - 7.63392857142855*G21_7_1_12 + 3.61607142857148*G21_7_1_13 + 3.61607142857155*G21_7_1_14 - 72.3214285714285*G21_7_1_15 + 25.3125*G21_7_1_16 - 72.3214285714284*G21_7_1_17 + 25.3125*G21_7_1_18 - 86.7857142857139*G21_7_1_19 - 22.0982142857143*G21_8_0_10 - 2.41071428571433*G21_8_0_11 + 0.401785714285668*G21_8_0_12 + 10.8482142857142*G21_8_0_13 - 10.8482142857142*G21_8_0_14 - 94.0178571428572*G21_8_0_15 + 3.61607142857153*G21_8_0_16 + 3.61607142857111*G21_8_0_17 + 14.4642857142858*G21_8_0_18 - 4.26237658449763e-13*G21_8_0_19 + 2.00892857142852*G21_8_1_10 + 2.00892857142857*G21_8_1_11 + 0.803571428571407*G21_8_1_12 + 14.4642857142856*G21_8_1_13 - 7.23214285714301*G21_8_1_14 + 14.4642857142862*G21_8_1_15 - 7.23214285714303*G21_8_1_16 + 3.61607142857163*G21_8_1_17 + 3.61607142857126*G21_8_1_18 + 21.6964285714285*G21_8_1_19 + 12.0535714285713*G21_9_0_10 + 14.4642857142857*G21_9_0_11 + 7.04297731246584e-14*G21_9_0_12 + 5.2284565565941e-14*G21_9_0_13 + 21.6964285714285*G21_9_0_14 + 260.357142857142*G21_9_0_15 - 21.6964285714286*G21_9_0_16 + 65.0892857142855*G21_9_0_17 - 43.3928571428571*G21_9_0_18 + 173.571428571428*G21_9_0_19 + 12.0535714285713*G21_9_1_10 + 7.2321428571428*G21_9_1_11 + 9.64285714285714*G21_9_1_12 + 8.65696403451466e-14*G21_9_1_13 + 43.3928571428571*G21_9_1_14 + 43.3928571428565*G21_9_1_15 + 1.53402464342367e-13*G21_9_1_16 + 65.0892857142852*G21_9_1_17 - 21.6964285714284*G21_9_1_18 + 130.178571428571*G21_9_1_19 + 13.3928571428571*G24_0_0_0 + 13.3928571428571*G24_0_0_1 - 2.34375*G24_0_1_0 - 0.334821428571448*G24_0_2_1 + 2.00892857142857*G24_0_3_0 + 1.00446428571422*G24_0_3_1 + 5.0223214285714*G24_0_4_0 + 4.01785714285718*G24_0_4_1 + 4.0178571428571*G24_0_5_0 - 20.0892857142856*G24_0_5_1 - 5.02232142857141*G24_0_6_0 + 7.03124999999999*G24_0_6_1 - 22.0982142857142*G24_0_7_0 + 2.00892857142853*G24_0_7_1 + 11.0491071428571*G24_0_8_0 - 1.00446428571426*G24_0_8_1 - 6.02678571428566*G24_0_9_0 - 6.02678571428567*G24_0_9_1 + 2.41071428571428*G24_1_0_0 + 2.41071428571429*G24_1_0_1 + 1.8080357142857*G24_1_2_1 - 0.200892857142849*G24_1_3_0 + 1.00446428571427*G24_1_3_1 + 2.81249999999999*G24_1_4_0 - 0.200892857142832*G24_1_4_1 + 7.43303571428569*G24_1_5_0 - 2.81249999999999*G24_1_6_0 - 4.21875*G24_1_6_1 - 3.61607142857144*G24_1_7_0 + 3.81696428571427*G24_1_7_1 + 1.20535714285716*G24_1_8_0 - 1.00446428571429*G24_1_8_1 - 7.23214285714284*G24_1_9_0 - 3.6160714285714*G24_1_9_1 + 2.61160714285713*G24_2_0_0 + 2.61160714285714*G24_2_0_1 + 1.40624999999999*G24_2_1_0 + 6.02678571428568*G24_2_2_1 - 6.02678571428568*G24_2_3_0 + 0.401785714285682*G24_2_3_1 + 12.0535714285714*G24_2_4_0 + 1.00446428571431*G24_2_4_1 + 6.02678571428572*G24_2_5_0 - 1.60714285714286*G24_2_5_1 - 12.0535714285714*G24_2_6_0 - 7.03124999999996*G24_2_6_1 - 3.81696428571429*G24_2_7_0 + 3.81696428571427*G24_2_7_1 - 0.200892857142834*G24_2_8_0 - 0.401785714285704*G24_2_8_1 - 3.52218254562331e-14*G24_2_9_0 - 4.82142857142857*G24_2_9_1 - 2.20982142857141*G24_3_0_0 - 2.20982142857143*G24_3_0_1 + 2.20982142857142*G24_3_1_0 - 6.83035714285709*G24_3_2_1 + 10.8482142857142*G24_3_3_0 + 7.23214285714286*G24_3_3_1 - 10.8482142857142*G24_3_4_0 + 1.80803571428566*G24_3_4_1 - 10.8482142857142*G24_3_5_0 - 3.61607142857137*G24_3_5_1 + 10.8482142857142*G24_3_6_0 + 12.6562499999999*G24_3_6_1 + 5.42410714285712*G24_3_7_0 - 1.80803571428574*G24_3_7_1 - 5.42410714285712*G24_3_8_0 - 7.23214285714279*G24_3_8_1 - 2.65586164172049e-14*G24_3_9_0 - 4.59493554316737e-14*G24_3_9_1 - 2.81250000000001*G24_4_0_0 - 2.81250000000002*G24_4_0_1 - 2.61160714285713*G24_4_1_0 + 4.52421162578208e-14*G24_4_1_1 + 10.0446428571428*G24_4_2_1 + 5.42410714285712*G24_4_3_0 - 3.61607142857146*G24_4_3_1 + 27.1205357142856*G24_4_4_0 + 23.5044642857141*G24_4_4_1 + 5.42410714285712*G24_4_5_0 + 7.23214285714283*G24_4_5_1 - 27.1205357142856*G24_4_6_0 - 14.4642857142855*G24_4_6_1 + 2.23137480714897e-14*G24_4_7_0 - 1.80803571428577*G24_4_7_1 + 5.42410714285711*G24_4_8_0 + 3.61607142857151*G24_4_8_1 - 10.8482142857142*G24_4_9_0 - 21.6964285714286*G24_4_9_1 + 40.1785714285714*G24_5_0_0 + 40.1785714285714*G24_5_0_1 - 14.8660714285714*G24_5_1_0 - 1.26996454233571e-13*G24_5_1_1 + 3.2142857142856*G24_5_2_1 + 21.6964285714286*G24_5_3_0 + 7.23214285714285*G24_5_3_1 - 10.8482142857143*G24_5_4_0 - 14.4642857142853*G24_5_4_1 + 108.482142857142*G24_5_5_0 - 2.2322248216522e-13*G24_5_5_1 + 10.8482142857142*G24_5_6_0 - 43.3928571428572*G24_5_6_1 - 72.3214285714286*G24_5_7_0 + 36.1607142857143*G24_5_7_1 + 47.0089285714286*G24_5_8_0 - 7.2321428571431*G24_5_8_1 - 130.178571428571*G24_5_9_0 - 21.6964285714282*G24_5_9_1 - 14.0625*G24_6_0_0 - 14.0625*G24_6_0_1 + 1.40625000000001*G24_6_1_0 + 4.64290018121181e-14*G24_6_1_1 + 14.0625*G24_6_2_1 - 5.42410714285715*G24_6_3_0 - 3.61607142857142*G24_6_3_1 + 27.1205357142856*G24_6_4_0 + 12.6562499999998*G24_6_4_1 - 5.42410714285714*G24_6_5_0 + 21.6964285714285*G24_6_5_1 - 27.1205357142856*G24_6_6_0 - 21.6964285714283*G24_6_6_1 + 14.4642857142857*G24_6_7_0 - 12.65625*G24_6_7_1 - 1.80803571428577*G24_6_8_0 + 3.61607142857152*G24_6_8_1 + 10.8482142857143*G24_6_9_0 - 8.0253512169115e-14*G24_6_9_1 + 20.0892857142857*G24_7_0_0 + 20.0892857142857*G24_7_0_1 - 0.200892857142888*G24_7_1_0 - 4.12326109676912e-14*G24_7_1_1 - 0.200892857142928*G24_7_2_1 - 3.61607142857137*G24_7_3_0 + 1.80803571428562*G24_7_3_1 + 1.8080357142857*G24_7_4_0 - 3.61607142857116*G24_7_4_1 + 36.1607142857141*G24_7_5_0 - 18.0803571428572*G24_7_5_1 - 1.80803571428571*G24_7_6_0 - 1.80803571428581*G24_7_6_1 - 18.0803571428572*G24_7_7_0 + 36.1607142857142*G24_7_7_1 - 1.80803571428556*G24_7_8_0 - 1.80803571428582*G24_7_8_1 - 32.5446428571428*G24_7_9_0 - 32.5446428571426*G24_7_9_1 - 10.0446428571429*G24_8_0_0 - 10.0446428571429*G24_8_0_1 + 2.8125*G24_8_1_0 + 1.99499540559884e-14*G24_8_1_1 - 2.61160714285711*G24_8_2_1 + 1.80803571428567*G24_8_3_0 + 1.80803571428573*G24_8_3_1 - 3.61607142857142*G24_8_4_0 + 1.80803571428559*G24_8_4_1 - 23.5044642857142*G24_8_5_0 + 3.61607142857148*G24_8_5_1 + 3.61607142857142*G24_8_6_0 + 9.0401785714286*G24_8_6_1 + 14.4642857142858*G24_8_7_0 - 12.65625*G24_8_7_1 - 7.23214285714291*G24_8_8_0 - 1.80803571428563*G24_8_8_1 + 21.6964285714286*G24_8_9_0 + 10.8482142857142*G24_8_9_1 + 12.0535714285715*G24_9_0_0 + 12.0535714285715*G24_9_0_1 - 1.20535714285719*G24_9_1_0 - 3.22937225854681e-14*G24_9_1_1 + 9.64285714285704*G24_9_2_1 + 21.6964285714286*G24_9_3_0 + 10.8482142857142*G24_9_3_1 + 21.6964285714285*G24_9_4_0 + 21.6964285714286*G24_9_4_1 + 65.0892857142855*G24_9_5_0 + 10.8482142857141*G24_9_5_1 - 21.6964285714285*G24_9_6_0 - 32.5446428571427*G24_9_6_1 - 10.8482142857145*G24_9_7_0 + 43.3928571428569*G24_9_7_1 + 2.14783282847554e-13*G24_9_8_0 - 10.8482142857143*G24_9_8_1 - 86.7857142857141*G24_9_9_0 - 65.0892857142854*G24_9_9_1 + 13.3928571428571*G25_0_0_10 + 2.41071428571428*G25_0_0_11 + 2.61160714285713*G25_0_0_12 - 2.20982142857141*G25_0_0_13 - 2.81250000000001*G25_0_0_14 + 40.1785714285714*G25_0_0_15 - 14.0625*G25_0_0_16 + 20.0892857142857*G25_0_0_17 - 10.0446428571429*G25_0_0_18 + 12.0535714285715*G25_0_0_19 + 13.3928571428571*G25_0_1_10 + 2.41071428571428*G25_0_1_11 + 2.61160714285714*G25_0_1_12 - 2.20982142857143*G25_0_1_13 - 2.81250000000002*G25_0_1_14 + 40.1785714285714*G25_0_1_15 - 14.0625*G25_0_1_16 + 20.0892857142857*G25_0_1_17 - 10.0446428571429*G25_0_1_18 + 12.0535714285715*G25_0_1_19 - 2.34375*G25_1_0_10 + 1.40624999999999*G25_1_0_12 + 2.20982142857142*G25_1_0_13 - 2.61160714285713*G25_1_0_14 - 14.8660714285714*G25_1_0_15 + 1.40625000000001*G25_1_0_16 - 0.200892857142888*G25_1_0_17 + 2.8125*G25_1_0_18 - 1.20535714285719*G25_1_0_19 + 4.52421162578208e-14*G25_1_1_14 - 1.26996454233571e-13*G25_1_1_15 + 4.64290018121181e-14*G25_1_1_16 - 4.12326109676912e-14*G25_1_1_17 + 1.99499540559884e-14*G25_1_1_18 - 3.22937225854681e-14*G25_1_1_19 - 0.334821428571448*G25_2_1_10 + 1.8080357142857*G25_2_1_11 + 6.02678571428568*G25_2_1_12 - 6.83035714285709*G25_2_1_13 + 10.0446428571428*G25_2_1_14 + 3.2142857142856*G25_2_1_15 + 14.0625*G25_2_1_16 - 0.200892857142927*G25_2_1_17 - 2.61160714285711*G25_2_1_18 + 9.64285714285704*G25_2_1_19 + 2.00892857142857*G25_3_0_10 - 0.200892857142849*G25_3_0_11 - 6.02678571428568*G25_3_0_12 + 10.8482142857142*G25_3_0_13 + 5.42410714285712*G25_3_0_14 + 21.6964285714286*G25_3_0_15 - 5.42410714285715*G25_3_0_16 - 3.61607142857137*G25_3_0_17 + 1.80803571428567*G25_3_0_18 + 21.6964285714286*G25_3_0_19 + 1.00446428571422*G25_3_1_10 + 1.00446428571427*G25_3_1_11 + 0.401785714285682*G25_3_1_12 + 7.23214285714286*G25_3_1_13 - 3.61607142857146*G25_3_1_14 + 7.23214285714285*G25_3_1_15 - 3.61607142857142*G25_3_1_16 + 1.80803571428562*G25_3_1_17 + 1.80803571428573*G25_3_1_18 + 10.8482142857142*G25_3_1_19 + 5.0223214285714*G25_4_0_10 + 2.81249999999999*G25_4_0_11 + 12.0535714285714*G25_4_0_12 - 10.8482142857142*G25_4_0_13 + 27.1205357142856*G25_4_0_14 - 10.8482142857143*G25_4_0_15 + 27.1205357142856*G25_4_0_16 + 1.8080357142857*G25_4_0_17 - 3.61607142857142*G25_4_0_18 + 21.6964285714285*G25_4_0_19 + 4.01785714285718*G25_4_1_10 - 0.200892857142832*G25_4_1_11 + 1.00446428571431*G25_4_1_12 + 1.80803571428566*G25_4_1_13 + 23.5044642857141*G25_4_1_14 - 14.4642857142853*G25_4_1_15 + 12.6562499999998*G25_4_1_16 - 3.61607142857116*G25_4_1_17 + 1.80803571428559*G25_4_1_18 + 21.6964285714286*G25_4_1_19 + 4.0178571428571*G25_5_0_10 + 7.43303571428569*G25_5_0_11 + 6.02678571428572*G25_5_0_12 - 10.8482142857142*G25_5_0_13 + 5.42410714285712*G25_5_0_14 + 108.482142857142*G25_5_0_15 - 5.42410714285715*G25_5_0_16 + 36.1607142857141*G25_5_0_17 - 23.5044642857142*G25_5_0_18 + 65.0892857142855*G25_5_0_19 - 20.0892857142856*G25_5_1_10 - 1.60714285714286*G25_5_1_12 - 3.61607142857137*G25_5_1_13 + 7.23214285714283*G25_5_1_14 - 2.27122140539215e-13*G25_5_1_15 + 21.6964285714285*G25_5_1_16 - 18.0803571428572*G25_5_1_17 + 3.61607142857148*G25_5_1_18 + 10.8482142857141*G25_5_1_19 - 5.02232142857141*G25_6_0_10 - 2.81249999999999*G25_6_0_11 - 12.0535714285714*G25_6_0_12 + 10.8482142857142*G25_6_0_13 - 27.1205357142856*G25_6_0_14 + 10.8482142857142*G25_6_0_15 - 27.1205357142856*G25_6_0_16 - 1.8080357142857*G25_6_0_17 + 3.61607142857142*G25_6_0_18 - 21.6964285714285*G25_6_0_19 + 7.03124999999999*G25_6_1_10 - 4.21875*G25_6_1_11 - 7.03124999999996*G25_6_1_12 + 12.6562499999999*G25_6_1_13 - 14.4642857142855*G25_6_1_14 - 43.3928571428572*G25_6_1_15 - 21.6964285714283*G25_6_1_16 - 1.80803571428581*G25_6_1_17 + 9.0401785714286*G25_6_1_18 - 32.5446428571427*G25_6_1_19 - 22.0982142857142*G25_7_0_10 - 3.61607142857144*G25_7_0_11 - 3.81696428571429*G25_7_0_12 + 5.42410714285712*G25_7_0_13 + 2.23137480714897e-14*G25_7_0_14 - 72.3214285714286*G25_7_0_15 + 14.4642857142857*G25_7_0_16 - 18.0803571428572*G25_7_0_17 + 14.4642857142858*G25_7_0_18 - 10.8482142857145*G25_7_0_19 + 2.00892857142853*G25_7_1_10 + 3.81696428571427*G25_7_1_11 + 3.81696428571427*G25_7_1_12 - 1.80803571428574*G25_7_1_13 - 1.80803571428578*G25_7_1_14 + 36.1607142857143*G25_7_1_15 - 12.65625*G25_7_1_16 + 36.1607142857142*G25_7_1_17 - 12.65625*G25_7_1_18 + 43.3928571428569*G25_7_1_19 + 11.0491071428571*G25_8_0_10 + 1.20535714285716*G25_8_0_11 - 0.200892857142834*G25_8_0_12 - 5.42410714285712*G25_8_0_13 + 5.42410714285712*G25_8_0_14 + 47.0089285714286*G25_8_0_15 - 1.80803571428577*G25_8_0_16 - 1.80803571428556*G25_8_0_17 - 7.23214285714291*G25_8_0_18 + 2.13118829224881e-13*G25_8_0_19 - 1.00446428571426*G25_8_1_10 - 1.00446428571429*G25_8_1_11 - 0.401785714285704*G25_8_1_12 - 7.23214285714279*G25_8_1_13 + 3.6160714285715*G25_8_1_14 - 7.2321428571431*G25_8_1_15 + 3.61607142857152*G25_8_1_16 - 1.80803571428582*G25_8_1_17 - 1.80803571428563*G25_8_1_18 - 10.8482142857143*G25_8_1_19 - 6.02678571428566*G25_9_0_10 - 7.23214285714284*G25_9_0_11 - 3.52148865623292e-14*G25_9_0_12 - 2.61422827829705e-14*G25_9_0_13 - 10.8482142857142*G25_9_0_14 - 130.178571428571*G25_9_0_15 + 10.8482142857143*G25_9_0_16 - 32.5446428571428*G25_9_0_17 + 21.6964285714286*G25_9_0_18 - 86.7857142857141*G25_9_0_19 - 6.02678571428567*G25_9_1_10 - 3.6160714285714*G25_9_1_11 - 4.82142857142857*G25_9_1_12 - 4.32848201725733e-14*G25_9_1_13 - 21.6964285714286*G25_9_1_14 - 21.6964285714282*G25_9_1_15 - 7.67012321711835e-14*G25_9_1_16 - 32.5446428571426*G25_9_1_17 + 10.8482142857142*G25_9_1_18 - 65.0892857142854*G25_9_1_19;
    A[6] = 0.0750000000000015*G4_0_0_0 + 0.0750000000000019*G4_0_0_1 - 0.0749999999999998*G4_0_1_0 - 1.42499999999999*G4_0_2_1 + 0.674999999999998*G4_0_3_0 + 0.337500000000005*G4_0_3_1 - 3.37499999999999*G4_0_4_0 - 1.68749999999999*G4_0_4_1 - 0.674999999999999*G4_0_5_0 - 0.337499999999997*G4_0_5_1 + 3.37499999999999*G4_0_6_0 + 1.68749999999998*G4_0_6_1 - 0.337499999999995*G4_0_7_1 - 0.337500000000005*G4_0_8_1 + 2.025*G4_0_9_1 + 0.674999999999996*G4_1_0_0 + 0.674999999999996*G4_1_0_1 - 1.34999999999999*G4_1_2_1 + 0.337500000000005*G4_1_3_0 - 1.68749999999998*G4_1_4_0 + 1.67782454596477e-14*G4_1_4_1 - 2.36249999999999*G4_1_5_0 - 2.69999999999999*G4_1_5_1 + 1.68749999999998*G4_1_6_0 + 3.37499999999998*G4_1_6_1 - 0.337499999999997*G4_1_7_0 - 0.337499999999998*G4_1_8_0 + 2.02499999999999*G4_1_9_0 - 1.25802146477838e-14*G4_1_9_1 + 0.0750000000000015*G5_0_0_0 + 0.0750000000000019*G5_0_0_1 - 0.0749999999999998*G5_0_1_0 - 1.42499999999999*G5_0_2_1 + 0.674999999999998*G5_0_3_0 + 0.337500000000005*G5_0_3_1 - 3.37499999999999*G5_0_4_0 - 1.68749999999999*G5_0_4_1 - 0.674999999999999*G5_0_5_0 - 0.337499999999997*G5_0_5_1 + 3.37499999999999*G5_0_6_0 + 1.68749999999998*G5_0_6_1 - 0.337499999999995*G5_0_7_1 - 0.337500000000005*G5_0_8_1 + 2.025*G5_0_9_1 + 0.674999999999996*G5_1_0_0 + 0.674999999999996*G5_1_0_1 - 1.34999999999999*G5_1_2_1 + 0.337500000000005*G5_1_3_0 - 1.68749999999998*G5_1_4_0 + 1.67782454596477e-14*G5_1_4_1 - 2.36249999999999*G5_1_5_0 - 2.69999999999999*G5_1_5_1 + 1.68749999999998*G5_1_6_0 + 3.37499999999998*G5_1_6_1 - 0.337499999999997*G5_1_7_0 - 0.337499999999998*G5_1_8_0 + 2.02499999999999*G5_1_9_0 - 1.25802146477838e-14*G5_1_9_1 - 0.0749999999999997*G6_0_20 - 0.0749999999999997*G6_0_21 + 0.299999999999999*G6_0_22 + 0.299999999999999*G6_0_23 + 0.299999999999999*G6_0_24 + 0.0750000000000001*G6_1_20 + 0.224999999999998*G6_1_22 - 0.300000000000002*G6_1_24 - 0.0375000000000007*G7_0_0_0 - 0.0375000000000009*G7_0_0_1 + 0.0374999999999999*G7_0_1_0 + 0.712499999999997*G7_0_2_1 - 0.337499999999999*G7_0_3_0 - 0.168750000000003*G7_0_3_1 + 1.68749999999999*G7_0_4_0 + 0.843749999999996*G7_0_4_1 + 0.3375*G7_0_5_0 + 0.168749999999999*G7_0_5_1 - 1.68749999999999*G7_0_6_0 - 0.843749999999991*G7_0_6_1 + 0.168749999999998*G7_0_7_1 + 0.168750000000003*G7_0_8_1 - 1.0125*G7_0_9_1 - 0.337499999999998*G7_1_0_0 - 0.337499999999998*G7_1_0_1 + 0.674999999999996*G7_1_2_1 - 0.168750000000003*G7_1_3_0 + 0.84374999999999*G7_1_4_0 + 1.18125*G7_1_5_0 + 1.34999999999999*G7_1_5_1 - 0.843749999999991*G7_1_6_0 - 1.68749999999999*G7_1_6_1 + 0.168749999999999*G7_1_7_0 + 0.168749999999999*G7_1_8_0 - 1.01249999999999*G7_1_9_0 - 0.0375000000000007*G8_0_0_0 - 0.0375000000000009*G8_0_0_1 + 0.0374999999999999*G8_0_1_0 + 0.712499999999997*G8_0_2_1 - 0.337499999999999*G8_0_3_0 - 0.168750000000003*G8_0_3_1 + 1.68749999999999*G8_0_4_0 + 0.843749999999996*G8_0_4_1 + 0.3375*G8_0_5_0 + 0.168749999999999*G8_0_5_1 - 1.68749999999999*G8_0_6_0 - 0.843749999999991*G8_0_6_1 + 0.168749999999998*G8_0_7_1 + 0.168750000000003*G8_0_8_1 - 1.0125*G8_0_9_1 - 0.337499999999998*G8_1_0_0 - 0.337499999999998*G8_1_0_1 + 0.674999999999996*G8_1_2_1 - 0.168750000000003*G8_1_3_0 + 0.84374999999999*G8_1_4_0 + 1.18125*G8_1_5_0 + 1.34999999999999*G8_1_5_1 - 0.843749999999991*G8_1_6_0 - 1.68749999999999*G8_1_6_1 + 0.168749999999999*G8_1_7_0 + 0.168749999999999*G8_1_8_0 - 1.01249999999999*G8_1_9_0 + 0.0374999999999999*G9_0_20 + 0.0374999999999998*G9_0_21 - 0.149999999999999*G9_0_22 - 0.149999999999999*G9_0_23 - 0.149999999999999*G9_0_24 - 0.0375*G9_1_20 - 0.112499999999999*G9_1_22 + 0.150000000000001*G9_1_24 + 0.0750000000000015*G10_0_0_0 + 0.0750000000000019*G10_0_0_1 - 0.0749999999999998*G10_0_1_0 - 1.42499999999999*G10_0_2_1 + 0.674999999999998*G10_0_3_0 + 0.337500000000005*G10_0_3_1 - 3.37499999999999*G10_0_4_0 - 1.68749999999999*G10_0_4_1 - 0.674999999999999*G10_0_5_0 - 0.337499999999997*G10_0_5_1 + 3.37499999999999*G10_0_6_0 + 1.68749999999998*G10_0_6_1 - 0.337499999999995*G10_0_7_1 - 0.337500000000005*G10_0_8_1 + 2.025*G10_0_9_1 + 0.674999999999996*G10_1_0_0 + 0.674999999999996*G10_1_0_1 - 1.34999999999999*G10_1_2_1 + 0.337500000000005*G10_1_3_0 - 1.68749999999998*G10_1_4_0 + 1.67782454596477e-14*G10_1_4_1 - 2.36249999999999*G10_1_5_0 - 2.69999999999999*G10_1_5_1 + 1.68749999999998*G10_1_6_0 + 3.37499999999998*G10_1_6_1 - 0.337499999999997*G10_1_7_0 - 0.337499999999998*G10_1_8_0 + 2.02499999999999*G10_1_9_0 - 1.25802146477838e-14*G10_1_9_1 + 0.0750000000000015*G11_0_10_0 + 0.0750000000000019*G11_0_10_1 - 0.0749999999999998*G11_0_11_0 - 1.42499999999999*G11_0_12_1 + 0.674999999999998*G11_0_13_0 + 0.337500000000005*G11_0_13_1 - 3.37499999999999*G11_0_14_0 - 1.68749999999999*G11_0_14_1 - 0.674999999999999*G11_0_15_0 - 0.337499999999997*G11_0_15_1 + 3.37499999999999*G11_0_16_0 + 1.68749999999998*G11_0_16_1 - 0.337499999999995*G11_0_17_1 - 0.337500000000005*G11_0_18_1 + 2.025*G11_0_19_1 + 0.674999999999996*G11_1_10_0 + 0.674999999999996*G11_1_10_1 - 1.34999999999999*G11_1_12_1 + 0.337500000000005*G11_1_13_0 - 1.68749999999998*G11_1_14_0 + 1.67782454596477e-14*G11_1_14_1 - 2.36249999999999*G11_1_15_0 - 2.69999999999999*G11_1_15_1 + 1.68749999999998*G11_1_16_0 + 3.37499999999998*G11_1_16_1 - 0.337499999999997*G11_1_17_0 - 0.337499999999998*G11_1_18_0 + 2.02499999999999*G11_1_19_0 - 1.25802146477838e-14*G11_1_19_1 - 0.0375000000000007*G12_0_0_0 - 0.0375000000000009*G12_0_0_1 + 0.0374999999999999*G12_0_1_0 + 0.712499999999997*G12_0_2_1 - 0.337499999999999*G12_0_3_0 - 0.168750000000003*G12_0_3_1 + 1.68749999999999*G12_0_4_0 + 0.843749999999996*G12_0_4_1 + 0.3375*G12_0_5_0 + 0.168749999999999*G12_0_5_1 - 1.68749999999999*G12_0_6_0 - 0.843749999999991*G12_0_6_1 + 0.168749999999998*G12_0_7_1 + 0.168750000000003*G12_0_8_1 - 1.0125*G12_0_9_1 - 0.337499999999998*G12_1_0_0 - 0.337499999999998*G12_1_0_1 + 0.674999999999996*G12_1_2_1 - 0.168750000000003*G12_1_3_0 + 0.84374999999999*G12_1_4_0 + 1.18125*G12_1_5_0 + 1.34999999999999*G12_1_5_1 - 0.843749999999991*G12_1_6_0 - 1.68749999999999*G12_1_6_1 + 0.168749999999999*G12_1_7_0 + 0.168749999999999*G12_1_8_0 - 1.01249999999999*G12_1_9_0 - 0.0375000000000007*G13_0_10_0 - 0.0375000000000009*G13_0_10_1 + 0.0374999999999999*G13_0_11_0 + 0.712499999999997*G13_0_12_1 - 0.337499999999999*G13_0_13_0 - 0.168750000000003*G13_0_13_1 + 1.68749999999999*G13_0_14_0 + 0.843749999999996*G13_0_14_1 + 0.3375*G13_0_15_0 + 0.168749999999999*G13_0_15_1 - 1.68749999999999*G13_0_16_0 - 0.843749999999991*G13_0_16_1 + 0.168749999999998*G13_0_17_1 + 0.168750000000003*G13_0_18_1 - 1.0125*G13_0_19_1 - 0.337499999999998*G13_1_10_0 - 0.337499999999998*G13_1_10_1 + 0.674999999999996*G13_1_12_1 - 0.168750000000003*G13_1_13_0 + 0.84374999999999*G13_1_14_0 + 1.18125*G13_1_15_0 + 1.34999999999999*G13_1_15_1 - 0.843749999999991*G13_1_16_0 - 1.68749999999999*G13_1_16_1 + 0.168749999999999*G13_1_17_0 + 0.168749999999999*G13_1_18_0 - 1.01249999999999*G13_1_19_0 + 12.0535714285714*G20_0_0_0 + 12.0535714285714*G20_0_0_1 - 2.8125*G20_0_1_0 + 1.86427266398022e-14*G20_0_1_1 + 5.22321428571423*G20_0_2_1 - 0.401785714285704*G20_0_3_0 - 0.803571428571496*G20_0_3_1 + 15.2678571428571*G20_0_4_0 + 7.63392857142858*G20_0_4_1 + 10.0446428571428*G20_0_5_0 - 14.0624999999999*G20_0_5_1 - 15.2678571428571*G20_0_6_0 - 3.21428571428565*G20_0_6_1 - 22.0982142857142*G20_0_7_0 + 2.00892857142852*G20_0_7_1 + 12.8571428571429*G20_0_8_0 + 0.803571428571458*G20_0_8_1 - 9.6428571428571*G20_0_9_0 - 9.64285714285707*G20_0_9_1 + 3.61607142857141*G20_1_0_0 + 3.61607142857141*G20_1_0_1 - 1.5595814570335e-14*G20_1_1_0 + 2.75526576712318e-14*G20_1_1_1 + 4.82142857142855*G20_1_2_1 - 4.41964285714285*G20_1_3_0 - 2.00892857142864*G20_1_3_1 + 14.8660714285714*G20_1_4_0 + 7.63392857142855*G20_1_4_1 - 2.81249999999999*G20_1_5_0 - 8.43749999999997*G20_1_5_1 - 14.8660714285714*G20_1_6_0 + 5.8043847506184e-14*G20_1_6_1 - 6.02678571428571*G20_1_7_0 - 0.401785714285759*G20_1_7_1 + 2.41071428571431*G20_1_8_0 + 2.00892857142863*G20_1_8_1 + 7.23214285714284*G20_1_9_0 - 7.23214285714285*G20_1_9_1 - 0.66964285714287*G20_2_0_0 - 0.669642857142857*G20_2_0_1 + 4.68749999999997*G20_2_1_0 + 3.40450677932774e-14*G20_2_1_1 + 26.7857142857141*G20_2_2_1 - 24.1071428571427*G20_2_3_0 - 2.00892857142865*G20_2_3_1 + 48.2142857142855*G20_2_4_0 + 4.01785714285718*G20_2_4_1 + 24.1071428571428*G20_2_5_0 + 14.0624999999999*G20_2_5_1 - 48.2142857142855*G20_2_6_0 - 40.1785714285711*G20_2_6_1 - 2.00892857142857*G20_2_7_0 + 8.03571428571426*G20_2_7_1 - 2.00892857142853*G20_2_8_0 + 2.00892857142861*G20_2_8_1 - 4.41591208044656e-14*G20_2_9_0 - 12.0535714285714*G20_2_9_1 - 5.22321428571423*G20_3_0_0 - 5.22321428571419*G20_3_0_1 - 5.62499999999999*G20_3_1_0 - 9.45204329536158e-14*G20_3_1_1 - 20.0892857142856*G20_3_2_1 + 10.8482142857141*G20_3_3_0 - 3.61607142857139*G20_3_3_1 - 54.2410714285711*G20_3_4_0 - 25.3124999999998*G20_3_4_1 + 10.8482142857142*G20_3_5_0 + 18.080357142857*G20_3_5_1 + 54.2410714285711*G20_3_6_0 + 7.23214285714258*G20_3_6_1 + 10.8482142857142*G20_3_7_0 + 3.61607142857152*G20_3_7_1 + 2.25670176989823e-14*G20_3_8_0 + 3.61607142857131*G20_3_8_1 - 21.6964285714283*G20_3_9_0 + 21.6964285714287*G20_3_9_1 - 0.401785714285763*G20_4_0_0 - 0.401785714285836*G20_4_0_1 + 0.401785714285711*G20_4_1_0 + 1.85004665469257e-13*G20_4_1_1 + 40.1785714285712*G20_4_2_1 - 2.34812169708221e-14*G20_4_3_0 - 3.61607142857161*G20_4_3_1 + 108.482142857142*G20_4_4_0 + 72.321428571428*G20_4_4_1 + 3.81916720471054e-14*G20_4_5_0 - 3.61607142857137*G20_4_5_1 - 108.482142857142*G20_4_6_0 - 36.1607142857136*G20_4_6_1 - 10.8482142857142*G20_4_7_0 - 7.23214285714311*G20_4_7_1 + 10.8482142857143*G20_4_8_0 + 3.61607142857178*G20_4_8_1 - 65.0892857142857*G20_4_9_1 + 28.125*G20_5_0_0 + 28.125*G20_5_0_1 - 2.81250000000001*G20_5_1_0 - 9.28580036242362e-14*G20_5_1_1 - 28.1249999999999*G20_5_2_1 + 10.8482142857143*G20_5_3_0 + 7.23214285714284*G20_5_3_1 - 54.2410714285712*G20_5_4_0 - 25.3124999999996*G20_5_4_1 + 10.8482142857143*G20_5_5_0 - 43.392857142857*G20_5_5_1 + 54.2410714285712*G20_5_6_0 + 43.3928571428567*G20_5_6_1 - 28.9285714285715*G20_5_7_0 + 25.3125*G20_5_7_1 + 3.61607142857154*G20_5_8_0 - 7.23214285714304*G20_5_8_1 - 21.6964285714286*G20_5_9_0 + 1.53400729618891e-13*G20_5_9_1 + 6.42857142857123*G20_6_0_0 + 6.4285714285711*G20_6_0_1 + 29.7321428571428*G20_6_1_0 + 4.24200165781186e-13*G20_6_1_1 + 80.3571428571425*G20_6_2_1 - 108.482142857143*G20_6_3_0 - 14.4642857142863*G20_6_3_1 + 216.964285714285*G20_6_4_0 + 72.3214285714279*G20_6_4_1 - 108.482142857142*G20_6_5_0 - 86.7857142857137*G20_6_5_1 - 216.964285714285*G20_6_6_0 + 8.57449528046672e-13*G20_6_6_1 - 7.23214285714259*G20_6_7_0 - 28.9285714285717*G20_6_7_1 - 28.9285714285714*G20_6_8_0 + 14.4642857142864*G20_6_8_1 + 216.964285714285*G20_6_9_0 - 43.3928571428574*G20_6_9_1 + 20.0892857142857*G20_7_0_0 + 20.0892857142857*G20_7_0_1 + 5.22321428571423*G20_7_1_0 - 4.25653138234058e-14*G20_7_1_1 - 5.62500000000006*G20_7_2_1 - 3.61607142857133*G20_7_3_0 + 7.23214285714275*G20_7_3_1 - 3.61607142857144*G20_7_4_0 - 3.61607142857114*G20_7_4_1 + 25.3125*G20_7_5_0 - 28.9285714285714*G20_7_5_1 + 3.61607142857144*G20_7_6_0 + 14.4642857142855*G20_7_6_1 - 7.23214285714301*G20_7_7_0 + 47.0089285714285*G20_7_7_1 - 18.0803571428569*G20_7_8_0 - 7.23214285714295*G20_7_8_1 - 21.6964285714286*G20_7_9_0 - 43.3928571428569*G20_7_9_1 - 13.6607142857143*G20_8_0_0 - 13.6607142857142*G20_8_0_1 - 4.41964285714284*G20_8_1_0 - 2.65814518476759e-14*G20_8_1_1 - 4.41964285714286*G20_8_2_1 - 3.61607142857145*G20_8_3_0 - 14.4642857142857*G20_8_3_1 - 14.4642857142857*G20_8_4_0 - 3.61607142857139*G20_8_4_1 + 3.61607142857138*G20_8_5_0 + 25.3124999999999*G20_8_5_1 + 14.4642857142857*G20_8_6_0 - 7.23214285714289*G20_8_6_1 + 25.3125*G20_8_7_0 + 3.61607142857153*G20_8_7_1 - 7.23214285714289*G20_8_8_0 + 14.4642857142856*G20_8_8_1 + 7.21541424698879e-14*G20_8_9_0 + 8.43033867541088e-14*G20_8_9_1 + 19.2857142857142*G20_9_0_0 + 19.2857142857142*G20_9_0_1 + 2.41071428571426*G20_9_1_0 + 2.04961862571895e-13*G20_9_1_1 + 24.1071428571427*G20_9_2_1 - 21.6964285714287*G20_9_3_0 - 21.696428571429*G20_9_3_1 + 108.482142857142*G20_9_4_0 + 86.7857142857139*G20_9_4_1 - 21.6964285714283*G20_9_5_0 - 65.0892857142855*G20_9_5_1 - 108.482142857142*G20_9_6_0 + 21.6964285714289*G20_9_6_1 - 2.07804693591607e-14*G20_9_7_0 + 43.3928571428569*G20_9_7_1 - 21.6964285714284*G20_9_8_0 + 21.6964285714288*G20_9_8_1 + 43.392857142857*G20_9_9_0 - 130.178571428571*G20_9_9_1 + 12.0535714285714*G21_0_0_10 + 3.61607142857141*G21_0_0_11 - 0.66964285714287*G21_0_0_12 - 5.22321428571423*G21_0_0_13 - 0.401785714285763*G21_0_0_14 + 28.125*G21_0_0_15 + 6.42857142857123*G21_0_0_16 + 20.0892857142857*G21_0_0_17 - 13.6607142857143*G21_0_0_18 + 19.2857142857142*G21_0_0_19 + 12.0535714285714*G21_0_1_10 + 3.61607142857141*G21_0_1_11 - 0.669642857142857*G21_0_1_12 - 5.22321428571418*G21_0_1_13 - 0.401785714285836*G21_0_1_14 + 28.125*G21_0_1_15 + 6.4285714285711*G21_0_1_16 + 20.0892857142857*G21_0_1_17 - 13.6607142857142*G21_0_1_18 + 19.2857142857142*G21_0_1_19 - 2.8125*G21_1_0_10 - 1.52627476629474e-14*G21_1_0_11 + 4.68749999999997*G21_1_0_12 - 5.62499999999999*G21_1_0_13 + 0.401785714285712*G21_1_0_14 - 2.81250000000001*G21_1_0_15 + 29.7321428571428*G21_1_0_16 + 5.22321428571423*G21_1_0_17 - 4.41964285714284*G21_1_0_18 + 2.41071428571426*G21_1_0_19 + 1.86427266398022e-14*G21_1_1_10 + 2.75526576712318e-14*G21_1_1_11 + 3.40450677932774e-14*G21_1_1_12 - 9.45204329536158e-14*G21_1_1_13 + 1.85004665469257e-13*G21_1_1_14 - 9.28580036242362e-14*G21_1_1_15 + 4.24200165781186e-13*G21_1_1_16 - 4.25653138234058e-14*G21_1_1_17 - 2.65814518476759e-14*G21_1_1_18 + 2.04961862571895e-13*G21_1_1_19 + 5.22321428571423*G21_2_1_10 + 4.82142857142855*G21_2_1_11 + 26.7857142857141*G21_2_1_12 - 20.0892857142856*G21_2_1_13 + 40.1785714285712*G21_2_1_14 - 28.1249999999999*G21_2_1_15 + 80.3571428571425*G21_2_1_16 - 5.62500000000006*G21_2_1_17 - 4.41964285714286*G21_2_1_18 + 24.1071428571427*G21_2_1_19 - 0.401785714285705*G21_3_0_10 - 4.41964285714286*G21_3_0_11 - 24.1071428571427*G21_3_0_12 + 10.8482142857141*G21_3_0_13 - 2.54796184151473e-14*G21_3_0_14 + 10.8482142857143*G21_3_0_15 - 108.482142857143*G21_3_0_16 - 3.61607142857132*G21_3_0_17 - 3.61607142857145*G21_3_0_18 - 21.6964285714287*G21_3_0_19 - 0.803571428571496*G21_3_1_10 - 2.00892857142864*G21_3_1_11 - 2.00892857142865*G21_3_1_12 - 3.61607142857139*G21_3_1_13 - 3.61607142857161*G21_3_1_14 + 7.23214285714284*G21_3_1_15 - 14.4642857142863*G21_3_1_16 + 7.23214285714275*G21_3_1_17 - 14.4642857142857*G21_3_1_18 - 21.696428571429*G21_3_1_19 + 15.2678571428571*G21_4_0_10 + 14.8660714285714*G21_4_0_11 + 48.2142857142855*G21_4_0_12 - 54.2410714285711*G21_4_0_13 + 108.482142857142*G21_4_0_14 - 54.2410714285712*G21_4_0_15 + 216.964285714285*G21_4_0_16 - 3.61607142857144*G21_4_0_17 - 14.4642857142857*G21_4_0_18 + 108.482142857142*G21_4_0_19 + 7.63392857142858*G21_4_1_10 + 7.63392857142855*G21_4_1_11 + 4.01785714285718*G21_4_1_12 - 25.3124999999998*G21_4_1_13 + 72.321428571428*G21_4_1_14 - 25.3124999999996*G21_4_1_15 + 72.3214285714279*G21_4_1_16 - 3.61607142857114*G21_4_1_17 - 3.61607142857139*G21_4_1_18 + 86.7857142857139*G21_4_1_19 + 10.0446428571428*G21_5_0_10 - 2.81249999999999*G21_5_0_11 + 24.1071428571428*G21_5_0_12 + 10.8482142857142*G21_5_0_13 + 2.93098878501041e-14*G21_5_0_14 + 10.8482142857143*G21_5_0_15 - 108.482142857142*G21_5_0_16 + 25.3125*G21_5_0_17 + 3.61607142857138*G21_5_0_18 - 21.6964285714283*G21_5_0_19 - 14.0624999999999*G21_5_1_10 - 8.43749999999997*G21_5_1_11 + 14.0624999999999*G21_5_1_12 + 18.080357142857*G21_5_1_13 - 3.61607142857137*G21_5_1_14 - 43.392857142857*G21_5_1_15 - 86.7857142857137*G21_5_1_16 - 28.9285714285714*G21_5_1_17 + 25.3124999999999*G21_5_1_18 - 65.0892857142855*G21_5_1_19 - 15.2678571428571*G21_6_0_10 - 14.8660714285714*G21_6_0_11 - 48.2142857142855*G21_6_0_12 + 54.2410714285711*G21_6_0_13 - 108.482142857142*G21_6_0_14 + 54.2410714285712*G21_6_0_15 - 216.964285714285*G21_6_0_16 + 3.61607142857144*G21_6_0_17 + 14.4642857142857*G21_6_0_18 - 108.482142857142*G21_6_0_19 - 3.21428571428565*G21_6_1_10 + 5.79328252037214e-14*G21_6_1_11 - 40.1785714285711*G21_6_1_12 + 7.23214285714258*G21_6_1_13 - 36.1607142857136*G21_6_1_14 + 43.3928571428567*G21_6_1_15 + 8.56564819073924e-13*G21_6_1_16 + 14.4642857142855*G21_6_1_17 - 7.23214285714289*G21_6_1_18 + 21.6964285714289*G21_6_1_19 - 22.0982142857142*G21_7_0_10 - 6.02678571428571*G21_7_0_11 - 2.00892857142857*G21_7_0_12 + 10.8482142857142*G21_7_0_13 - 10.8482142857142*G21_7_0_14 - 28.9285714285715*G21_7_0_15 - 7.23214285714259*G21_7_0_16 - 7.23214285714301*G21_7_0_17 + 25.3125*G21_7_0_18 - 2.24874372595218e-14*G21_7_0_19 + 2.00892857142852*G21_7_1_10 - 0.401785714285758*G21_7_1_11 + 8.03571428571426*G21_7_1_12 + 3.61607142857152*G21_7_1_13 - 7.23214285714311*G21_7_1_14 + 25.3125*G21_7_1_15 - 28.9285714285717*G21_7_1_16 + 47.0089285714284*G21_7_1_17 + 3.61607142857152*G21_7_1_18 + 43.3928571428569*G21_7_1_19 + 12.8571428571428*G21_8_0_10 + 2.41071428571431*G21_8_0_11 - 2.00892857142853*G21_8_0_12 + 2.21229284891322e-14*G21_8_0_13 + 10.8482142857143*G21_8_0_14 + 3.61607142857153*G21_8_0_15 - 28.9285714285714*G21_8_0_16 - 18.0803571428569*G21_8_0_17 - 7.23214285714289*G21_8_0_18 - 21.6964285714284*G21_8_0_19 + 0.803571428571458*G21_8_1_10 + 2.00892857142863*G21_8_1_11 + 2.00892857142861*G21_8_1_12 + 3.61607142857131*G21_8_1_13 + 3.61607142857178*G21_8_1_14 - 7.23214285714303*G21_8_1_15 + 14.4642857142864*G21_8_1_16 - 7.23214285714295*G21_8_1_17 + 14.4642857142856*G21_8_1_18 + 21.6964285714288*G21_8_1_19 - 9.6428571428571*G21_9_0_10 + 7.23214285714284*G21_9_0_11 - 4.40480985020031e-14*G21_9_0_12 - 21.6964285714283*G21_9_0_13 - 21.6964285714286*G21_9_0_15 + 216.964285714285*G21_9_0_16 - 21.6964285714286*G21_9_0_17 + 7.45966873341719e-14*G21_9_0_18 + 43.392857142857*G21_9_0_19 - 9.64285714285707*G21_9_1_10 - 7.23214285714285*G21_9_1_11 - 12.0535714285714*G21_9_1_12 + 21.6964285714287*G21_9_1_13 - 65.0892857142857*G21_9_1_14 + 1.55205709395645e-13*G21_9_1_15 - 43.3928571428574*G21_9_1_16 - 43.3928571428569*G21_9_1_17 + 8.43866534809556e-14*G21_9_1_18 - 130.178571428571*G21_9_1_19 - 6.02678571428569*G24_0_0_0 - 6.02678571428569*G24_0_0_1 + 1.40625*G24_0_1_0 - 2.61160714285712*G24_0_2_1 + 0.200892857142852*G24_0_3_0 + 0.401785714285748*G24_0_3_1 - 7.63392857142853*G24_0_4_0 - 3.81696428571429*G24_0_4_1 - 5.02232142857141*G24_0_5_0 + 7.03124999999997*G24_0_5_1 + 7.63392857142853*G24_0_6_0 + 1.60714285714283*G24_0_6_1 + 11.0491071428571*G24_0_7_0 - 1.00446428571426*G24_0_7_1 - 6.42857142857143*G24_0_8_0 - 0.401785714285729*G24_0_8_1 + 4.82142857142855*G24_0_9_0 + 4.82142857142854*G24_0_9_1 - 1.80803571428571*G24_1_0_0 - 1.8080357142857*G24_1_0_1 - 1.37763288356159e-14*G24_1_1_1 - 2.41071428571427*G24_1_2_1 + 2.20982142857143*G24_1_3_0 + 1.00446428571432*G24_1_3_1 - 7.43303571428569*G24_1_4_0 - 3.81696428571428*G24_1_4_1 + 1.40624999999999*G24_1_5_0 + 4.21874999999999*G24_1_5_1 + 7.43303571428569*G24_1_6_0 - 2.9021923753092e-14*G24_1_6_1 + 3.01339285714286*G24_1_7_0 + 0.200892857142879*G24_1_7_1 - 1.20535714285716*G24_1_8_0 - 1.00446428571431*G24_1_8_1 - 3.61607142857142*G24_1_9_0 + 3.61607142857142*G24_1_9_1 + 0.334821428571435*G24_2_0_0 + 0.334821428571429*G24_2_0_1 - 2.34374999999998*G24_2_1_0 - 1.70225338966387e-14*G24_2_1_1 - 13.3928571428571*G24_2_2_1 + 12.0535714285714*G24_2_3_0 + 1.00446428571433*G24_2_3_1 - 24.1071428571427*G24_2_4_0 - 2.00892857142859*G24_2_4_1 - 12.0535714285714*G24_2_5_0 - 7.03124999999994*G24_2_5_1 + 24.1071428571427*G24_2_6_0 + 20.0892857142856*G24_2_6_1 + 1.00446428571429*G24_2_7_0 - 4.01785714285713*G24_2_7_1 + 1.00446428571427*G24_2_8_0 - 1.0044642857143*G24_2_8_1 + 2.20795604022328e-14*G24_2_9_0 + 6.02678571428572*G24_2_9_1 + 2.61160714285711*G24_3_0_0 + 2.61160714285709*G24_3_0_1 + 2.8125*G24_3_1_0 + 4.72602164768079e-14*G24_3_1_1 + 10.0446428571428*G24_3_2_1 - 5.42410714285707*G24_3_3_0 + 1.80803571428569*G24_3_3_1 + 27.1205357142856*G24_3_4_0 + 12.6562499999999*G24_3_4_1 - 5.42410714285708*G24_3_5_0 - 9.04017857142849*G24_3_5_1 - 27.1205357142856*G24_3_6_0 - 3.61607142857129*G24_3_6_1 - 5.4241071428571*G24_3_7_0 - 1.80803571428576*G24_3_7_1 - 1.12835088494911e-14*G24_3_8_0 - 1.80803571428565*G24_3_8_1 + 10.8482142857142*G24_3_9_0 - 10.8482142857143*G24_3_9_1 + 0.200892857142881*G24_4_0_0 + 0.200892857142918*G24_4_0_1 - 0.200892857142856*G24_4_1_0 - 9.25023327346287e-14*G24_4_1_1 - 20.0892857142856*G24_4_2_1 + 1.1740608485411e-14*G24_4_3_0 + 1.8080357142858*G24_4_3_1 - 54.2410714285712*G24_4_4_0 - 36.160714285714*G24_4_4_1 - 1.90958360235527e-14*G24_4_5_0 + 1.80803571428569*G24_4_5_1 + 54.2410714285712*G24_4_6_0 + 18.0803571428568*G24_4_6_1 + 5.42410714285711*G24_4_7_0 + 3.61607142857156*G24_4_7_1 - 5.42410714285713*G24_4_8_0 - 1.80803571428589*G24_4_8_1 + 32.5446428571428*G24_4_9_1 - 14.0625*G24_5_0_0 - 14.0625*G24_5_0_1 + 1.40625000000001*G24_5_1_0 + 4.64290018121181e-14*G24_5_1_1 + 14.0625*G24_5_2_1 - 5.42410714285715*G24_5_3_0 - 3.61607142857142*G24_5_3_1 + 27.1205357142856*G24_5_4_0 + 12.6562499999998*G24_5_4_1 - 5.42410714285715*G24_5_5_0 + 21.6964285714285*G24_5_5_1 - 27.1205357142856*G24_5_6_0 - 21.6964285714283*G24_5_6_1 + 14.4642857142857*G24_5_7_0 - 12.65625*G24_5_7_1 - 1.80803571428577*G24_5_8_0 + 3.61607142857152*G24_5_8_1 + 10.8482142857143*G24_5_9_0 - 7.67003648094455e-14*G24_5_9_1 - 3.21428571428561*G24_6_0_0 - 3.21428571428555*G24_6_0_1 - 14.8660714285714*G24_6_1_0 - 2.12100082890593e-13*G24_6_1_1 - 40.1785714285712*G24_6_2_1 + 54.2410714285713*G24_6_3_0 + 7.23214285714313*G24_6_3_1 - 108.482142857142*G24_6_4_0 - 36.1607142857139*G24_6_4_1 + 54.2410714285712*G24_6_5_0 + 43.3928571428569*G24_6_5_1 + 108.482142857142*G24_6_6_0 - 4.28724764023336e-13*G24_6_6_1 + 3.6160714285713*G24_6_7_0 + 14.4642857142859*G24_6_7_1 + 14.4642857142857*G24_6_8_0 - 7.23214285714319*G24_6_8_1 - 108.482142857142*G24_6_9_0 + 21.6964285714287*G24_6_9_1 - 10.0446428571428*G24_7_0_0 - 10.0446428571429*G24_7_0_1 - 2.61160714285711*G24_7_1_0 + 2.12826569117029e-14*G24_7_1_1 + 2.81250000000003*G24_7_2_1 + 1.80803571428566*G24_7_3_0 - 3.61607142857138*G24_7_3_1 + 1.80803571428572*G24_7_4_0 + 1.80803571428557*G24_7_4_1 - 12.65625*G24_7_5_0 + 14.4642857142857*G24_7_5_1 - 1.80803571428572*G24_7_6_0 - 7.23214285714277*G24_7_6_1 + 3.6160714285715*G24_7_7_0 - 23.5044642857142*G24_7_7_1 + 9.04017857142845*G24_7_8_0 + 3.61607142857148*G24_7_8_1 + 10.8482142857143*G24_7_9_0 + 21.6964285714284*G24_7_9_1 + 6.83035714285713*G24_8_0_0 + 6.83035714285711*G24_8_0_1 + 2.20982142857142*G24_8_1_0 + 1.32907259238379e-14*G24_8_1_1 + 2.20982142857143*G24_8_2_1 + 1.80803571428573*G24_8_3_0 + 7.23214285714283*G24_8_3_1 + 7.23214285714284*G24_8_4_0 + 1.8080357142857*G24_8_4_1 - 1.80803571428569*G24_8_5_0 - 12.6562499999999*G24_8_5_1 - 7.23214285714285*G24_8_6_0 + 3.61607142857145*G24_8_6_1 - 12.65625*G24_8_7_0 - 1.80803571428576*G24_8_7_1 + 3.61607142857144*G24_8_8_0 - 7.23214285714279*G24_8_8_1 - 3.6077071234944e-14*G24_8_9_0 - 4.21516933770544e-14*G24_8_9_1 - 9.64285714285709*G24_9_0_0 - 9.64285714285708*G24_9_0_1 - 1.20535714285713*G24_9_1_0 - 1.02480931285948e-13*G24_9_1_1 - 12.0535714285713*G24_9_2_1 + 10.8482142857144*G24_9_3_0 + 10.8482142857145*G24_9_3_1 - 54.2410714285712*G24_9_4_0 - 43.3928571428569*G24_9_4_1 + 10.8482142857142*G24_9_5_0 + 32.5446428571428*G24_9_5_1 + 54.2410714285712*G24_9_6_0 - 10.8482142857144*G24_9_6_1 + 1.03902346795803e-14*G24_9_7_0 - 21.6964285714285*G24_9_7_1 + 10.8482142857142*G24_9_8_0 - 10.8482142857144*G24_9_8_1 - 21.6964285714285*G24_9_9_0 + 65.0892857142855*G24_9_9_1 - 6.02678571428569*G25_0_0_10 - 1.80803571428571*G25_0_0_11 + 0.334821428571435*G25_0_0_12 + 2.61160714285711*G25_0_0_13 + 0.200892857142881*G25_0_0_14 - 14.0625*G25_0_0_15 - 3.21428571428561*G25_0_0_16 - 10.0446428571428*G25_0_0_17 + 6.83035714285713*G25_0_0_18 - 9.64285714285709*G25_0_0_19 - 6.02678571428569*G25_0_1_10 - 1.8080357142857*G25_0_1_11 + 0.334821428571429*G25_0_1_12 + 2.61160714285709*G25_0_1_13 + 0.200892857142918*G25_0_1_14 - 14.0625*G25_0_1_15 - 3.21428571428555*G25_0_1_16 - 10.0446428571429*G25_0_1_17 + 6.83035714285711*G25_0_1_18 - 9.64285714285708*G25_0_1_19 + 1.40625*G25_1_0_10 - 2.34374999999998*G25_1_0_12 + 2.8125*G25_1_0_13 - 0.200892857142856*G25_1_0_14 + 1.40625000000001*G25_1_0_15 - 14.8660714285714*G25_1_0_16 - 2.61160714285711*G25_1_0_17 + 2.20982142857142*G25_1_0_18 - 1.20535714285713*G25_1_0_19 - 1.37763288356159e-14*G25_1_1_11 - 1.70225338966387e-14*G25_1_1_12 + 4.72602164768079e-14*G25_1_1_13 - 9.25023327346287e-14*G25_1_1_14 + 4.64290018121181e-14*G25_1_1_15 - 2.12100082890593e-13*G25_1_1_16 + 2.12826569117029e-14*G25_1_1_17 + 1.32907259238379e-14*G25_1_1_18 - 1.02480931285948e-13*G25_1_1_19 - 2.61160714285712*G25_2_1_10 - 2.41071428571427*G25_2_1_11 - 13.3928571428571*G25_2_1_12 + 10.0446428571428*G25_2_1_13 - 20.0892857142856*G25_2_1_14 + 14.0625*G25_2_1_15 - 40.1785714285712*G25_2_1_16 + 2.81250000000003*G25_2_1_17 + 2.20982142857143*G25_2_1_18 - 12.0535714285713*G25_2_1_19 + 0.200892857142852*G25_3_0_10 + 2.20982142857143*G25_3_0_11 + 12.0535714285714*G25_3_0_12 - 5.42410714285706*G25_3_0_13 + 1.27398092075737e-14*G25_3_0_14 - 5.42410714285715*G25_3_0_15 + 54.2410714285713*G25_3_0_16 + 1.80803571428566*G25_3_0_17 + 1.80803571428573*G25_3_0_18 + 10.8482142857144*G25_3_0_19 + 0.401785714285748*G25_3_1_10 + 1.00446428571432*G25_3_1_11 + 1.00446428571433*G25_3_1_12 + 1.80803571428569*G25_3_1_13 + 1.8080357142858*G25_3_1_14 - 3.61607142857142*G25_3_1_15 + 7.23214285714313*G25_3_1_16 - 3.61607142857138*G25_3_1_17 + 7.23214285714283*G25_3_1_18 + 10.8482142857145*G25_3_1_19 - 7.63392857142853*G25_4_0_10 - 7.43303571428569*G25_4_0_11 - 24.1071428571427*G25_4_0_12 + 27.1205357142856*G25_4_0_13 - 54.2410714285712*G25_4_0_14 + 27.1205357142856*G25_4_0_15 - 108.482142857142*G25_4_0_16 + 1.80803571428572*G25_4_0_17 + 7.23214285714285*G25_4_0_18 - 54.2410714285712*G25_4_0_19 - 3.81696428571429*G25_4_1_10 - 3.81696428571428*G25_4_1_11 - 2.00892857142859*G25_4_1_12 + 12.6562499999999*G25_4_1_13 - 36.160714285714*G25_4_1_14 + 12.6562499999998*G25_4_1_15 - 36.1607142857139*G25_4_1_16 + 1.80803571428557*G25_4_1_17 + 1.8080357142857*G25_4_1_18 - 43.3928571428569*G25_4_1_19 - 5.02232142857141*G25_5_0_10 + 1.40624999999999*G25_5_0_11 - 12.0535714285714*G25_5_0_12 - 5.42410714285708*G25_5_0_13 - 1.46549439250521e-14*G25_5_0_14 - 5.42410714285715*G25_5_0_15 + 54.2410714285712*G25_5_0_16 - 12.65625*G25_5_0_17 - 1.80803571428569*G25_5_0_18 + 10.8482142857142*G25_5_0_19 + 7.03124999999997*G25_5_1_10 + 4.21874999999999*G25_5_1_11 - 7.03124999999994*G25_5_1_12 - 9.04017857142849*G25_5_1_13 + 1.80803571428569*G25_5_1_14 + 21.6964285714285*G25_5_1_15 + 43.3928571428569*G25_5_1_16 + 14.4642857142857*G25_5_1_17 - 12.6562499999999*G25_5_1_18 + 32.5446428571428*G25_5_1_19 + 7.63392857142853*G25_6_0_10 + 7.43303571428569*G25_6_0_11 + 24.1071428571427*G25_6_0_12 - 27.1205357142856*G25_6_0_13 + 54.2410714285712*G25_6_0_14 - 27.1205357142856*G25_6_0_15 + 108.482142857142*G25_6_0_16 - 1.80803571428572*G25_6_0_17 - 7.23214285714285*G25_6_0_18 + 54.2410714285712*G25_6_0_19 + 1.60714285714283*G25_6_1_10 - 2.89664126018607e-14*G25_6_1_11 + 20.0892857142856*G25_6_1_12 - 3.61607142857129*G25_6_1_13 + 18.0803571428568*G25_6_1_14 - 21.6964285714283*G25_6_1_15 - 4.28282409536962e-13*G25_6_1_16 - 7.23214285714277*G25_6_1_17 + 3.61607142857145*G25_6_1_18 - 10.8482142857144*G25_6_1_19 + 11.0491071428571*G25_7_0_10 + 3.01339285714286*G25_7_0_11 + 1.00446428571429*G25_7_0_12 - 5.4241071428571*G25_7_0_13 + 5.42410714285711*G25_7_0_14 + 14.4642857142857*G25_7_0_15 + 3.6160714285713*G25_7_0_16 + 3.6160714285715*G25_7_0_17 - 12.65625*G25_7_0_18 + 1.12437186297609e-14*G25_7_0_19 - 1.00446428571426*G25_7_1_10 + 0.200892857142879*G25_7_1_11 - 4.01785714285713*G25_7_1_12 - 1.80803571428576*G25_7_1_13 + 3.61607142857156*G25_7_1_14 - 12.65625*G25_7_1_15 + 14.4642857142859*G25_7_1_16 - 23.5044642857142*G25_7_1_17 - 1.80803571428576*G25_7_1_18 - 21.6964285714285*G25_7_1_19 - 6.42857142857142*G25_8_0_10 - 1.20535714285716*G25_8_0_11 + 1.00446428571427*G25_8_0_12 - 1.10614642445661e-14*G25_8_0_13 - 5.42410714285713*G25_8_0_14 - 1.80803571428577*G25_8_0_15 + 14.4642857142857*G25_8_0_16 + 9.04017857142845*G25_8_0_17 + 3.61607142857144*G25_8_0_18 + 10.8482142857142*G25_8_0_19 - 0.401785714285729*G25_8_1_10 - 1.00446428571431*G25_8_1_11 - 1.0044642857143*G25_8_1_12 - 1.80803571428565*G25_8_1_13 - 1.80803571428589*G25_8_1_14 + 3.61607142857152*G25_8_1_15 - 7.23214285714319*G25_8_1_16 + 3.61607142857148*G25_8_1_17 - 7.23214285714279*G25_8_1_18 - 10.8482142857144*G25_8_1_19 + 4.82142857142855*G25_9_0_10 - 3.61607142857142*G25_9_0_11 + 2.20240492510015e-14*G25_9_0_12 + 10.8482142857142*G25_9_0_13 + 10.8482142857143*G25_9_0_15 - 108.482142857143*G25_9_0_16 + 10.8482142857143*G25_9_0_17 - 3.7298343667086e-14*G25_9_0_18 - 21.6964285714285*G25_9_0_19 + 4.82142857142854*G25_9_1_10 + 3.61607142857142*G25_9_1_11 + 6.02678571428572*G25_9_1_12 - 10.8482142857143*G25_9_1_13 + 32.5446428571428*G25_9_1_14 - 7.76028546978225e-14*G25_9_1_15 + 21.6964285714287*G25_9_1_16 + 21.6964285714284*G25_9_1_17 - 4.21933267404778e-14*G25_9_1_18 + 65.0892857142855*G25_9_1_19;
    A[7] = -1.35*G4_0_0_0 - 1.35*G4_0_0_1 + 0.674999999999993*G4_0_1_0 + 0.33749999999999*G4_0_3_1 + 0.337499999999997*G4_0_4_1 + 1.68749999999999*G4_0_5_1 - 0.337499999999997*G4_0_6_1 + 3.37499999999999*G4_0_7_0 + 1.68749999999998*G4_0_7_1 - 2.69999999999998*G4_0_8_0 - 0.337499999999988*G4_0_8_1 + 1.64412754244392e-14*G4_0_9_0 - 2.02499999999998*G4_0_9_1 + 0.0750000000000024*G4_1_0_0 + 0.075000000000004*G4_1_0_1 + 0.599999999999989*G4_1_1_0 - 0.075000000000005*G4_1_2_1 + 0.337499999999988*G4_1_3_0 + 0.674999999999976*G4_1_3_1 + 0.337499999999995*G4_1_4_0 + 0.675000000000003*G4_1_4_1 + 1.68749999999999*G4_1_5_0 - 0.337499999999995*G4_1_6_0 + 1.68749999999998*G4_1_7_0 + 3.37499999999999*G4_1_7_1 - 2.36249999999998*G4_1_8_0 - 0.674999999999982*G4_1_8_1 - 2.02499999999998*G4_1_9_0 - 4.04999999999998*G4_1_9_1 - 1.35*G5_0_0_0 - 1.35*G5_0_0_1 + 0.674999999999993*G5_0_1_0 + 0.33749999999999*G5_0_3_1 + 0.337499999999997*G5_0_4_1 + 1.68749999999999*G5_0_5_1 - 0.337499999999997*G5_0_6_1 + 3.37499999999999*G5_0_7_0 + 1.68749999999998*G5_0_7_1 - 2.69999999999998*G5_0_8_0 - 0.337499999999988*G5_0_8_1 + 1.64412754244392e-14*G5_0_9_0 - 2.02499999999998*G5_0_9_1 + 0.0750000000000024*G5_1_0_0 + 0.075000000000004*G5_1_0_1 + 0.599999999999989*G5_1_1_0 - 0.075000000000005*G5_1_2_1 + 0.337499999999988*G5_1_3_0 + 0.674999999999976*G5_1_3_1 + 0.337499999999995*G5_1_4_0 + 0.675000000000003*G5_1_4_1 + 1.68749999999999*G5_1_5_0 - 0.337499999999995*G5_1_6_0 + 1.68749999999998*G5_1_7_0 + 3.37499999999999*G5_1_7_1 - 2.36249999999998*G5_1_8_0 - 0.674999999999982*G5_1_8_1 - 2.02499999999998*G5_1_9_0 - 4.04999999999998*G5_1_9_1 - 0.225*G6_0_20 - 0.0749999999999986*G6_0_21 + 0.299999999999998*G6_0_25 + 0.074999999999999*G6_1_20 - 0.149999999999998*G6_1_21 - 0.0749999999999999*G6_1_22 + 0.3*G6_1_24 + 0.6*G6_1_25 + 0.674999999999998*G7_0_0_0 + 0.674999999999998*G7_0_0_1 - 0.337499999999997*G7_0_1_0 - 0.168749999999995*G7_0_3_1 - 0.168749999999998*G7_0_4_1 - 0.843749999999997*G7_0_5_1 + 0.168749999999999*G7_0_6_1 - 1.68749999999999*G7_0_7_0 - 0.843749999999992*G7_0_7_1 + 1.34999999999999*G7_0_8_0 + 0.168749999999994*G7_0_8_1 + 1.01249999999999*G7_0_9_1 - 0.0375000000000012*G7_1_0_0 - 0.037500000000002*G7_1_0_1 - 0.299999999999995*G7_1_1_0 + 0.0375000000000025*G7_1_2_1 - 0.168749999999994*G7_1_3_0 - 0.337499999999988*G7_1_3_1 - 0.168749999999997*G7_1_4_0 - 0.337500000000002*G7_1_4_1 - 0.843749999999997*G7_1_5_0 + 0.168749999999998*G7_1_6_0 - 0.843749999999992*G7_1_7_0 - 1.68749999999999*G7_1_7_1 + 1.18124999999999*G7_1_8_0 + 0.337499999999991*G7_1_8_1 + 1.01249999999999*G7_1_9_0 + 2.02499999999999*G7_1_9_1 + 0.674999999999998*G8_0_0_0 + 0.674999999999998*G8_0_0_1 - 0.337499999999997*G8_0_1_0 - 0.168749999999995*G8_0_3_1 - 0.168749999999998*G8_0_4_1 - 0.843749999999997*G8_0_5_1 + 0.168749999999999*G8_0_6_1 - 1.68749999999999*G8_0_7_0 - 0.843749999999992*G8_0_7_1 + 1.34999999999999*G8_0_8_0 + 0.168749999999994*G8_0_8_1 + 1.01249999999999*G8_0_9_1 - 0.0375000000000012*G8_1_0_0 - 0.037500000000002*G8_1_0_1 - 0.299999999999995*G8_1_1_0 + 0.0375000000000025*G8_1_2_1 - 0.168749999999994*G8_1_3_0 - 0.337499999999988*G8_1_3_1 - 0.168749999999997*G8_1_4_0 - 0.337500000000002*G8_1_4_1 - 0.843749999999997*G8_1_5_0 + 0.168749999999998*G8_1_6_0 - 0.843749999999992*G8_1_7_0 - 1.68749999999999*G8_1_7_1 + 1.18124999999999*G8_1_8_0 + 0.337499999999991*G8_1_8_1 + 1.01249999999999*G8_1_9_0 + 2.02499999999999*G8_1_9_1 + 0.1125*G9_0_20 + 0.0374999999999993*G9_0_21 - 0.149999999999999*G9_0_25 - 0.0374999999999995*G9_1_20 + 0.0749999999999992*G9_1_21 + 0.0375*G9_1_22 - 0.15*G9_1_24 - 0.3*G9_1_25 - 1.35*G10_0_0_0 - 1.35*G10_0_0_1 + 0.674999999999993*G10_0_1_0 + 0.33749999999999*G10_0_3_1 + 0.337499999999997*G10_0_4_1 + 1.68749999999999*G10_0_5_1 - 0.337499999999997*G10_0_6_1 + 3.37499999999999*G10_0_7_0 + 1.68749999999998*G10_0_7_1 - 2.69999999999998*G10_0_8_0 - 0.337499999999988*G10_0_8_1 + 1.64412754244392e-14*G10_0_9_0 - 2.02499999999998*G10_0_9_1 + 0.0750000000000024*G10_1_0_0 + 0.075000000000004*G10_1_0_1 + 0.599999999999989*G10_1_1_0 - 0.075000000000005*G10_1_2_1 + 0.337499999999988*G10_1_3_0 + 0.674999999999976*G10_1_3_1 + 0.337499999999995*G10_1_4_0 + 0.675000000000003*G10_1_4_1 + 1.68749999999999*G10_1_5_0 - 0.337499999999995*G10_1_6_0 + 1.68749999999998*G10_1_7_0 + 3.37499999999999*G10_1_7_1 - 2.36249999999998*G10_1_8_0 - 0.674999999999982*G10_1_8_1 - 2.02499999999998*G10_1_9_0 - 4.04999999999998*G10_1_9_1 - 1.35*G11_0_10_0 - 1.35*G11_0_10_1 + 0.674999999999993*G11_0_11_0 + 0.33749999999999*G11_0_13_1 + 0.337499999999997*G11_0_14_1 + 1.68749999999999*G11_0_15_1 - 0.337499999999997*G11_0_16_1 + 3.37499999999999*G11_0_17_0 + 1.68749999999998*G11_0_17_1 - 2.69999999999998*G11_0_18_0 - 0.337499999999988*G11_0_18_1 + 1.64412754244392e-14*G11_0_19_0 - 2.02499999999998*G11_0_19_1 + 0.0750000000000024*G11_1_10_0 + 0.075000000000004*G11_1_10_1 + 0.599999999999989*G11_1_11_0 - 0.075000000000005*G11_1_12_1 + 0.337499999999988*G11_1_13_0 + 0.674999999999976*G11_1_13_1 + 0.337499999999995*G11_1_14_0 + 0.675000000000003*G11_1_14_1 + 1.68749999999999*G11_1_15_0 - 0.337499999999995*G11_1_16_0 + 1.68749999999998*G11_1_17_0 + 3.37499999999999*G11_1_17_1 - 2.36249999999998*G11_1_18_0 - 0.674999999999982*G11_1_18_1 - 2.02499999999998*G11_1_19_0 - 4.04999999999998*G11_1_19_1 + 0.674999999999998*G12_0_0_0 + 0.674999999999998*G12_0_0_1 - 0.337499999999997*G12_0_1_0 - 0.168749999999995*G12_0_3_1 - 0.168749999999998*G12_0_4_1 - 0.843749999999997*G12_0_5_1 + 0.168749999999999*G12_0_6_1 - 1.68749999999999*G12_0_7_0 - 0.843749999999992*G12_0_7_1 + 1.34999999999999*G12_0_8_0 + 0.168749999999994*G12_0_8_1 + 1.01249999999999*G12_0_9_1 - 0.0375000000000012*G12_1_0_0 - 0.037500000000002*G12_1_0_1 - 0.299999999999995*G12_1_1_0 + 0.0375000000000025*G12_1_2_1 - 0.168749999999994*G12_1_3_0 - 0.337499999999988*G12_1_3_1 - 0.168749999999997*G12_1_4_0 - 0.337500000000002*G12_1_4_1 - 0.843749999999997*G12_1_5_0 + 0.168749999999998*G12_1_6_0 - 0.843749999999992*G12_1_7_0 - 1.68749999999999*G12_1_7_1 + 1.18124999999999*G12_1_8_0 + 0.337499999999991*G12_1_8_1 + 1.01249999999999*G12_1_9_0 + 2.02499999999999*G12_1_9_1 + 0.674999999999998*G13_0_10_0 + 0.674999999999998*G13_0_10_1 - 0.337499999999997*G13_0_11_0 - 0.168749999999995*G13_0_13_1 - 0.168749999999998*G13_0_14_1 - 0.843749999999997*G13_0_15_1 + 0.168749999999999*G13_0_16_1 - 1.68749999999999*G13_0_17_0 - 0.843749999999992*G13_0_17_1 + 1.34999999999999*G13_0_18_0 + 0.168749999999994*G13_0_18_1 + 1.01249999999999*G13_0_19_1 - 0.0375000000000012*G13_1_10_0 - 0.037500000000002*G13_1_10_1 - 0.299999999999995*G13_1_11_0 + 0.0375000000000025*G13_1_12_1 - 0.168749999999994*G13_1_13_0 - 0.337499999999988*G13_1_13_1 - 0.168749999999997*G13_1_14_0 - 0.337500000000002*G13_1_14_1 - 0.843749999999997*G13_1_15_0 + 0.168749999999998*G13_1_16_0 - 0.843749999999992*G13_1_17_0 - 1.68749999999999*G13_1_17_1 + 1.18124999999999*G13_1_18_0 + 0.337499999999991*G13_1_18_1 + 1.01249999999999*G13_1_19_0 + 2.02499999999999*G13_1_19_1 - 26.7857142857142*G20_0_0_0 - 26.7857142857142*G20_0_0_1 + 0.66964285714289*G20_0_1_0 + 4.68750000000001*G20_0_2_1 - 8.03571428571428*G20_0_3_0 - 10.0446428571427*G20_0_3_1 - 2.00892857142856*G20_0_4_0 - 4.01785714285724*G20_0_4_1 - 4.0178571428571*G20_0_5_0 + 44.1964285714283*G20_0_5_1 + 2.00892857142857*G20_0_6_0 - 22.0982142857142*G20_0_6_1 + 40.1785714285713*G20_0_7_0 - 8.03571428571415*G20_0_7_1 - 14.0625*G20_0_8_0 + 10.0446428571427*G20_0_8_1 + 12.0535714285714*G20_0_9_0 + 12.0535714285713*G20_0_9_1 - 5.22321428571429*G20_1_0_0 - 5.22321428571425*G20_1_0_1 - 12.0535714285713*G20_1_1_0 + 2.4160292946111e-14*G20_1_1_1 - 2.8125*G20_1_2_1 - 2.00892857142858*G20_1_3_0 - 24.1071428571428*G20_1_3_1 - 0.80357142857143*G20_1_4_0 + 12.0535714285714*G20_1_4_1 - 7.63392857142853*G20_1_5_0 + 7.63392857142846*G20_1_5_1 + 0.803571428571433*G20_1_6_0 + 0.40178571428575*G20_1_6_1 + 3.2142857142858*G20_1_7_0 - 12.0535714285713*G20_1_7_1 + 14.0624999999998*G20_1_8_0 + 24.1071428571427*G20_1_8_1 + 9.64285714285711*G20_1_9_0 + 1.08408291024653e-14*G20_1_9_1 - 4.82142857142857*G20_2_0_0 - 4.82142857142857*G20_2_0_1 - 3.6160714285714*G20_2_1_0 + 1.02342846278283e-14*G20_2_1_1 + 1.24969479209369e-14*G20_2_2_1 + 0.401785714285687*G20_2_3_0 - 5.62499999999996*G20_2_3_1 - 2.00892857142857*G20_2_4_0 + 0.401785714285643*G20_2_4_1 - 7.63392857142856*G20_2_5_0 + 7.23214285714284*G20_2_5_1 + 2.00892857142857*G20_2_6_0 - 2.41071428571425*G20_2_6_1 + 6.23672120891872e-14*G20_2_7_0 - 14.8660714285714*G20_2_7_1 + 8.43749999999991*G20_2_8_0 + 5.62499999999999*G20_2_8_1 + 7.23214285714287*G20_2_9_0 + 14.4642857142856*G20_2_9_1 + 5.62499999999991*G20_3_0_0 + 5.62500000000002*G20_3_0_1 - 20.0892857142856*G20_3_1_0 + 1.12750864801972e-14*G20_3_1_1 + 5.22321428571421*G20_3_2_1 - 47.0089285714285*G20_3_3_0 - 54.2410714285714*G20_3_3_1 + 7.23214285714284*G20_3_4_0 - 10.848214285714*G20_3_4_1 + 3.61607142857139*G20_3_5_0 - 1.63314674284099e-13*G20_3_5_1 - 7.23214285714283*G20_3_6_0 - 10.8482142857144*G20_3_6_1 - 14.4642857142855*G20_3_7_0 - 10.848214285714*G20_3_7_1 + 28.9285714285713*G20_3_8_0 + 54.241071428571*G20_3_8_1 + 43.3928571428571*G20_3_9_0 + 21.6964285714287*G20_3_9_1 + 4.41964285714288*G20_4_0_0 + 4.41964285714288*G20_4_0_1 + 13.6607142857142*G20_4_1_0 - 4.87310832596425e-14*G20_4_1_1 - 4.41964285714285*G20_4_2_1 - 3.61607142857137*G20_4_3_0 + 21.6964285714285*G20_4_3_1 - 14.4642857142857*G20_4_4_0 - 21.6964285714284*G20_4_4_1 + 3.61607142857142*G20_4_5_0 - 10.8482142857142*G20_4_5_1 + 14.4642857142857*G20_4_6_0 + 10.8482142857141*G20_4_6_1 + 7.23214285714272*G20_4_7_0 + 21.6964285714285*G20_4_7_1 - 25.3124999999998*G20_4_8_0 - 21.6964285714285*G20_4_8_1 - 4.89087936816901e-14*G20_4_9_0 + 4.21902096592319e-14*G20_4_9_1 - 40.1785714285713*G20_5_0_0 - 40.1785714285714*G20_5_0_1 + 0.401785714285775*G20_5_1_0 + 8.24652219353824e-14*G20_5_1_1 + 0.401785714285854*G20_5_2_1 + 7.23214285714274*G20_5_3_0 - 3.61607142857123*G20_5_3_1 - 3.6160714285714*G20_5_4_0 + 7.23214285714232*G20_5_4_1 - 72.3214285714283*G20_5_5_0 + 36.1607142857144*G20_5_5_1 + 3.61607142857141*G20_5_6_0 + 3.61607142857162*G20_5_6_1 + 36.1607142857145*G20_5_7_0 - 72.3214285714284*G20_5_7_1 + 3.61607142857112*G20_5_8_0 + 3.61607142857163*G20_5_8_1 + 65.0892857142855*G20_5_9_0 + 65.0892857142852*G20_5_9_1 + 20.0892857142857*G20_6_0_0 + 20.0892857142857*G20_6_0_1 + 5.22321428571423*G20_6_1_0 - 4.25653138234058e-14*G20_6_1_1 - 5.62500000000006*G20_6_2_1 - 3.61607142857132*G20_6_3_0 + 7.23214285714275*G20_6_3_1 - 3.61607142857144*G20_6_4_0 - 3.61607142857114*G20_6_4_1 + 25.3125*G20_6_5_0 - 28.9285714285714*G20_6_5_1 + 3.61607142857144*G20_6_6_0 + 14.4642857142855*G20_6_6_1 - 7.23214285714301*G20_6_7_0 + 47.0089285714285*G20_6_7_1 - 18.0803571428569*G20_6_8_0 - 7.23214285714295*G20_6_8_1 - 21.6964285714286*G20_6_9_0 - 43.3928571428569*G20_6_9_1 - 80.3571428571425*G20_7_0_0 - 80.3571428571428*G20_7_0_1 - 6.42857142857121*G20_7_1_0 + 6.67296303193701e-14*G20_7_1_1 + 29.7321428571431*G20_7_2_1 + 28.9285714285712*G20_7_3_0 + 21.6964285714293*G20_7_3_1 - 14.4642857142856*G20_7_4_0 - 43.3928571428582*G20_7_4_1 - 72.3214285714283*G20_7_5_0 + 144.642857142857*G20_7_5_1 + 14.4642857142856*G20_7_6_0 - 94.0178571428565*G20_7_6_1 + 6.37262499409254e-13*G20_7_7_0 - 216.964285714285*G20_7_7_1 + 86.7857142857131*G20_7_8_0 - 21.6964285714281*G20_7_8_1 + 43.392857142857*G20_7_9_0 + 260.357142857141*G20_7_9_1 + 28.1249999999999*G20_8_0_0 + 28.125*G20_8_0_1 - 28.1249999999998*G20_8_1_0 + 1.29762121219297e-14*G20_8_1_1 - 2.81250000000009*G20_8_2_1 - 25.3124999999999*G20_8_3_0 - 54.2410714285714*G20_8_3_1 + 7.23214285714284*G20_8_4_0 + 10.8482142857146*G20_8_4_1 + 25.3124999999999*G20_8_5_0 - 28.9285714285716*G20_8_5_1 - 7.23214285714283*G20_8_6_0 + 3.61607142857128*G20_8_6_1 - 43.3928571428569*G20_8_7_0 + 10.8482142857146*G20_8_7_1 + 43.3928571428569*G20_8_8_0 + 54.2410714285709*G20_8_8_1 - 1.20686609577508e-14*G20_8_9_0 - 21.6964285714283*G20_8_9_1 - 24.1071428571429*G20_9_0_0 - 24.107142857143*G20_9_0_1 - 19.2857142857141*G20_9_1_0 + 6.9918256593794e-14*G20_9_1_1 + 2.41071428571442*G20_9_2_1 - 43.3928571428572*G20_9_3_0 - 43.3928571428568*G20_9_3_1 - 21.6964285714285*G20_9_4_0 - 43.3928571428574*G20_9_4_1 - 86.7857142857139*G20_9_5_0 + 21.6964285714288*G20_9_5_1 + 21.6964285714285*G20_9_6_0 - 7.13165420815343e-14*G20_9_6_1 - 21.6964285714279*G20_9_7_0 - 130.178571428571*G20_9_7_1 + 65.0892857142849*G20_9_8_0 + 43.392857142857*G20_9_8_1 + 130.178571428571*G20_9_9_0 + 173.571428571428*G20_9_9_1 - 26.7857142857142*G21_0_0_10 - 5.22321428571429*G21_0_0_11 - 4.82142857142856*G21_0_0_12 + 5.62499999999991*G21_0_0_13 + 4.41964285714288*G21_0_0_14 - 40.1785714285713*G21_0_0_15 + 20.0892857142857*G21_0_0_16 - 80.3571428571425*G21_0_0_17 + 28.1249999999999*G21_0_0_18 - 24.1071428571429*G21_0_0_19 - 26.7857142857142*G21_0_1_10 - 5.22321428571425*G21_0_1_11 - 4.82142857142857*G21_0_1_12 + 5.62500000000002*G21_0_1_13 + 4.41964285714288*G21_0_1_14 - 40.1785714285714*G21_0_1_15 + 20.0892857142857*G21_0_1_16 - 80.3571428571428*G21_0_1_17 + 28.125*G21_0_1_18 - 24.107142857143*G21_0_1_19 + 0.66964285714289*G21_1_0_10 - 12.0535714285713*G21_1_0_11 - 3.6160714285714*G21_1_0_12 - 20.0892857142856*G21_1_0_13 + 13.6607142857142*G21_1_0_14 + 0.401785714285775*G21_1_0_15 + 5.22321428571423*G21_1_0_16 - 6.42857142857121*G21_1_0_17 - 28.1249999999998*G21_1_0_18 - 19.2857142857141*G21_1_0_19 + 2.4160292946111e-14*G21_1_1_11 + 1.02342846278283e-14*G21_1_1_12 + 1.12750864801972e-14*G21_1_1_13 - 4.87310832596425e-14*G21_1_1_14 + 8.24652219353824e-14*G21_1_1_15 - 4.25653138234058e-14*G21_1_1_16 + 6.67296303193701e-14*G21_1_1_17 + 1.29762121219297e-14*G21_1_1_18 + 6.99182565937939e-14*G21_1_1_19 + 4.68750000000001*G21_2_1_10 - 2.8125*G21_2_1_11 + 1.24830701331291e-14*G21_2_1_12 + 5.22321428571421*G21_2_1_13 - 4.41964285714285*G21_2_1_14 + 0.401785714285854*G21_2_1_15 - 5.62500000000006*G21_2_1_16 + 29.7321428571431*G21_2_1_17 - 2.81250000000009*G21_2_1_18 + 2.41071428571443*G21_2_1_19 - 8.03571428571428*G21_3_0_10 - 2.00892857142858*G21_3_0_11 + 0.401785714285688*G21_3_0_12 - 47.0089285714285*G21_3_0_13 - 3.61607142857137*G21_3_0_14 + 7.23214285714274*G21_3_0_15 - 3.61607142857132*G21_3_0_16 + 28.9285714285712*G21_3_0_17 - 25.3124999999999*G21_3_0_18 - 43.3928571428572*G21_3_0_19 - 10.0446428571427*G21_3_1_10 - 24.1071428571428*G21_3_1_11 - 5.62499999999996*G21_3_1_12 - 54.2410714285714*G21_3_1_13 + 21.6964285714285*G21_3_1_14 - 3.61607142857123*G21_3_1_15 + 7.23214285714275*G21_3_1_16 + 21.6964285714293*G21_3_1_17 - 54.2410714285714*G21_3_1_18 - 43.3928571428568*G21_3_1_19 - 2.00892857142856*G21_4_0_10 - 0.80357142857143*G21_4_0_11 - 2.00892857142857*G21_4_0_12 + 7.23214285714284*G21_4_0_13 - 14.4642857142857*G21_4_0_14 - 3.6160714285714*G21_4_0_15 - 3.61607142857144*G21_4_0_16 - 14.4642857142856*G21_4_0_17 + 7.23214285714284*G21_4_0_18 - 21.6964285714285*G21_4_0_19 - 4.01785714285724*G21_4_1_10 + 12.0535714285714*G21_4_1_11 + 0.401785714285643*G21_4_1_12 - 10.848214285714*G21_4_1_13 - 21.6964285714284*G21_4_1_14 + 7.23214285714232*G21_4_1_15 - 3.61607142857114*G21_4_1_16 - 43.3928571428582*G21_4_1_17 + 10.8482142857146*G21_4_1_18 - 43.3928571428574*G21_4_1_19 - 4.0178571428571*G21_5_0_10 - 7.63392857142853*G21_5_0_11 - 7.63392857142856*G21_5_0_12 + 3.61607142857139*G21_5_0_13 + 3.61607142857142*G21_5_0_14 - 72.3214285714283*G21_5_0_15 + 25.3125*G21_5_0_16 - 72.3214285714283*G21_5_0_17 + 25.3124999999999*G21_5_0_18 - 86.785714285714*G21_5_0_19 + 44.1964285714283*G21_5_1_10 + 7.63392857142846*G21_5_1_11 + 7.23214285714284*G21_5_1_12 - 1.6152443965689e-13*G21_5_1_13 - 10.8482142857142*G21_5_1_14 + 36.1607142857144*G21_5_1_15 - 28.9285714285714*G21_5_1_16 + 144.642857142857*G21_5_1_17 - 28.9285714285716*G21_5_1_18 + 21.6964285714288*G21_5_1_19 + 2.00892857142857*G21_6_0_10 + 0.803571428571433*G21_6_0_11 + 2.00892857142857*G21_6_0_12 - 7.23214285714283*G21_6_0_13 + 14.4642857142857*G21_6_0_14 + 3.61607142857141*G21_6_0_15 + 3.61607142857144*G21_6_0_16 + 14.4642857142856*G21_6_0_17 - 7.23214285714283*G21_6_0_18 + 21.6964285714285*G21_6_0_19 - 22.0982142857142*G21_6_1_10 + 0.40178571428575*G21_6_1_11 - 2.41071428571425*G21_6_1_12 - 10.8482142857144*G21_6_1_13 + 10.8482142857141*G21_6_1_14 + 3.61607142857162*G21_6_1_15 + 14.4642857142855*G21_6_1_16 - 94.0178571428565*G21_6_1_17 + 3.61607142857128*G21_6_1_18 - 7.31761656477814e-14*G21_6_1_19 + 40.1785714285713*G21_7_0_10 + 3.2142857142858*G21_7_0_11 + 6.25339623833154e-14*G21_7_0_12 - 14.4642857142855*G21_7_0_13 + 7.23214285714271*G21_7_0_14 + 36.1607142857145*G21_7_0_15 - 7.23214285714301*G21_7_0_16 + 6.35931099141442e-13*G21_7_0_17 - 43.3928571428569*G21_7_0_18 - 21.6964285714279*G21_7_0_19 - 8.03571428571415*G21_7_1_10 - 12.0535714285713*G21_7_1_11 - 14.8660714285714*G21_7_1_12 - 10.848214285714*G21_7_1_13 + 21.6964285714285*G21_7_1_14 - 72.3214285714284*G21_7_1_15 + 47.0089285714284*G21_7_1_16 - 216.964285714285*G21_7_1_17 + 10.8482142857146*G21_7_1_18 - 130.178571428571*G21_7_1_19 - 14.0625000000001*G21_8_0_10 + 14.0624999999998*G21_8_0_11 + 8.43749999999991*G21_8_0_12 + 28.9285714285713*G21_8_0_13 - 25.3124999999998*G21_8_0_14 + 3.61607142857111*G21_8_0_15 - 18.0803571428569*G21_8_0_16 + 86.7857142857131*G21_8_0_17 + 43.3928571428569*G21_8_0_18 + 65.0892857142849*G21_8_0_19 + 10.0446428571428*G21_8_1_10 + 24.1071428571427*G21_8_1_11 + 5.62499999999999*G21_8_1_12 + 54.241071428571*G21_8_1_13 - 21.6964285714285*G21_8_1_14 + 3.61607142857163*G21_8_1_15 - 7.23214285714295*G21_8_1_16 - 21.6964285714281*G21_8_1_17 + 54.2410714285709*G21_8_1_18 + 43.392857142857*G21_8_1_19 + 12.0535714285714*G21_9_0_10 + 9.64285714285711*G21_9_0_11 + 7.23214285714286*G21_9_0_12 + 43.3928571428571*G21_9_0_13 - 4.8242659866915e-14*G21_9_0_14 + 65.0892857142855*G21_9_0_15 - 21.6964285714286*G21_9_0_16 + 43.392857142857*G21_9_0_17 + 130.178571428571*G21_9_0_19 + 12.0535714285713*G21_9_1_10 + 14.4642857142856*G21_9_1_12 + 21.6964285714287*G21_9_1_13 + 4.37445218937071e-14*G21_9_1_14 + 65.0892857142852*G21_9_1_15 - 43.3928571428569*G21_9_1_16 + 260.357142857141*G21_9_1_17 - 21.6964285714283*G21_9_1_18 + 173.571428571428*G21_9_1_19 + 13.3928571428571*G24_0_0_0 + 13.3928571428571*G24_0_0_1 - 0.334821428571445*G24_0_1_0 - 2.34375*G24_0_2_1 + 4.01785714285714*G24_0_3_0 + 5.02232142857135*G24_0_3_1 + 1.00446428571428*G24_0_4_0 + 2.00892857142862*G24_0_4_1 + 2.00892857142855*G24_0_5_0 - 22.0982142857142*G24_0_5_1 - 1.00446428571428*G24_0_6_0 + 11.0491071428571*G24_0_6_1 - 20.0892857142857*G24_0_7_0 + 4.01785714285708*G24_0_7_1 + 7.03125000000002*G24_0_8_0 - 5.02232142857137*G24_0_8_1 - 6.02678571428569*G24_0_9_0 - 6.02678571428567*G24_0_9_1 + 2.61160714285714*G24_1_0_0 + 2.61160714285713*G24_1_0_1 + 6.02678571428567*G24_1_1_0 - 1.20801464730555e-14*G24_1_1_1 + 1.40625*G24_1_2_1 + 1.00446428571429*G24_1_3_0 + 12.0535714285714*G24_1_3_1 + 0.401785714285715*G24_1_4_0 - 6.02678571428569*G24_1_4_1 + 3.81696428571426*G24_1_5_0 - 3.81696428571423*G24_1_5_1 - 0.401785714285716*G24_1_6_0 - 0.200892857142875*G24_1_6_1 - 1.6071428571429*G24_1_7_0 + 6.02678571428563*G24_1_7_1 - 7.03124999999992*G24_1_8_0 - 12.0535714285713*G24_1_8_1 - 4.82142857142856*G24_1_9_0 + 2.41071428571428*G24_2_0_0 + 2.41071428571429*G24_2_0_1 + 1.8080357142857*G24_2_1_0 - 0.200892857142844*G24_2_3_0 + 2.81249999999998*G24_2_3_1 + 1.00446428571428*G24_2_4_0 - 0.200892857142822*G24_2_4_1 + 3.81696428571428*G24_2_5_0 - 3.61607142857142*G24_2_5_1 - 1.00446428571429*G24_2_6_0 + 1.20535714285712*G24_2_6_1 - 3.11836060445936e-14*G24_2_7_0 + 7.43303571428568*G24_2_7_1 - 4.21874999999995*G24_2_8_0 - 2.8125*G24_2_8_1 - 3.61607142857143*G24_2_9_0 - 7.23214285714282*G24_2_9_1 - 2.81249999999996*G24_3_0_0 - 2.81250000000001*G24_3_0_1 + 10.0446428571428*G24_3_1_0 - 2.61160714285711*G24_3_2_1 + 23.5044642857143*G24_3_3_0 + 27.1205357142857*G24_3_3_1 - 3.61607142857142*G24_3_4_0 + 5.42410714285702*G24_3_4_1 - 1.8080357142857*G24_3_5_0 + 8.16573371420493e-14*G24_3_5_1 + 3.61607142857142*G24_3_6_0 + 5.4241071428572*G24_3_6_1 + 7.23214285714277*G24_3_7_0 + 5.42410714285699*G24_3_7_1 - 14.4642857142856*G24_3_8_0 - 27.1205357142855*G24_3_8_1 - 21.6964285714286*G24_3_9_0 - 10.8482142857144*G24_3_9_1 - 2.20982142857144*G24_4_0_0 - 2.20982142857144*G24_4_0_1 - 6.83035714285711*G24_4_1_0 + 2.43655416298213e-14*G24_4_1_1 + 2.20982142857143*G24_4_2_1 + 1.80803571428568*G24_4_3_0 - 10.8482142857143*G24_4_3_1 + 7.23214285714284*G24_4_4_0 + 10.8482142857142*G24_4_4_1 - 1.80803571428571*G24_4_5_0 + 5.42410714285712*G24_4_5_1 - 7.23214285714284*G24_4_6_0 - 5.42410714285707*G24_4_6_1 - 3.61607142857136*G24_4_7_0 - 10.8482142857142*G24_4_7_1 + 12.6562499999999*G24_4_8_0 + 10.8482142857143*G24_4_8_1 + 2.4454396840845e-14*G24_4_9_0 - 2.1095104829616e-14*G24_4_9_1 + 20.0892857142857*G24_5_0_0 + 20.0892857142857*G24_5_0_1 - 0.200892857142887*G24_5_1_0 - 4.12326109676912e-14*G24_5_1_1 - 0.200892857142927*G24_5_2_1 - 3.61607142857137*G24_5_3_0 + 1.80803571428562*G24_5_3_1 + 1.8080357142857*G24_5_4_0 - 3.61607142857116*G24_5_4_1 + 36.1607142857142*G24_5_5_0 - 18.0803571428572*G24_5_5_1 - 1.80803571428571*G24_5_6_0 - 1.80803571428581*G24_5_6_1 - 18.0803571428572*G24_5_7_0 + 36.1607142857142*G24_5_7_1 - 1.80803571428556*G24_5_8_0 - 1.80803571428582*G24_5_8_1 - 32.5446428571428*G24_5_9_0 - 32.5446428571426*G24_5_9_1 - 10.0446428571428*G24_6_0_0 - 10.0446428571429*G24_6_0_1 - 2.61160714285711*G24_6_1_0 + 2.12826569117029e-14*G24_6_1_1 + 2.81250000000003*G24_6_2_1 + 1.80803571428566*G24_6_3_0 - 3.61607142857138*G24_6_3_1 + 1.80803571428572*G24_6_4_0 + 1.80803571428557*G24_6_4_1 - 12.65625*G24_6_5_0 + 14.4642857142857*G24_6_5_1 - 1.80803571428572*G24_6_6_0 - 7.23214285714277*G24_6_6_1 + 3.6160714285715*G24_6_7_0 - 23.5044642857142*G24_6_7_1 + 9.04017857142845*G24_6_8_0 + 3.61607142857148*G24_6_8_1 + 10.8482142857143*G24_6_9_0 + 21.6964285714284*G24_6_9_1 + 40.1785714285713*G24_7_0_0 + 40.1785714285714*G24_7_0_1 + 3.21428571428561*G24_7_1_0 - 3.33648151596851e-14*G24_7_1_1 - 14.8660714285716*G24_7_2_1 - 14.4642857142856*G24_7_3_0 - 10.8482142857146*G24_7_3_1 + 7.23214285714281*G24_7_4_0 + 21.6964285714291*G24_7_4_1 + 36.1607142857141*G24_7_5_0 - 72.3214285714285*G24_7_5_1 - 7.23214285714282*G24_7_6_0 + 47.0089285714282*G24_7_6_1 - 3.18631249704627e-13*G24_7_7_0 + 108.482142857142*G24_7_7_1 - 43.3928571428566*G24_7_8_0 + 10.8482142857141*G24_7_8_1 - 21.6964285714285*G24_7_9_0 - 130.178571428571*G24_7_9_1 - 14.0624999999999*G24_8_0_0 - 14.0625*G24_8_0_1 + 14.0624999999999*G24_8_1_0 + 1.40625000000005*G24_8_2_1 + 12.65625*G24_8_3_0 + 27.1205357142857*G24_8_3_1 - 3.61607142857142*G24_8_4_0 - 5.4241071428573*G24_8_4_1 - 12.65625*G24_8_5_0 + 14.4642857142858*G24_8_5_1 + 3.61607142857142*G24_8_6_0 - 1.80803571428564*G24_8_6_1 + 21.6964285714285*G24_8_7_0 - 5.4241071428573*G24_8_7_1 - 21.6964285714285*G24_8_8_0 - 27.1205357142854*G24_8_8_1 + 10.8482142857141*G24_8_9_1 + 12.0535714285715*G24_9_0_0 + 12.0535714285715*G24_9_0_1 + 9.64285714285705*G24_9_1_0 - 3.4959128296897e-14*G24_9_1_1 - 1.20535714285721*G24_9_2_1 + 21.6964285714286*G24_9_3_0 + 21.6964285714284*G24_9_3_1 + 10.8482142857142*G24_9_4_0 + 21.6964285714287*G24_9_4_1 + 43.392857142857*G24_9_5_0 - 10.8482142857144*G24_9_5_1 - 10.8482142857143*G24_9_6_0 + 3.56582710407671e-14*G24_9_6_1 + 10.8482142857139*G24_9_7_0 + 65.0892857142854*G24_9_7_1 - 32.5446428571425*G24_9_8_0 - 21.6964285714285*G24_9_8_1 - 65.0892857142855*G24_9_9_0 - 86.7857142857139*G24_9_9_1 + 13.3928571428571*G25_0_0_10 + 2.61160714285714*G25_0_0_11 + 2.41071428571428*G25_0_0_12 - 2.81249999999996*G25_0_0_13 - 2.20982142857144*G25_0_0_14 + 20.0892857142857*G25_0_0_15 - 10.0446428571428*G25_0_0_16 + 40.1785714285713*G25_0_0_17 - 14.0624999999999*G25_0_0_18 + 12.0535714285715*G25_0_0_19 + 13.3928571428571*G25_0_1_10 + 2.61160714285713*G25_0_1_11 + 2.41071428571429*G25_0_1_12 - 2.81250000000001*G25_0_1_13 - 2.20982142857144*G25_0_1_14 + 20.0892857142857*G25_0_1_15 - 10.0446428571429*G25_0_1_16 + 40.1785714285714*G25_0_1_17 - 14.0625*G25_0_1_18 + 12.0535714285715*G25_0_1_19 - 0.334821428571445*G25_1_0_10 + 6.02678571428567*G25_1_0_11 + 1.8080357142857*G25_1_0_12 + 10.0446428571428*G25_1_0_13 - 6.83035714285711*G25_1_0_14 - 0.200892857142888*G25_1_0_15 - 2.61160714285711*G25_1_0_16 + 3.21428571428561*G25_1_0_17 + 14.0624999999999*G25_1_0_18 + 9.64285714285705*G25_1_0_19 - 1.20801464730555e-14*G25_1_1_11 + 2.43655416298213e-14*G25_1_1_14 - 4.12326109676912e-14*G25_1_1_15 + 2.12826569117029e-14*G25_1_1_16 - 3.33648151596851e-14*G25_1_1_17 - 3.4959128296897e-14*G25_1_1_19 - 2.34375*G25_2_1_10 + 1.40625*G25_2_1_11 - 2.61160714285711*G25_2_1_13 + 2.20982142857143*G25_2_1_14 - 0.200892857142927*G25_2_1_15 + 2.81250000000003*G25_2_1_16 - 14.8660714285716*G25_2_1_17 + 1.40625000000005*G25_2_1_18 - 1.20535714285721*G25_2_1_19 + 4.01785714285714*G25_3_0_10 + 1.00446428571429*G25_3_0_11 - 0.200892857142844*G25_3_0_12 + 23.5044642857143*G25_3_0_13 + 1.80803571428569*G25_3_0_14 - 3.61607142857137*G25_3_0_15 + 1.80803571428566*G25_3_0_16 - 14.4642857142856*G25_3_0_17 + 12.65625*G25_3_0_18 + 21.6964285714286*G25_3_0_19 + 5.02232142857135*G25_3_1_10 + 12.0535714285714*G25_3_1_11 + 2.81249999999998*G25_3_1_12 + 27.1205357142857*G25_3_1_13 - 10.8482142857143*G25_3_1_14 + 1.80803571428562*G25_3_1_15 - 3.61607142857138*G25_3_1_16 - 10.8482142857146*G25_3_1_17 + 27.1205357142857*G25_3_1_18 + 21.6964285714284*G25_3_1_19 + 1.00446428571428*G25_4_0_10 + 0.401785714285715*G25_4_0_11 + 1.00446428571428*G25_4_0_12 - 3.61607142857142*G25_4_0_13 + 7.23214285714284*G25_4_0_14 + 1.8080357142857*G25_4_0_15 + 1.80803571428572*G25_4_0_16 + 7.23214285714281*G25_4_0_17 - 3.61607142857142*G25_4_0_18 + 10.8482142857142*G25_4_0_19 + 2.00892857142862*G25_4_1_10 - 6.02678571428569*G25_4_1_11 - 0.200892857142822*G25_4_1_12 + 5.42410714285702*G25_4_1_13 + 10.8482142857142*G25_4_1_14 - 3.61607142857116*G25_4_1_15 + 1.80803571428557*G25_4_1_16 + 21.6964285714291*G25_4_1_17 - 5.4241071428573*G25_4_1_18 + 21.6964285714287*G25_4_1_19 + 2.00892857142855*G25_5_0_10 + 3.81696428571426*G25_5_0_11 + 3.81696428571428*G25_5_0_12 - 1.8080357142857*G25_5_0_13 - 1.80803571428571*G25_5_0_14 + 36.1607142857141*G25_5_0_15 - 12.65625*G25_5_0_16 + 36.1607142857141*G25_5_0_17 - 12.65625*G25_5_0_18 + 43.392857142857*G25_5_0_19 - 22.0982142857142*G25_5_1_10 - 3.81696428571423*G25_5_1_11 - 3.61607142857142*G25_5_1_12 + 8.07622198284452e-14*G25_5_1_13 + 5.42410714285712*G25_5_1_14 - 18.0803571428572*G25_5_1_15 + 14.4642857142857*G25_5_1_16 - 72.3214285714285*G25_5_1_17 + 14.4642857142858*G25_5_1_18 - 10.8482142857144*G25_5_1_19 - 1.00446428571428*G25_6_0_10 - 0.401785714285717*G25_6_0_11 - 1.00446428571429*G25_6_0_12 + 3.61607142857141*G25_6_0_13 - 7.23214285714284*G25_6_0_14 - 1.8080357142857*G25_6_0_15 - 1.80803571428572*G25_6_0_16 - 7.23214285714282*G25_6_0_17 + 3.61607142857142*G25_6_0_18 - 10.8482142857143*G25_6_0_19 + 11.0491071428571*G25_6_1_10 - 0.200892857142875*G25_6_1_11 + 1.20535714285712*G25_6_1_12 + 5.4241071428572*G25_6_1_13 - 5.42410714285707*G25_6_1_14 - 1.80803571428581*G25_6_1_15 - 7.23214285714277*G25_6_1_16 + 47.0089285714282*G25_6_1_17 - 1.80803571428564*G25_6_1_18 + 3.65880828238907e-14*G25_6_1_19 - 20.0892857142857*G25_7_0_10 - 1.6071428571429*G25_7_0_11 - 3.12669811916577e-14*G25_7_0_12 + 7.23214285714277*G25_7_0_13 - 3.61607142857136*G25_7_0_14 - 18.0803571428572*G25_7_0_15 + 3.6160714285715*G25_7_0_16 - 3.17965549570721e-13*G25_7_0_17 + 21.6964285714285*G25_7_0_18 + 10.8482142857139*G25_7_0_19 + 4.01785714285708*G25_7_1_10 + 6.02678571428563*G25_7_1_11 + 7.43303571428568*G25_7_1_12 + 5.42410714285699*G25_7_1_13 - 10.8482142857142*G25_7_1_14 + 36.1607142857142*G25_7_1_15 - 23.5044642857142*G25_7_1_16 + 108.482142857142*G25_7_1_17 - 5.4241071428573*G25_7_1_18 + 65.0892857142854*G25_7_1_19 + 7.03125000000003*G25_8_0_10 - 7.03124999999992*G25_8_0_11 - 4.21874999999995*G25_8_0_12 - 14.4642857142856*G25_8_0_13 + 12.6562499999999*G25_8_0_14 - 1.80803571428556*G25_8_0_15 + 9.04017857142845*G25_8_0_16 - 43.3928571428566*G25_8_0_17 - 21.6964285714285*G25_8_0_18 - 32.5446428571425*G25_8_0_19 - 5.02232142857138*G25_8_1_10 - 12.0535714285713*G25_8_1_11 - 2.8125*G25_8_1_12 - 27.1205357142855*G25_8_1_13 + 10.8482142857143*G25_8_1_14 - 1.80803571428582*G25_8_1_15 + 3.61607142857148*G25_8_1_16 + 10.8482142857141*G25_8_1_17 - 27.1205357142854*G25_8_1_18 - 21.6964285714285*G25_8_1_19 - 6.02678571428569*G25_9_0_10 - 4.82142857142855*G25_9_0_11 - 3.61607142857143*G25_9_0_12 - 21.6964285714286*G25_9_0_13 + 2.41213299334575e-14*G25_9_0_14 - 32.5446428571428*G25_9_0_15 + 10.8482142857143*G25_9_0_16 - 21.6964285714285*G25_9_0_17 - 65.0892857142855*G25_9_0_19 - 6.02678571428567*G25_9_1_10 - 7.23214285714282*G25_9_1_12 - 10.8482142857144*G25_9_1_13 - 2.18722609468536e-14*G25_9_1_14 - 32.5446428571426*G25_9_1_15 + 21.6964285714284*G25_9_1_16 - 130.178571428571*G25_9_1_17 + 10.8482142857141*G25_9_1_18 - 86.7857142857139*G25_9_1_19;
    A[8] = 0.674999999999998*G4_0_0_0 + 0.674999999999999*G4_0_0_1 - 1.34999999999999*G4_0_1_0 - 1.68749999999998*G4_0_3_1 + 0.337499999999998*G4_0_4_1 - 0.337500000000004*G4_0_5_1 - 0.337499999999998*G4_0_6_1 - 2.69999999999998*G4_0_7_0 - 2.36249999999998*G4_0_7_1 + 3.37499999999997*G4_0_8_0 + 1.68749999999998*G4_0_8_1 - 1.12119515061071e-14*G4_0_9_0 + 2.02499999999998*G4_0_9_1 + 0.0749999999999945*G4_1_0_0 + 0.0750000000000005*G4_1_0_1 - 1.42499999999998*G4_1_1_0 - 0.0750000000000001*G4_1_2_1 - 1.68749999999999*G4_1_3_0 - 3.37499999999998*G4_1_3_1 + 0.337500000000006*G4_1_4_0 + 0.675000000000012*G4_1_4_1 - 0.337500000000002*G4_1_5_0 - 1.24978152826749e-14*G4_1_5_1 - 0.337500000000005*G4_1_6_0 - 0.337499999999988*G4_1_7_0 - 0.674999999999982*G4_1_7_1 + 1.68749999999998*G4_1_8_0 + 3.37499999999996*G4_1_8_1 + 2.02499999999999*G4_1_9_0 + 0.674999999999998*G5_0_0_0 + 0.674999999999999*G5_0_0_1 - 1.34999999999999*G5_0_1_0 - 1.68749999999998*G5_0_3_1 + 0.337499999999998*G5_0_4_1 - 0.337500000000004*G5_0_5_1 - 0.337499999999998*G5_0_6_1 - 2.69999999999998*G5_0_7_0 - 2.36249999999998*G5_0_7_1 + 3.37499999999997*G5_0_8_0 + 1.68749999999998*G5_0_8_1 - 1.12119515061071e-14*G5_0_9_0 + 2.02499999999998*G5_0_9_1 + 0.0749999999999945*G5_1_0_0 + 0.0750000000000005*G5_1_0_1 - 1.42499999999998*G5_1_1_0 - 0.0750000000000001*G5_1_2_1 - 1.68749999999999*G5_1_3_0 - 3.37499999999998*G5_1_3_1 + 0.337500000000006*G5_1_4_0 + 0.675000000000012*G5_1_4_1 - 0.337500000000002*G5_1_5_0 - 1.24978152826749e-14*G5_1_5_1 - 0.337500000000005*G5_1_6_0 - 0.337499999999988*G5_1_7_0 - 0.674999999999982*G5_1_7_1 + 1.68749999999998*G5_1_8_0 + 3.37499999999996*G5_1_8_1 + 2.02499999999999*G5_1_9_0 + 0.0750000000000004*G6_0_20 + 0.224999999999998*G6_0_21 - 0.299999999999998*G6_0_25 - 0.0749999999999991*G6_1_20 + 0.299999999999998*G6_1_21 - 0.0749999999999997*G6_1_22 + 0.299999999999995*G6_1_23 + 0.299999999999996*G6_1_25 - 0.337499999999999*G7_0_0_0 - 0.3375*G7_0_0_1 + 0.674999999999994*G7_0_1_0 + 0.843749999999992*G7_0_3_1 - 0.168749999999999*G7_0_4_1 + 0.168750000000002*G7_0_5_1 + 0.168749999999999*G7_0_6_1 + 1.34999999999999*G7_0_7_0 + 1.18124999999999*G7_0_7_1 - 1.68749999999999*G7_0_8_0 - 0.843749999999989*G7_0_8_1 - 1.01249999999999*G7_0_9_1 - 0.0374999999999972*G7_1_0_0 - 0.0375000000000003*G7_1_0_1 + 0.712499999999992*G7_1_1_0 + 0.0375000000000001*G7_1_2_1 + 0.843749999999993*G7_1_3_0 + 1.68749999999999*G7_1_3_1 - 0.168750000000003*G7_1_4_0 - 0.337500000000006*G7_1_4_1 + 0.168750000000001*G7_1_5_0 + 0.168750000000003*G7_1_6_0 + 0.168749999999994*G7_1_7_0 + 0.337499999999991*G7_1_7_1 - 0.843749999999989*G7_1_8_0 - 1.68749999999998*G7_1_8_1 - 1.01249999999999*G7_1_9_0 - 0.337499999999999*G8_0_0_0 - 0.3375*G8_0_0_1 + 0.674999999999994*G8_0_1_0 + 0.843749999999992*G8_0_3_1 - 0.168749999999999*G8_0_4_1 + 0.168750000000002*G8_0_5_1 + 0.168749999999999*G8_0_6_1 + 1.34999999999999*G8_0_7_0 + 1.18124999999999*G8_0_7_1 - 1.68749999999999*G8_0_8_0 - 0.843749999999989*G8_0_8_1 - 1.01249999999999*G8_0_9_1 - 0.0374999999999972*G8_1_0_0 - 0.0375000000000003*G8_1_0_1 + 0.712499999999992*G8_1_1_0 + 0.0375000000000001*G8_1_2_1 + 0.843749999999993*G8_1_3_0 + 1.68749999999999*G8_1_3_1 - 0.168750000000003*G8_1_4_0 - 0.337500000000006*G8_1_4_1 + 0.168750000000001*G8_1_5_0 + 0.168750000000003*G8_1_6_0 + 0.168749999999994*G8_1_7_0 + 0.337499999999991*G8_1_7_1 - 0.843749999999989*G8_1_8_0 - 1.68749999999998*G8_1_8_1 - 1.01249999999999*G8_1_9_0 - 0.0375000000000002*G9_0_20 - 0.112499999999999*G9_0_21 + 0.149999999999999*G9_0_25 + 0.0374999999999996*G9_1_20 - 0.149999999999999*G9_1_21 + 0.0374999999999999*G9_1_22 - 0.149999999999998*G9_1_23 - 0.149999999999998*G9_1_25 + 0.674999999999998*G10_0_0_0 + 0.674999999999999*G10_0_0_1 - 1.34999999999999*G10_0_1_0 - 1.68749999999998*G10_0_3_1 + 0.337499999999998*G10_0_4_1 - 0.337500000000004*G10_0_5_1 - 0.337499999999998*G10_0_6_1 - 2.69999999999998*G10_0_7_0 - 2.36249999999998*G10_0_7_1 + 3.37499999999997*G10_0_8_0 + 1.68749999999998*G10_0_8_1 - 1.12119515061071e-14*G10_0_9_0 + 2.02499999999998*G10_0_9_1 + 0.0749999999999945*G10_1_0_0 + 0.0750000000000005*G10_1_0_1 - 1.42499999999998*G10_1_1_0 - 0.0750000000000001*G10_1_2_1 - 1.68749999999999*G10_1_3_0 - 3.37499999999998*G10_1_3_1 + 0.337500000000006*G10_1_4_0 + 0.675000000000012*G10_1_4_1 - 0.337500000000002*G10_1_5_0 - 1.24978152826749e-14*G10_1_5_1 - 0.337500000000005*G10_1_6_0 - 0.337499999999988*G10_1_7_0 - 0.674999999999982*G10_1_7_1 + 1.68749999999998*G10_1_8_0 + 3.37499999999996*G10_1_8_1 + 2.02499999999999*G10_1_9_0 + 0.674999999999998*G11_0_10_0 + 0.674999999999999*G11_0_10_1 - 1.34999999999999*G11_0_11_0 - 1.68749999999998*G11_0_13_1 + 0.337499999999998*G11_0_14_1 - 0.337500000000004*G11_0_15_1 - 0.337499999999998*G11_0_16_1 - 2.69999999999998*G11_0_17_0 - 2.36249999999998*G11_0_17_1 + 3.37499999999997*G11_0_18_0 + 1.68749999999998*G11_0_18_1 - 1.12119515061071e-14*G11_0_19_0 + 2.02499999999998*G11_0_19_1 + 0.0749999999999945*G11_1_10_0 + 0.0750000000000005*G11_1_10_1 - 1.42499999999998*G11_1_11_0 - 0.0750000000000001*G11_1_12_1 - 1.68749999999999*G11_1_13_0 - 3.37499999999998*G11_1_13_1 + 0.337500000000006*G11_1_14_0 + 0.675000000000012*G11_1_14_1 - 0.337500000000002*G11_1_15_0 - 1.24978152826749e-14*G11_1_15_1 - 0.337500000000005*G11_1_16_0 - 0.337499999999988*G11_1_17_0 - 0.674999999999982*G11_1_17_1 + 1.68749999999998*G11_1_18_0 + 3.37499999999996*G11_1_18_1 + 2.02499999999999*G11_1_19_0 - 0.337499999999999*G12_0_0_0 - 0.3375*G12_0_0_1 + 0.674999999999994*G12_0_1_0 + 0.843749999999992*G12_0_3_1 - 0.168749999999999*G12_0_4_1 + 0.168750000000002*G12_0_5_1 + 0.168749999999999*G12_0_6_1 + 1.34999999999999*G12_0_7_0 + 1.18124999999999*G12_0_7_1 - 1.68749999999999*G12_0_8_0 - 0.843749999999989*G12_0_8_1 - 1.01249999999999*G12_0_9_1 - 0.0374999999999972*G12_1_0_0 - 0.0375000000000003*G12_1_0_1 + 0.712499999999992*G12_1_1_0 + 0.0375000000000001*G12_1_2_1 + 0.843749999999993*G12_1_3_0 + 1.68749999999999*G12_1_3_1 - 0.168750000000003*G12_1_4_0 - 0.337500000000006*G12_1_4_1 + 0.168750000000001*G12_1_5_0 + 0.168750000000003*G12_1_6_0 + 0.168749999999994*G12_1_7_0 + 0.337499999999991*G12_1_7_1 - 0.843749999999989*G12_1_8_0 - 1.68749999999998*G12_1_8_1 - 1.01249999999999*G12_1_9_0 - 0.337499999999999*G13_0_10_0 - 0.3375*G13_0_10_1 + 0.674999999999994*G13_0_11_0 + 0.843749999999992*G13_0_13_1 - 0.168749999999999*G13_0_14_1 + 0.168750000000002*G13_0_15_1 + 0.168749999999999*G13_0_16_1 + 1.34999999999999*G13_0_17_0 + 1.18124999999999*G13_0_17_1 - 1.68749999999999*G13_0_18_0 - 0.843749999999989*G13_0_18_1 - 1.01249999999999*G13_0_19_1 - 0.0374999999999972*G13_1_10_0 - 0.0375000000000003*G13_1_10_1 + 0.712499999999992*G13_1_11_0 + 0.0375000000000001*G13_1_12_1 + 0.843749999999993*G13_1_13_0 + 1.68749999999999*G13_1_13_1 - 0.168750000000003*G13_1_14_0 - 0.337500000000006*G13_1_14_1 + 0.168750000000001*G13_1_15_0 + 0.168750000000003*G13_1_16_0 + 0.168749999999994*G13_1_17_0 + 0.337499999999991*G13_1_17_1 - 0.843749999999989*G13_1_18_0 - 1.68749999999998*G13_1_18_1 - 1.01249999999999*G13_1_19_0 + 12.0535714285714*G20_0_0_0 + 12.0535714285714*G20_0_0_1 + 5.22321428571422*G20_0_1_0 - 2.8125*G20_0_2_1 + 7.63392857142855*G20_0_3_0 + 15.267857142857*G20_0_3_1 - 0.803571428571424*G20_0_4_0 - 0.401785714285657*G20_0_4_1 + 2.00892857142855*G20_0_5_0 - 22.0982142857142*G20_0_5_1 + 0.803571428571421*G20_0_6_0 + 12.8571428571428*G20_0_6_1 - 14.0625*G20_0_7_0 + 10.0446428571427*G20_0_7_1 - 3.21428571428561*G20_0_8_0 - 15.267857142857*G20_0_8_1 - 9.6428571428571*G20_0_9_0 - 9.64285714285713*G20_0_9_1 - 0.669642857142802*G20_1_0_0 - 0.669642857142871*G20_1_0_1 + 26.7857142857141*G20_1_1_0 - 5.07226067866978e-14*G20_1_1_1 + 4.68749999999999*G20_1_2_1 + 4.01785714285714*G20_1_3_0 + 48.2142857142854*G20_1_3_1 - 2.00892857142856*G20_1_4_0 - 24.1071428571427*G20_1_4_1 + 8.03571428571425*G20_1_5_0 - 2.00892857142842*G20_1_5_1 + 2.00892857142855*G20_1_6_0 - 2.0089285714286*G20_1_6_1 + 14.0624999999998*G20_1_7_0 + 24.1071428571426*G20_1_7_1 - 40.1785714285711*G20_1_8_0 - 48.2142857142852*G20_1_8_1 - 12.0535714285714*G20_1_9_0 - 1.32051054119176e-13*G20_1_9_1 + 3.61607142857144*G20_2_0_0 + 3.61607142857141*G20_2_0_1 + 4.82142857142853*G20_2_1_0 + 1.29514454716428e-14*G20_2_2_1 + 7.63392857142857*G20_2_3_0 + 14.8660714285714*G20_2_3_1 - 2.00892857142857*G20_2_4_0 - 4.41964285714288*G20_2_4_1 - 0.401785714285704*G20_2_5_0 - 6.02678571428564*G20_2_5_1 + 2.00892857142857*G20_2_6_0 + 2.41071428571429*G20_2_6_1 - 8.43750000000002*G20_2_7_0 - 2.81250000000006*G20_2_7_1 + 4.20031847844782e-14*G20_2_8_0 - 14.8660714285713*G20_2_8_1 - 7.23214285714287*G20_2_9_0 + 7.23214285714278*G20_2_9_1 - 0.401785714285583*G20_3_0_0 - 0.40178571428581*G20_3_0_1 + 40.1785714285712*G20_3_1_0 - 1.70452359186991e-14*G20_3_1_1 + 0.401785714285845*G20_3_2_1 + 72.3214285714284*G20_3_3_0 + 108.482142857143*G20_3_3_1 - 3.61607142857141*G20_3_4_0 - 4.19746702673418e-13*G20_3_4_1 - 7.23214285714282*G20_3_5_0 - 10.8482142857139*G20_3_5_1 + 3.61607142857139*G20_3_6_0 + 10.8482142857145*G20_3_6_1 - 3.6160714285717*G20_3_7_0 - 6.38140798883691e-13*G20_3_7_1 - 36.1607142857139*G20_3_8_0 - 108.482142857142*G20_3_8_1 - 65.0892857142855*G20_3_9_0 - 3.88869492162769e-13*G20_3_9_1 - 5.22321428571432*G20_4_0_0 - 5.2232142857142*G20_4_0_1 - 20.0892857142856*G20_4_1_0 - 5.62500000000006*G20_4_2_1 - 25.3125*G20_4_3_0 - 54.2410714285713*G20_4_3_1 - 3.61607142857146*G20_4_4_0 + 10.8482142857144*G20_4_4_1 + 3.61607142857138*G20_4_5_0 + 10.848214285714*G20_4_5_1 + 3.61607142857147*G20_4_6_0 - 6.38551711507063e-14*G20_4_6_1 + 18.0803571428572*G20_4_7_0 + 10.8482142857145*G20_4_7_1 + 7.2321428571427*G20_4_8_0 + 54.2410714285709*G20_4_8_1 + 21.6964285714286*G20_4_9_0 - 21.6964285714282*G20_4_9_1 + 20.0892857142857*G20_5_0_0 + 20.0892857142858*G20_5_0_1 - 5.625*G20_5_1_0 - 3.98999081119768e-14*G20_5_1_1 + 5.22321428571421*G20_5_2_1 - 3.61607142857133*G20_5_3_0 - 3.61607142857145*G20_5_3_1 + 7.23214285714284*G20_5_4_0 - 3.61607142857118*G20_5_4_1 + 47.0089285714285*G20_5_5_0 - 7.23214285714296*G20_5_5_1 - 7.23214285714285*G20_5_6_0 - 18.0803571428572*G20_5_6_1 - 28.9285714285715*G20_5_7_0 + 25.3125*G20_5_7_1 + 14.4642857142858*G20_5_8_0 + 3.61607142857126*G20_5_8_1 - 43.3928571428571*G20_5_9_0 - 21.6964285714284*G20_5_9_1 - 13.6607142857143*G20_6_0_0 - 13.6607142857142*G20_6_0_1 - 4.41964285714284*G20_6_1_0 - 2.65814518476759e-14*G20_6_1_1 - 4.41964285714286*G20_6_2_1 - 3.61607142857145*G20_6_3_0 - 14.4642857142857*G20_6_3_1 - 14.4642857142857*G20_6_4_0 - 3.61607142857139*G20_6_4_1 + 3.61607142857138*G20_6_5_0 + 25.3124999999999*G20_6_5_1 + 14.4642857142857*G20_6_6_0 - 7.23214285714289*G20_6_6_1 + 25.3125*G20_6_7_0 + 3.61607142857152*G20_6_7_1 - 7.23214285714289*G20_6_8_0 + 14.4642857142856*G20_6_8_1 + 7.39860104605194e-14*G20_6_9_0 + 8.25270299147085e-14*G20_6_9_1 + 28.1249999999999*G20_7_0_0 + 28.125*G20_7_0_1 - 28.1249999999999*G20_7_1_0 + 1.29762121219297e-14*G20_7_1_1 - 2.81250000000009*G20_7_2_1 - 25.3124999999999*G20_7_3_0 - 54.2410714285714*G20_7_3_1 + 7.23214285714284*G20_7_4_0 + 10.8482142857146*G20_7_4_1 + 25.3124999999999*G20_7_5_0 - 28.9285714285716*G20_7_5_1 - 7.23214285714283*G20_7_6_0 + 3.61607142857128*G20_7_6_1 - 43.3928571428569*G20_7_7_0 + 10.8482142857146*G20_7_7_1 + 43.3928571428569*G20_7_8_0 + 54.2410714285709*G20_7_8_1 - 1.17355906622315e-14*G20_7_9_0 - 21.6964285714283*G20_7_9_1 + 6.42857142857159*G20_8_0_0 + 6.42857142857109*G20_8_0_1 + 80.3571428571423*G20_8_1_0 - 7.84038981703907e-14*G20_8_1_1 + 29.7321428571431*G20_8_2_1 + 72.3214285714284*G20_8_3_0 + 216.964285714285*G20_8_3_1 - 14.4642857142856*G20_8_4_0 - 108.482142857143*G20_8_4_1 - 28.9285714285714*G20_8_5_0 - 7.23214285714179*G20_8_5_1 + 14.4642857142856*G20_8_6_0 - 28.9285714285711*G20_8_6_1 - 86.7857142857143*G20_8_7_0 - 108.482142857144*G20_8_7_1 + 3.7043010286169e-13*G20_8_8_0 - 216.964285714283*G20_8_8_1 - 43.392857142857*G20_8_9_0 + 216.964285714284*G20_8_9_1 + 19.2857142857144*G20_9_0_0 + 19.2857142857142*G20_9_0_1 + 24.1071428571426*G20_9_1_0 - 8.34236841281747e-14*G20_9_1_1 + 2.4107142857144*G20_9_2_1 + 86.7857142857141*G20_9_3_0 + 108.482142857143*G20_9_3_1 - 21.6964285714285*G20_9_4_0 - 21.6964285714288*G20_9_4_1 + 43.392857142857*G20_9_5_0 + 2.80250947231817e-13*G20_9_5_1 + 21.6964285714285*G20_9_6_0 - 21.6964285714284*G20_9_6_1 - 65.0892857142859*G20_9_7_0 - 21.696428571429*G20_9_7_1 + 21.6964285714288*G20_9_8_0 - 108.482142857142*G20_9_8_1 - 130.178571428571*G20_9_9_0 + 43.3928571428567*G20_9_9_1 + 12.0535714285714*G21_0_0_10 - 0.669642857142801*G21_0_0_11 + 3.61607142857144*G21_0_0_12 - 0.401785714285583*G21_0_0_13 - 5.22321428571432*G21_0_0_14 + 20.0892857142857*G21_0_0_15 - 13.6607142857143*G21_0_0_16 + 28.1249999999999*G21_0_0_17 + 6.42857142857159*G21_0_0_18 + 19.2857142857144*G21_0_0_19 + 12.0535714285714*G21_0_1_10 - 0.669642857142871*G21_0_1_11 + 3.61607142857141*G21_0_1_12 - 0.401785714285809*G21_0_1_13 - 5.2232142857142*G21_0_1_14 + 20.0892857142858*G21_0_1_15 - 13.6607142857142*G21_0_1_16 + 28.125*G21_0_1_17 + 6.42857142857109*G21_0_1_18 + 19.2857142857142*G21_0_1_19 + 5.22321428571422*G21_1_0_10 + 26.7857142857141*G21_1_0_11 + 4.82142857142853*G21_1_0_12 + 40.1785714285712*G21_1_0_13 - 20.0892857142856*G21_1_0_14 - 5.625*G21_1_0_15 - 4.41964285714284*G21_1_0_16 - 28.1249999999999*G21_1_0_17 + 80.3571428571423*G21_1_0_18 + 24.1071428571426*G21_1_0_19 - 5.07226067866978e-14*G21_1_1_11 - 1.70452359186991e-14*G21_1_1_13 - 3.98999081119768e-14*G21_1_1_15 - 2.65814518476759e-14*G21_1_1_16 + 1.29762121219297e-14*G21_1_1_17 - 7.84038981703907e-14*G21_1_1_18 - 8.34236841281747e-14*G21_1_1_19 - 2.8125*G21_2_1_10 + 4.68749999999999*G21_2_1_11 + 1.28525662335122e-14*G21_2_1_12 + 0.401785714285843*G21_2_1_13 - 5.62500000000006*G21_2_1_14 + 5.22321428571421*G21_2_1_15 - 4.41964285714286*G21_2_1_16 - 2.81250000000009*G21_2_1_17 + 29.7321428571431*G21_2_1_18 + 2.4107142857144*G21_2_1_19 + 7.63392857142855*G21_3_0_10 + 4.01785714285714*G21_3_0_11 + 7.63392857142857*G21_3_0_12 + 72.3214285714284*G21_3_0_13 - 25.3125*G21_3_0_14 - 3.61607142857133*G21_3_0_15 - 3.61607142857145*G21_3_0_16 - 25.3124999999999*G21_3_0_17 + 72.3214285714284*G21_3_0_18 + 86.7857142857141*G21_3_0_19 + 15.267857142857*G21_3_1_10 + 48.2142857142854*G21_3_1_11 + 14.8660714285714*G21_3_1_12 + 108.482142857143*G21_3_1_13 - 54.2410714285712*G21_3_1_14 - 3.61607142857145*G21_3_1_15 - 14.4642857142857*G21_3_1_16 - 54.2410714285714*G21_3_1_17 + 216.964285714285*G21_3_1_18 + 108.482142857143*G21_3_1_19 - 0.803571428571424*G21_4_0_10 - 2.00892857142856*G21_4_0_11 - 2.00892857142857*G21_4_0_12 - 3.61607142857141*G21_4_0_13 - 3.61607142857146*G21_4_0_14 + 7.23214285714284*G21_4_0_15 - 14.4642857142857*G21_4_0_16 + 7.23214285714284*G21_4_0_17 - 14.4642857142856*G21_4_0_18 - 21.6964285714285*G21_4_0_19 - 0.401785714285656*G21_4_1_10 - 24.1071428571427*G21_4_1_11 - 4.41964285714288*G21_4_1_12 - 4.26411510268121e-13*G21_4_1_13 + 10.8482142857144*G21_4_1_14 - 3.61607142857118*G21_4_1_15 - 3.61607142857139*G21_4_1_16 + 10.8482142857146*G21_4_1_17 - 108.482142857143*G21_4_1_18 - 21.6964285714288*G21_4_1_19 + 2.00892857142855*G21_5_0_10 + 8.03571428571425*G21_5_0_11 - 0.401785714285704*G21_5_0_12 - 7.23214285714282*G21_5_0_13 + 3.61607142857138*G21_5_0_14 + 47.0089285714285*G21_5_0_15 + 3.61607142857138*G21_5_0_16 + 25.3124999999999*G21_5_0_17 - 28.9285714285714*G21_5_0_18 + 43.392857142857*G21_5_0_19 - 22.0982142857142*G21_5_1_10 - 2.00892857142842*G21_5_1_11 - 6.02678571428564*G21_5_1_12 - 10.8482142857139*G21_5_1_13 + 10.848214285714*G21_5_1_14 - 7.23214285714296*G21_5_1_15 + 25.3124999999999*G21_5_1_16 - 28.9285714285716*G21_5_1_17 - 7.23214285714179*G21_5_1_18 + 2.76752009980771e-13*G21_5_1_19 + 0.803571428571421*G21_6_0_10 + 2.00892857142855*G21_6_0_11 + 2.00892857142857*G21_6_0_12 + 3.61607142857139*G21_6_0_13 + 3.61607142857147*G21_6_0_14 - 7.23214285714285*G21_6_0_15 + 14.4642857142857*G21_6_0_16 - 7.23214285714283*G21_6_0_17 + 14.4642857142856*G21_6_0_18 + 21.6964285714285*G21_6_0_19 + 12.8571428571428*G21_6_1_10 - 2.0089285714286*G21_6_1_11 + 2.41071428571429*G21_6_1_12 + 10.8482142857145*G21_6_1_13 - 6.42715047849407e-14*G21_6_1_14 - 18.0803571428572*G21_6_1_15 - 7.23214285714289*G21_6_1_16 + 3.61607142857128*G21_6_1_17 - 28.9285714285711*G21_6_1_18 - 21.6964285714284*G21_6_1_19 - 14.0625*G21_7_0_10 + 14.0624999999998*G21_7_0_11 - 8.43750000000002*G21_7_0_12 - 3.61607142857169*G21_7_0_13 + 18.0803571428572*G21_7_0_14 - 28.9285714285715*G21_7_0_15 + 25.3125*G21_7_0_16 - 43.3928571428569*G21_7_0_17 - 86.7857142857143*G21_7_0_18 - 65.0892857142859*G21_7_0_19 + 10.0446428571427*G21_7_1_10 + 24.1071428571426*G21_7_1_11 - 2.81250000000006*G21_7_1_12 - 6.41693404142274e-13*G21_7_1_13 + 10.8482142857145*G21_7_1_14 + 25.3125*G21_7_1_15 + 3.61607142857153*G21_7_1_16 + 10.8482142857146*G21_7_1_17 - 108.482142857144*G21_7_1_18 - 21.696428571429*G21_7_1_19 - 3.21428571428561*G21_8_0_10 - 40.1785714285711*G21_8_0_11 + 4.20031847844782e-14*G21_8_0_12 - 36.1607142857139*G21_8_0_13 + 7.2321428571427*G21_8_0_14 + 14.4642857142858*G21_8_0_15 - 7.23214285714289*G21_8_0_16 + 43.3928571428569*G21_8_0_17 + 3.73982819505106e-13*G21_8_0_18 + 21.6964285714288*G21_8_0_19 - 15.267857142857*G21_8_1_10 - 48.2142857142852*G21_8_1_11 - 14.8660714285713*G21_8_1_12 - 108.482142857142*G21_8_1_13 + 54.2410714285709*G21_8_1_14 + 3.61607142857126*G21_8_1_15 + 14.4642857142856*G21_8_1_16 + 54.2410714285709*G21_8_1_17 - 216.964285714283*G21_8_1_18 - 108.482142857142*G21_8_1_19 - 9.6428571428571*G21_9_0_10 - 12.0535714285714*G21_9_0_11 - 7.23214285714286*G21_9_0_12 - 65.0892857142855*G21_9_0_13 + 21.6964285714286*G21_9_0_14 - 43.3928571428571*G21_9_0_15 + 7.12659640501878e-14*G21_9_0_16 - 1.21241721089821e-14*G21_9_0_17 - 43.392857142857*G21_9_0_18 - 130.178571428571*G21_9_0_19 - 9.64285714285713*G21_9_1_10 - 1.28054251230525e-13*G21_9_1_11 + 7.23214285714278*G21_9_1_12 - 3.80872416938516e-13*G21_9_1_13 - 21.6964285714282*G21_9_1_14 - 21.6964285714284*G21_9_1_15 + 8.34412291865483e-14*G21_9_1_16 - 21.6964285714283*G21_9_1_17 + 216.964285714284*G21_9_1_18 + 43.3928571428567*G21_9_1_19 - 6.0267857142857*G24_0_0_0 - 6.02678571428569*G24_0_0_1 - 2.61160714285711*G24_0_1_0 + 1.40625*G24_0_2_1 - 3.81696428571428*G24_0_3_0 - 7.6339285714285*G24_0_3_1 + 0.401785714285712*G24_0_4_0 + 0.200892857142828*G24_0_4_1 - 1.00446428571427*G24_0_5_0 + 11.0491071428571*G24_0_5_1 - 0.401785714285711*G24_0_6_0 - 6.42857142857141*G24_0_6_1 + 7.03125000000001*G24_0_7_0 - 5.02232142857137*G24_0_7_1 + 1.6071428571428*G24_0_8_0 + 7.63392857142849*G24_0_8_1 + 4.82142857142855*G24_0_9_0 + 4.82142857142857*G24_0_9_1 + 0.334821428571401*G24_1_0_0 + 0.334821428571435*G24_1_0_1 - 13.392857142857*G24_1_1_0 + 2.53613033933489e-14*G24_1_1_1 - 2.34375*G24_1_2_1 - 2.00892857142857*G24_1_3_0 - 24.1071428571427*G24_1_3_1 + 1.00446428571428*G24_1_4_0 + 12.0535714285714*G24_1_4_1 - 4.01785714285712*G24_1_5_0 + 1.00446428571421*G24_1_5_1 - 1.00446428571428*G24_1_6_0 + 1.0044642857143*G24_1_6_1 - 7.03124999999989*G24_1_7_0 - 12.0535714285713*G24_1_7_1 + 20.0892857142855*G24_1_8_0 + 24.1071428571426*G24_1_8_1 + 6.02678571428569*G24_1_9_0 + 6.60255270595878e-14*G24_1_9_1 - 1.80803571428572*G24_2_0_0 - 1.8080357142857*G24_2_0_1 - 2.41071428571427*G24_2_1_0 - 3.81696428571428*G24_2_3_0 - 7.4330357142857*G24_2_3_1 + 1.00446428571428*G24_2_4_0 + 2.20982142857144*G24_2_4_1 + 0.200892857142852*G24_2_5_0 + 3.01339285714282*G24_2_5_1 - 1.00446428571428*G24_2_6_0 - 1.20535714285715*G24_2_6_1 + 4.21875000000001*G24_2_7_0 + 1.40625000000003*G24_2_7_1 - 2.10015923922391e-14*G24_2_8_0 + 7.43303571428565*G24_2_8_1 + 3.61607142857143*G24_2_9_0 - 3.61607142857139*G24_2_9_1 + 0.200892857142792*G24_3_0_0 + 0.200892857142905*G24_3_0_1 - 20.0892857142856*G24_3_1_0 - 0.200892857142922*G24_3_2_1 - 36.1607142857142*G24_3_3_0 - 54.2410714285713*G24_3_3_1 + 1.80803571428571*G24_3_4_0 + 2.09873351336709e-13*G24_3_4_1 + 3.61607142857141*G24_3_5_0 + 5.42410714285694*G24_3_5_1 - 1.80803571428569*G24_3_6_0 - 5.42410714285724*G24_3_6_1 + 1.80803571428585*G24_3_7_0 + 3.19070399441845e-13*G24_3_7_1 + 18.080357142857*G24_3_8_0 + 54.2410714285709*G24_3_8_1 + 32.5446428571428*G24_3_9_0 + 1.94434746081384e-13*G24_3_9_1 + 2.61160714285716*G24_4_0_0 + 2.6116071428571*G24_4_0_1 + 10.0446428571428*G24_4_1_0 + 2.81250000000003*G24_4_2_1 + 12.65625*G24_4_3_0 + 27.1205357142856*G24_4_3_1 + 1.80803571428573*G24_4_4_0 - 5.42410714285719*G24_4_4_1 - 1.80803571428569*G24_4_5_0 - 5.42410714285701*G24_4_5_1 - 1.80803571428574*G24_4_6_0 + 3.19275855753531e-14*G24_4_6_1 - 9.0401785714286*G24_4_7_0 - 5.42410714285727*G24_4_7_1 - 3.61607142857135*G24_4_8_0 - 27.1205357142854*G24_4_8_1 - 10.8482142857143*G24_4_9_0 + 10.8482142857141*G24_4_9_1 - 10.0446428571429*G24_5_0_0 - 10.0446428571429*G24_5_0_1 + 2.8125*G24_5_1_0 + 1.99499540559884e-14*G24_5_1_1 - 2.61160714285711*G24_5_2_1 + 1.80803571428567*G24_5_3_0 + 1.80803571428573*G24_5_3_1 - 3.61607142857142*G24_5_4_0 + 1.80803571428559*G24_5_4_1 - 23.5044642857142*G24_5_5_0 + 3.61607142857148*G24_5_5_1 + 3.61607142857142*G24_5_6_0 + 9.0401785714286*G24_5_6_1 + 14.4642857142858*G24_5_7_0 - 12.65625*G24_5_7_1 - 7.23214285714291*G24_5_8_0 - 1.80803571428563*G24_5_8_1 + 21.6964285714286*G24_5_9_0 + 10.8482142857142*G24_5_9_1 + 6.83035714285713*G24_6_0_0 + 6.83035714285712*G24_6_0_1 + 2.20982142857142*G24_6_1_0 + 1.32907259238379e-14*G24_6_1_1 + 2.20982142857143*G24_6_2_1 + 1.80803571428573*G24_6_3_0 + 7.23214285714283*G24_6_3_1 + 7.23214285714284*G24_6_4_0 + 1.80803571428569*G24_6_4_1 - 1.80803571428569*G24_6_5_0 - 12.6562499999999*G24_6_5_1 - 7.23214285714285*G24_6_6_0 + 3.61607142857145*G24_6_6_1 - 12.65625*G24_6_7_0 - 1.80803571428576*G24_6_7_1 + 3.61607142857144*G24_6_8_0 - 7.23214285714279*G24_6_8_1 - 3.69930052302597e-14*G24_6_9_0 - 4.12635149573543e-14*G24_6_9_1 - 14.0624999999999*G24_7_0_0 - 14.0625*G24_7_0_1 + 14.0624999999999*G24_7_1_0 + 1.40625000000005*G24_7_2_1 + 12.65625*G24_7_3_0 + 27.1205357142857*G24_7_3_1 - 3.61607142857142*G24_7_4_0 - 5.4241071428573*G24_7_4_1 - 12.65625*G24_7_5_0 + 14.4642857142858*G24_7_5_1 + 3.61607142857142*G24_7_6_0 - 1.80803571428564*G24_7_6_1 + 21.6964285714285*G24_7_7_0 - 5.4241071428573*G24_7_7_1 - 21.6964285714285*G24_7_8_0 - 27.1205357142854*G24_7_8_1 + 10.8482142857141*G24_7_9_1 - 3.21428571428579*G24_8_0_0 - 3.21428571428554*G24_8_0_1 - 40.1785714285711*G24_8_1_0 + 3.92019490851954e-14*G24_8_1_1 - 14.8660714285716*G24_8_2_1 - 36.1607142857142*G24_8_3_0 - 108.482142857143*G24_8_3_1 + 7.23214285714281*G24_8_4_0 + 54.2410714285717*G24_8_4_1 + 14.4642857142857*G24_8_5_0 + 3.61607142857089*G24_8_5_1 - 7.2321428571428*G24_8_6_0 + 14.4642857142856*G24_8_6_1 + 43.3928571428571*G24_8_7_0 + 54.2410714285718*G24_8_7_1 - 1.85215051430845e-13*G24_8_8_0 + 108.482142857142*G24_8_8_1 + 21.6964285714285*G24_8_9_0 - 108.482142857142*G24_8_9_1 - 9.6428571428572*G24_9_0_0 - 9.64285714285711*G24_9_0_1 - 12.0535714285713*G24_9_1_0 + 4.17118420640874e-14*G24_9_1_1 - 1.2053571428572*G24_9_2_1 - 43.3928571428571*G24_9_3_0 - 54.2410714285713*G24_9_3_1 + 10.8482142857143*G24_9_4_0 + 10.8482142857144*G24_9_4_1 - 21.6964285714285*G24_9_5_0 - 1.40125473615908e-13*G24_9_5_1 - 10.8482142857142*G24_9_6_0 + 10.8482142857142*G24_9_6_1 + 32.5446428571429*G24_9_7_0 + 10.8482142857145*G24_9_7_1 - 10.8482142857144*G24_9_8_0 + 54.241071428571*G24_9_8_1 + 65.0892857142855*G24_9_9_0 - 21.6964285714283*G24_9_9_1 - 6.0267857142857*G25_0_0_10 + 0.334821428571401*G25_0_0_11 - 1.80803571428572*G25_0_0_12 + 0.200892857142791*G25_0_0_13 + 2.61160714285716*G25_0_0_14 - 10.0446428571429*G25_0_0_15 + 6.83035714285713*G25_0_0_16 - 14.0624999999999*G25_0_0_17 - 3.21428571428579*G25_0_0_18 - 9.6428571428572*G25_0_0_19 - 6.02678571428569*G25_0_1_10 + 0.334821428571435*G25_0_1_11 - 1.8080357142857*G25_0_1_12 + 0.200892857142905*G25_0_1_13 + 2.6116071428571*G25_0_1_14 - 10.0446428571429*G25_0_1_15 + 6.83035714285711*G25_0_1_16 - 14.0625*G25_0_1_17 - 3.21428571428554*G25_0_1_18 - 9.64285714285711*G25_0_1_19 - 2.61160714285711*G25_1_0_10 - 13.392857142857*G25_1_0_11 - 2.41071428571427*G25_1_0_12 - 20.0892857142856*G25_1_0_13 + 10.0446428571428*G25_1_0_14 + 2.8125*G25_1_0_15 + 2.20982142857142*G25_1_0_16 + 14.0624999999999*G25_1_0_17 - 40.1785714285711*G25_1_0_18 - 12.0535714285713*G25_1_0_19 + 2.53613033933489e-14*G25_1_1_11 + 1.99499540559884e-14*G25_1_1_15 + 1.32907259238379e-14*G25_1_1_16 + 3.92019490851954e-14*G25_1_1_18 + 4.17118420640874e-14*G25_1_1_19 + 1.40625*G25_2_1_10 - 2.34375*G25_2_1_11 - 0.200892857142922*G25_2_1_13 + 2.81250000000003*G25_2_1_14 - 2.61160714285711*G25_2_1_15 + 2.20982142857143*G25_2_1_16 + 1.40625000000005*G25_2_1_17 - 14.8660714285716*G25_2_1_18 - 1.2053571428572*G25_2_1_19 - 3.81696428571428*G25_3_0_10 - 2.00892857142857*G25_3_0_11 - 3.81696428571428*G25_3_0_12 - 36.1607142857142*G25_3_0_13 + 12.65625*G25_3_0_14 + 1.80803571428567*G25_3_0_15 + 1.80803571428573*G25_3_0_16 + 12.65625*G25_3_0_17 - 36.1607142857142*G25_3_0_18 - 43.3928571428571*G25_3_0_19 - 7.6339285714285*G25_3_1_10 - 24.1071428571427*G25_3_1_11 - 7.4330357142857*G25_3_1_12 - 54.2410714285713*G25_3_1_13 + 27.1205357142856*G25_3_1_14 + 1.80803571428573*G25_3_1_15 + 7.23214285714283*G25_3_1_16 + 27.1205357142857*G25_3_1_17 - 108.482142857143*G25_3_1_18 - 54.2410714285713*G25_3_1_19 + 0.401785714285712*G25_4_0_10 + 1.00446428571428*G25_4_0_11 + 1.00446428571428*G25_4_0_12 + 1.8080357142857*G25_4_0_13 + 1.80803571428573*G25_4_0_14 - 3.61607142857142*G25_4_0_15 + 7.23214285714284*G25_4_0_16 - 3.61607142857142*G25_4_0_17 + 7.23214285714281*G25_4_0_18 + 10.8482142857143*G25_4_0_19 + 0.200892857142828*G25_4_1_10 + 12.0535714285714*G25_4_1_11 + 2.20982142857144*G25_4_1_12 + 2.1320575513406e-13*G25_4_1_13 - 5.42410714285719*G25_4_1_14 + 1.80803571428559*G25_4_1_15 + 1.80803571428569*G25_4_1_16 - 5.4241071428573*G25_4_1_17 + 54.2410714285717*G25_4_1_18 + 10.8482142857144*G25_4_1_19 - 1.00446428571427*G25_5_0_10 - 4.01785714285712*G25_5_0_11 + 0.200892857142852*G25_5_0_12 + 3.61607142857141*G25_5_0_13 - 1.80803571428569*G25_5_0_14 - 23.5044642857142*G25_5_0_15 - 1.80803571428569*G25_5_0_16 - 12.65625*G25_5_0_17 + 14.4642857142857*G25_5_0_18 - 21.6964285714285*G25_5_0_19 + 11.0491071428571*G25_5_1_10 + 1.00446428571421*G25_5_1_11 + 3.01339285714282*G25_5_1_12 + 5.42410714285694*G25_5_1_13 - 5.42410714285701*G25_5_1_14 + 3.61607142857148*G25_5_1_15 - 12.6562499999999*G25_5_1_16 + 14.4642857142858*G25_5_1_17 + 3.61607142857089*G25_5_1_18 - 1.38376004990386e-13*G25_5_1_19 - 0.401785714285711*G25_6_0_10 - 1.00446428571428*G25_6_0_11 - 1.00446428571428*G25_6_0_12 - 1.80803571428569*G25_6_0_13 - 1.80803571428574*G25_6_0_14 + 3.61607142857142*G25_6_0_15 - 7.23214285714284*G25_6_0_16 + 3.61607142857142*G25_6_0_17 - 7.2321428571428*G25_6_0_18 - 10.8482142857142*G25_6_0_19 - 6.42857142857141*G25_6_1_10 + 1.0044642857143*G25_6_1_11 - 1.20535714285715*G25_6_1_12 - 5.42410714285723*G25_6_1_13 + 3.21357523924704e-14*G25_6_1_14 + 9.0401785714286*G25_6_1_15 + 3.61607142857145*G25_6_1_16 - 1.80803571428564*G25_6_1_17 + 14.4642857142856*G25_6_1_18 + 10.8482142857142*G25_6_1_19 + 7.03125000000001*G25_7_0_10 - 7.03124999999989*G25_7_0_11 + 4.21875000000001*G25_7_0_12 + 1.80803571428585*G25_7_0_13 - 9.0401785714286*G25_7_0_14 + 14.4642857142858*G25_7_0_15 - 12.65625*G25_7_0_16 + 21.6964285714285*G25_7_0_17 + 43.3928571428571*G25_7_0_18 + 32.5446428571429*G25_7_0_19 - 5.02232142857137*G25_7_1_10 - 12.0535714285713*G25_7_1_11 + 1.40625000000003*G25_7_1_12 + 3.20846702071137e-13*G25_7_1_13 - 5.42410714285727*G25_7_1_14 - 12.65625*G25_7_1_15 - 1.80803571428576*G25_7_1_16 - 5.4241071428573*G25_7_1_17 + 54.2410714285718*G25_7_1_18 + 10.8482142857145*G25_7_1_19 + 1.60714285714281*G25_8_0_10 + 20.0892857142855*G25_8_0_11 - 2.10015923922391e-14*G25_8_0_12 + 18.080357142857*G25_8_0_13 - 3.61607142857135*G25_8_0_14 - 7.23214285714291*G25_8_0_15 + 3.61607142857144*G25_8_0_16 - 21.6964285714285*G25_8_0_17 - 1.86991409752553e-13*G25_8_0_18 - 10.8482142857144*G25_8_0_19 + 7.63392857142849*G25_8_1_10 + 24.1071428571426*G25_8_1_11 + 7.43303571428565*G25_8_1_12 + 54.2410714285709*G25_8_1_13 - 27.1205357142854*G25_8_1_14 - 1.80803571428563*G25_8_1_15 - 7.23214285714279*G25_8_1_16 - 27.1205357142854*G25_8_1_17 + 108.482142857142*G25_8_1_18 + 54.241071428571*G25_8_1_19 + 4.82142857142855*G25_9_0_10 + 6.02678571428569*G25_9_0_11 + 3.61607142857143*G25_9_0_12 + 32.5446428571428*G25_9_0_13 - 10.8482142857143*G25_9_0_14 + 21.6964285714286*G25_9_0_15 - 3.56329820250939e-14*G25_9_0_16 + 21.6964285714285*G25_9_0_18 + 65.0892857142855*G25_9_0_19 + 4.82142857142857*G25_9_1_10 + 6.40271256152625e-14*G25_9_1_11 - 3.61607142857139*G25_9_1_12 + 1.90436208469258e-13*G25_9_1_13 + 10.8482142857141*G25_9_1_14 + 10.8482142857142*G25_9_1_15 - 4.17206145932741e-14*G25_9_1_16 + 10.8482142857142*G25_9_1_17 - 108.482142857142*G25_9_1_18 - 21.6964285714283*G25_9_1_19;
    A[9] = -4.04999999999999*G4_0_3_0 - 2.025*G4_0_3_1 - 2.02499999999999*G4_0_4_1 - 4.04999999999999*G4_0_5_0 - 2.02499999999999*G4_0_5_1 + 2.02499999999999*G4_0_6_1 + 1.6454719531378e-14*G4_0_7_0 - 2.02499999999998*G4_0_7_1 - 1.12119515061071e-14*G4_0_8_0 + 2.02499999999999*G4_0_8_1 + 8.09999999999997*G4_0_9_0 + 4.04999999999998*G4_0_9_1 - 2.025*G4_1_3_0 - 2.025*G4_1_4_0 - 4.04999999999999*G4_1_4_1 - 2.02499999999999*G4_1_5_0 + 1.00058850094342e-14*G4_1_5_1 + 2.025*G4_1_6_0 - 1.26287869051112e-14*G4_1_6_1 - 2.02499999999998*G4_1_7_0 - 4.04999999999998*G4_1_7_1 + 2.02499999999998*G4_1_8_0 + 4.04999999999998*G4_1_9_0 + 8.09999999999997*G4_1_9_1 - 4.04999999999999*G5_0_3_0 - 2.025*G5_0_3_1 - 2.02499999999999*G5_0_4_1 - 4.04999999999999*G5_0_5_0 - 2.02499999999999*G5_0_5_1 + 2.02499999999999*G5_0_6_1 + 1.6454719531378e-14*G5_0_7_0 - 2.02499999999998*G5_0_7_1 - 1.12119515061071e-14*G5_0_8_0 + 2.02499999999999*G5_0_8_1 + 8.09999999999997*G5_0_9_0 + 4.04999999999998*G5_0_9_1 - 2.025*G5_1_3_0 - 2.025*G5_1_4_0 - 4.04999999999999*G5_1_4_1 - 2.02499999999999*G5_1_5_0 + 1.00058850094342e-14*G5_1_5_1 + 2.025*G5_1_6_0 - 1.26287869051112e-14*G5_1_6_1 - 2.02499999999998*G5_1_7_0 - 4.04999999999998*G5_1_7_1 + 2.02499999999998*G5_1_8_0 + 4.04999999999998*G5_1_9_0 + 8.09999999999997*G5_1_9_1 - 0.149999999999999*G6_0_20 + 0.15*G6_0_21 + 0.599999999999997*G6_0_23 - 0.599999999999998*G6_0_24 - 0.149999999999999*G6_1_20 + 0.149999999999999*G6_1_22 + 0.6*G6_1_23 - 0.599999999999995*G6_1_25 + 2.025*G7_0_3_0 + 1.0125*G7_0_3_1 + 1.01249999999999*G7_0_4_1 + 2.02499999999999*G7_0_5_0 + 1.01249999999999*G7_0_5_1 - 1.01249999999999*G7_0_6_1 + 1.01249999999999*G7_0_7_1 - 1.01249999999999*G7_0_8_1 - 4.04999999999999*G7_0_9_0 - 2.02499999999999*G7_0_9_1 + 1.0125*G7_1_3_0 + 1.0125*G7_1_4_0 + 2.025*G7_1_4_1 + 1.01249999999999*G7_1_5_0 - 1.0125*G7_1_6_0 + 1.01249999999999*G7_1_7_0 + 2.02499999999999*G7_1_7_1 - 1.01249999999999*G7_1_8_0 - 2.02499999999999*G7_1_9_0 - 4.04999999999998*G7_1_9_1 + 2.025*G8_0_3_0 + 1.0125*G8_0_3_1 + 1.01249999999999*G8_0_4_1 + 2.02499999999999*G8_0_5_0 + 1.01249999999999*G8_0_5_1 - 1.01249999999999*G8_0_6_1 + 1.01249999999999*G8_0_7_1 - 1.01249999999999*G8_0_8_1 - 4.04999999999999*G8_0_9_0 - 2.02499999999999*G8_0_9_1 + 1.0125*G8_1_3_0 + 1.0125*G8_1_4_0 + 2.025*G8_1_4_1 + 1.01249999999999*G8_1_5_0 - 1.0125*G8_1_6_0 + 1.01249999999999*G8_1_7_0 + 2.02499999999999*G8_1_7_1 - 1.01249999999999*G8_1_8_0 - 2.02499999999999*G8_1_9_0 - 4.04999999999998*G8_1_9_1 + 0.0749999999999997*G9_0_20 - 0.0749999999999998*G9_0_21 - 0.299999999999999*G9_0_23 + 0.3*G9_0_24 + 0.0749999999999997*G9_1_20 - 0.0749999999999997*G9_1_22 - 0.3*G9_1_23 + 0.299999999999997*G9_1_25 - 4.04999999999999*G10_0_3_0 - 2.025*G10_0_3_1 - 2.02499999999999*G10_0_4_1 - 4.04999999999999*G10_0_5_0 - 2.02499999999999*G10_0_5_1 + 2.02499999999999*G10_0_6_1 + 1.6454719531378e-14*G10_0_7_0 - 2.02499999999998*G10_0_7_1 - 1.12119515061071e-14*G10_0_8_0 + 2.02499999999999*G10_0_8_1 + 8.09999999999997*G10_0_9_0 + 4.04999999999998*G10_0_9_1 - 2.025*G10_1_3_0 - 2.025*G10_1_4_0 - 4.04999999999999*G10_1_4_1 - 2.02499999999999*G10_1_5_0 + 1.00058850094342e-14*G10_1_5_1 + 2.025*G10_1_6_0 - 1.26287869051112e-14*G10_1_6_1 - 2.02499999999998*G10_1_7_0 - 4.04999999999998*G10_1_7_1 + 2.02499999999998*G10_1_8_0 + 4.04999999999998*G10_1_9_0 + 8.09999999999997*G10_1_9_1 - 4.04999999999999*G11_0_13_0 - 2.025*G11_0_13_1 - 2.02499999999999*G11_0_14_1 - 4.04999999999999*G11_0_15_0 - 2.02499999999999*G11_0_15_1 + 2.02499999999999*G11_0_16_1 + 1.6454719531378e-14*G11_0_17_0 - 2.02499999999998*G11_0_17_1 - 1.12119515061071e-14*G11_0_18_0 + 2.02499999999999*G11_0_18_1 + 8.09999999999997*G11_0_19_0 + 4.04999999999998*G11_0_19_1 - 2.025*G11_1_13_0 - 2.025*G11_1_14_0 - 4.04999999999999*G11_1_14_1 - 2.02499999999999*G11_1_15_0 + 1.00058850094342e-14*G11_1_15_1 + 2.025*G11_1_16_0 - 1.26287869051112e-14*G11_1_16_1 - 2.02499999999998*G11_1_17_0 - 4.04999999999998*G11_1_17_1 + 2.02499999999998*G11_1_18_0 + 4.04999999999998*G11_1_19_0 + 8.09999999999997*G11_1_19_1 + 2.025*G12_0_3_0 + 1.0125*G12_0_3_1 + 1.01249999999999*G12_0_4_1 + 2.02499999999999*G12_0_5_0 + 1.01249999999999*G12_0_5_1 - 1.01249999999999*G12_0_6_1 + 1.01249999999999*G12_0_7_1 - 1.01249999999999*G12_0_8_1 - 4.04999999999999*G12_0_9_0 - 2.02499999999999*G12_0_9_1 + 1.0125*G12_1_3_0 + 1.0125*G12_1_4_0 + 2.025*G12_1_4_1 + 1.01249999999999*G12_1_5_0 - 1.0125*G12_1_6_0 + 1.01249999999999*G12_1_7_0 + 2.02499999999999*G12_1_7_1 - 1.01249999999999*G12_1_8_0 - 2.02499999999999*G12_1_9_0 - 4.04999999999998*G12_1_9_1 + 2.025*G13_0_13_0 + 1.0125*G13_0_13_1 + 1.01249999999999*G13_0_14_1 + 2.02499999999999*G13_0_15_0 + 1.01249999999999*G13_0_15_1 - 1.01249999999999*G13_0_16_1 + 1.01249999999999*G13_0_17_1 - 1.01249999999999*G13_0_18_1 - 4.04999999999999*G13_0_19_0 - 2.02499999999999*G13_0_19_1 + 1.0125*G13_1_13_0 + 1.0125*G13_1_14_0 + 2.025*G13_1_14_1 + 1.01249999999999*G13_1_15_0 - 1.0125*G13_1_16_0 + 1.01249999999999*G13_1_17_0 + 2.02499999999999*G13_1_17_1 - 1.01249999999999*G13_1_18_0 - 2.02499999999999*G13_1_19_0 - 4.04999999999998*G13_1_19_1 - 5.35714285714283*G20_0_0_0 - 5.35714285714285*G20_0_0_1 + 2.94642857142856*G20_0_1_0 + 2.94642857142857*G20_0_2_1 + 16.8749999999999*G20_0_3_0 + 9.64285714285711*G20_0_3_1 + 9.64285714285709*G20_0_4_0 + 16.8749999999998*G20_0_4_1 + 12.0535714285714*G20_0_5_0 + 12.0535714285714*G20_0_5_1 - 9.64285714285709*G20_0_6_0 - 9.64285714285705*G20_0_6_1 + 12.0535714285714*G20_0_7_0 + 12.0535714285713*G20_0_7_1 - 9.6428571428571*G20_0_8_0 - 9.64285714285703*G20_0_8_1 - 28.9285714285713*G20_0_9_0 - 28.9285714285714*G20_0_9_1 - 2.94642857142859*G20_1_0_0 - 2.9464285714286*G20_1_0_1 + 5.35714285714283*G20_1_1_0 + 2.39611284170569e-14*G20_1_1_1 + 2.94642857142857*G20_1_2_1 - 12.0535714285715*G20_1_3_0 - 8.55052790724176e-14*G20_1_3_1 + 9.64285714285712*G20_1_4_0 - 4.21503110192845e-14*G20_1_4_1 - 16.8749999999999*G20_1_5_0 - 7.23214285714277*G20_1_5_1 - 9.64285714285712*G20_1_6_0 + 7.23214285714284*G20_1_6_1 + 9.64285714285719*G20_1_7_0 + 2.46281944490945e-14*G20_1_7_1 - 12.0535714285714*G20_1_8_0 + 1.03470834331154e-13*G20_1_8_1 + 28.9285714285714*G20_1_9_0 - 6.63245500187593e-14*G20_1_9_1 - 2.94642857142856*G20_2_0_0 - 2.94642857142858*G20_2_0_1 + 2.94642857142855*G20_2_1_0 + 5.35714285714285*G20_2_2_1 + 6.83481049534862e-14*G20_2_3_0 + 9.64285714285718*G20_2_3_1 - 12.0535714285714*G20_2_4_1 - 5.08065811644087e-14*G20_2_5_0 + 9.64285714285713*G20_2_5_1 - 12.0535714285713*G20_2_6_1 - 7.23214285714283*G20_2_7_0 - 16.875*G20_2_7_1 + 7.23214285714283*G20_2_8_0 - 9.64285714285707*G20_2_8_1 - 1.68753899743024e-14*G20_2_9_0 + 28.9285714285713*G20_2_9_1 - 2.41071428571407*G20_3_0_0 - 2.41071428571425*G20_3_0_1 + 24.1071428571427*G20_3_1_0 - 9.44335582115648e-14*G20_3_1_1 - 19.2857142857141*G20_3_2_1 + 130.178571428571*G20_3_3_0 + 108.482142857143*G20_3_3_1 - 43.392857142857*G20_3_4_0 + 21.6964285714282*G20_3_4_1 + 43.3928571428569*G20_3_5_0 + 21.6964285714286*G20_3_5_1 + 43.3928571428569*G20_3_6_0 + 2.42680875395251e-13*G20_3_6_1 - 4.15785461616025e-13*G20_3_7_0 + 21.6964285714279*G20_3_7_1 - 21.6964285714282*G20_3_8_0 - 108.482142857142*G20_3_8_1 - 173.571428571428*G20_3_9_0 - 43.3928571428573*G20_3_9_1 - 2.41071428571434*G20_4_0_0 - 2.41071428571433*G20_4_0_1 - 19.2857142857142*G20_4_1_0 + 1.96889461695947e-13*G20_4_1_1 + 24.1071428571426*G20_4_2_1 + 21.6964285714284*G20_4_3_0 - 43.3928571428574*G20_4_3_1 + 108.482142857142*G20_4_4_0 + 130.178571428571*G20_4_4_1 + 21.6964285714286*G20_4_5_0 - 1.58900670399476e-13*G20_4_5_1 - 108.482142857142*G20_4_6_0 - 21.6964285714279*G20_4_6_1 + 21.6964285714285*G20_4_7_0 + 43.3928571428569*G20_4_7_1 + 4.53335285977019e-14*G20_4_8_0 + 43.3928571428572*G20_4_8_1 - 43.392857142857*G20_4_9_0 - 173.571428571428*G20_4_9_1 - 24.107142857143*G20_5_0_0 - 24.107142857143*G20_5_0_1 + 2.41071428571437*G20_5_1_0 + 6.45874451709362e-14*G20_5_1_1 - 19.2857142857141*G20_5_2_1 - 43.3928571428571*G20_5_3_0 - 21.6964285714284*G20_5_3_1 - 43.392857142857*G20_5_4_0 - 43.3928571428573*G20_5_4_1 - 130.178571428571*G20_5_5_0 - 21.6964285714282*G20_5_5_1 + 43.392857142857*G20_5_6_0 + 65.0892857142855*G20_5_6_1 + 21.696428571429*G20_5_7_0 - 86.7857142857139*G20_5_7_1 - 4.28234298065558e-13*G20_5_8_0 + 21.6964285714285*G20_5_8_1 + 173.571428571428*G20_5_9_0 + 130.178571428571*G20_5_9_1 + 19.2857142857142*G20_6_0_0 + 19.2857142857142*G20_6_0_1 + 2.41071428571426*G20_6_1_0 + 2.04961862571895e-13*G20_6_1_1 + 24.1071428571427*G20_6_2_1 - 21.6964285714287*G20_6_3_0 - 21.696428571429*G20_6_3_1 + 108.482142857142*G20_6_4_0 + 86.7857142857139*G20_6_4_1 - 21.6964285714283*G20_6_5_0 - 65.0892857142855*G20_6_5_1 - 108.482142857142*G20_6_6_0 + 21.6964285714289*G20_6_6_1 - 2.0905369449431e-14*G20_6_7_0 + 43.3928571428569*G20_6_7_1 - 21.6964285714284*G20_6_8_0 + 21.6964285714288*G20_6_8_1 + 43.392857142857*G20_6_9_0 - 130.178571428571*G20_6_9_1 - 24.1071428571429*G20_7_0_0 - 24.107142857143*G20_7_0_1 - 19.2857142857141*G20_7_1_0 + 6.9918256593794e-14*G20_7_1_1 + 2.41071428571442*G20_7_2_1 - 43.3928571428572*G20_7_3_0 - 43.3928571428568*G20_7_3_1 - 21.6964285714285*G20_7_4_0 - 43.3928571428574*G20_7_4_1 - 86.785714285714*G20_7_5_0 + 21.6964285714288*G20_7_5_1 + 21.6964285714285*G20_7_6_0 - 7.12887865059186e-14*G20_7_6_1 - 21.6964285714279*G20_7_7_0 - 130.178571428571*G20_7_7_1 + 65.0892857142849*G20_7_8_0 + 43.392857142857*G20_7_8_1 + 130.178571428571*G20_7_9_0 + 173.571428571428*G20_7_9_1 + 19.2857142857144*G20_8_0_0 + 19.2857142857142*G20_8_0_1 + 24.1071428571426*G20_8_1_0 - 8.34236841281747e-14*G20_8_1_1 + 2.4107142857144*G20_8_2_1 + 86.7857142857141*G20_8_3_0 + 108.482142857143*G20_8_3_1 - 21.6964285714285*G20_8_4_0 - 21.6964285714288*G20_8_4_1 + 43.392857142857*G20_8_5_0 + 2.80306458383048e-13*G20_8_5_1 + 21.6964285714285*G20_8_6_0 - 21.6964285714284*G20_8_6_1 - 65.0892857142859*G20_8_7_0 - 21.696428571429*G20_8_7_1 + 21.6964285714288*G20_8_8_0 - 108.482142857142*G20_8_8_1 - 130.178571428571*G20_8_9_0 + 43.3928571428567*G20_8_9_1 + 57.8571428571426*G20_9_0_0 + 57.8571428571417*G20_9_0_1 - 57.8571428571427*G20_9_1_0 + 8.40064163166811e-13*G20_9_1_1 - 57.8571428571422*G20_9_2_1 + 347.142857142856*G20_9_3_0 + 86.7857142857139*G20_9_3_1 + 86.7857142857138*G20_9_4_0 + 347.142857142853*G20_9_4_1 - 347.142857142856*G20_9_5_0 - 260.357142857141*G20_9_5_1 - 86.7857142857139*G20_9_6_0 + 260.357142857144*G20_9_6_1 - 260.357142857141*G20_9_7_0 - 347.142857142858*G20_9_7_1 + 260.357142857141*G20_9_8_0 - 86.7857142857114*G20_9_8_1 + 8.42883705540198e-14*G20_9_9_0 - 1.68388642873135e-12*G20_9_9_1 - 5.35714285714283*G21_0_0_10 - 2.94642857142859*G21_0_0_11 - 2.94642857142856*G21_0_0_12 - 2.41071428571407*G21_0_0_13 - 2.41071428571435*G21_0_0_14 - 24.107142857143*G21_0_0_15 + 19.2857142857142*G21_0_0_16 - 24.1071428571429*G21_0_0_17 + 19.2857142857144*G21_0_0_18 + 57.8571428571426*G21_0_0_19 - 5.35714285714285*G21_0_1_10 - 2.9464285714286*G21_0_1_11 - 2.94642857142858*G21_0_1_12 - 2.41071428571425*G21_0_1_13 - 2.41071428571433*G21_0_1_14 - 24.107142857143*G21_0_1_15 + 19.2857142857142*G21_0_1_16 - 24.107142857143*G21_0_1_17 + 19.2857142857142*G21_0_1_18 + 57.8571428571417*G21_0_1_19 + 2.94642857142856*G21_1_0_10 + 5.35714285714283*G21_1_0_11 + 2.94642857142855*G21_1_0_12 + 24.1071428571427*G21_1_0_13 - 19.2857142857142*G21_1_0_14 + 2.41071428571437*G21_1_0_15 + 2.41071428571426*G21_1_0_16 - 19.2857142857141*G21_1_0_17 + 24.1071428571426*G21_1_0_18 - 57.8571428571427*G21_1_0_19 + 2.39611284170569e-14*G21_1_1_11 - 9.44335582115648e-14*G21_1_1_13 + 1.96889461695947e-13*G21_1_1_14 + 6.45874451709362e-14*G21_1_1_15 + 2.04961862571895e-13*G21_1_1_16 + 6.9918256593794e-14*G21_1_1_17 - 8.34236841281747e-14*G21_1_1_18 + 8.40064163166811e-13*G21_1_1_19 + 2.94642857142857*G21_2_1_10 + 2.94642857142857*G21_2_1_11 + 5.35714285714285*G21_2_1_12 - 19.2857142857141*G21_2_1_13 + 24.1071428571426*G21_2_1_14 - 19.2857142857141*G21_2_1_15 + 24.1071428571427*G21_2_1_16 + 2.41071428571442*G21_2_1_17 + 2.4107142857144*G21_2_1_18 - 57.8571428571422*G21_2_1_19 + 16.8749999999999*G21_3_0_10 - 12.0535714285715*G21_3_0_11 + 7.03395675039076e-14*G21_3_0_12 + 130.178571428571*G21_3_0_13 + 21.6964285714284*G21_3_0_14 - 43.3928571428571*G21_3_0_15 - 21.6964285714287*G21_3_0_16 - 43.3928571428572*G21_3_0_17 + 86.7857142857141*G21_3_0_18 + 347.142857142855*G21_3_0_19 + 9.64285714285711*G21_3_1_10 - 8.46171006527174e-14*G21_3_1_11 + 9.64285714285718*G21_3_1_12 + 108.482142857143*G21_3_1_13 - 43.3928571428574*G21_3_1_14 - 21.6964285714284*G21_3_1_15 - 21.696428571429*G21_3_1_16 - 43.3928571428568*G21_3_1_17 + 108.482142857143*G21_3_1_18 + 86.7857142857139*G21_3_1_19 + 9.64285714285709*G21_4_0_10 + 9.64285714285712*G21_4_0_11 - 43.392857142857*G21_4_0_13 + 108.482142857142*G21_4_0_14 - 43.392857142857*G21_4_0_15 + 108.482142857142*G21_4_0_16 - 21.6964285714285*G21_4_0_17 - 21.6964285714285*G21_4_0_18 + 86.7857142857138*G21_4_0_19 + 16.8749999999998*G21_4_1_10 - 4.12491221735145e-14*G21_4_1_11 - 12.0535714285714*G21_4_1_12 + 21.6964285714282*G21_4_1_13 + 130.178571428571*G21_4_1_14 - 43.3928571428573*G21_4_1_15 + 86.7857142857139*G21_4_1_16 - 43.3928571428574*G21_4_1_17 - 21.6964285714288*G21_4_1_18 + 347.142857142853*G21_4_1_19 + 12.0535714285714*G21_5_0_10 - 16.8749999999999*G21_5_0_11 - 4.88914464469303e-14*G21_5_0_12 + 43.3928571428569*G21_5_0_13 + 21.6964285714286*G21_5_0_14 - 130.178571428571*G21_5_0_15 - 21.6964285714283*G21_5_0_16 - 86.7857142857139*G21_5_0_17 + 43.392857142857*G21_5_0_18 - 347.142857142856*G21_5_0_19 + 12.0535714285714*G21_5_1_10 - 7.23214285714277*G21_5_1_11 + 9.64285714285714*G21_5_1_12 + 21.6964285714286*G21_5_1_13 - 1.62453384078276e-13*G21_5_1_14 - 21.6964285714282*G21_5_1_15 - 65.0892857142855*G21_5_1_16 + 21.6964285714288*G21_5_1_17 + 2.8197005819651e-13*G21_5_1_18 - 260.357142857141*G21_5_1_19 - 9.64285714285709*G21_6_0_10 - 9.64285714285712*G21_6_0_11 + 43.3928571428569*G21_6_0_13 - 108.482142857142*G21_6_0_14 + 43.392857142857*G21_6_0_15 - 108.482142857142*G21_6_0_16 + 21.6964285714285*G21_6_0_17 + 21.6964285714285*G21_6_0_18 - 86.7857142857139*G21_6_0_19 - 9.64285714285705*G21_6_1_10 + 7.23214285714284*G21_6_1_11 - 12.0535714285713*G21_6_1_12 + 2.38670194718793e-13*G21_6_1_13 - 21.6964285714279*G21_6_1_14 + 65.0892857142854*G21_6_1_15 + 21.6964285714289*G21_6_1_16 - 7.77835911999758e-14*G21_6_1_17 - 21.6964285714284*G21_6_1_18 + 260.357142857144*G21_6_1_19 + 12.0535714285714*G21_7_0_10 + 9.64285714285719*G21_7_0_11 - 7.23214285714283*G21_7_0_12 - 4.14897283196325e-13*G21_7_0_13 + 21.6964285714285*G21_7_0_14 + 21.696428571429*G21_7_0_15 - 2.02668827900543e-14*G21_7_0_16 - 21.6964285714279*G21_7_0_17 - 65.0892857142859*G21_7_0_18 - 260.357142857141*G21_7_0_19 + 12.0535714285713*G21_7_1_10 + 2.71818158259496e-14*G21_7_1_11 - 16.875*G21_7_1_12 + 21.6964285714279*G21_7_1_13 + 43.3928571428569*G21_7_1_14 - 86.7857142857139*G21_7_1_15 + 43.3928571428569*G21_7_1_16 - 130.178571428571*G21_7_1_17 - 21.696428571429*G21_7_1_18 - 347.142857142858*G21_7_1_19 - 9.6428571428571*G21_8_0_10 - 12.0535714285714*G21_8_0_11 + 7.23214285714283*G21_8_0_12 - 21.6964285714282*G21_8_0_13 + 4.622257437914e-14*G21_8_0_14 - 4.28955943031564e-13*G21_8_0_15 - 21.6964285714284*G21_8_0_16 + 65.0892857142849*G21_8_0_17 + 21.6964285714288*G21_8_0_18 + 260.357142857141*G21_8_0_19 - 9.64285714285703*G21_8_1_10 + 1.03470834331154e-13*G21_8_1_11 - 9.64285714285707*G21_8_1_12 - 108.482142857142*G21_8_1_13 + 43.3928571428572*G21_8_1_14 + 21.6964285714285*G21_8_1_15 + 21.6964285714288*G21_8_1_16 + 43.392857142857*G21_8_1_17 - 108.482142857142*G21_8_1_18 - 86.7857142857114*G21_8_1_19 - 28.9285714285713*G21_9_0_10 + 28.9285714285714*G21_9_0_11 - 2.04281036531029e-14*G21_9_0_12 - 173.571428571428*G21_9_0_13 - 43.392857142857*G21_9_0_14 + 173.571428571428*G21_9_0_15 + 43.392857142857*G21_9_0_16 + 130.178571428571*G21_9_0_17 - 130.178571428571*G21_9_0_18 + 1.13598258404124e-13*G21_9_0_19 - 28.9285714285714*G21_9_1_10 - 6.72127284384594e-14*G21_9_1_11 + 28.9285714285712*G21_9_1_12 - 43.3928571428573*G21_9_1_13 - 173.571428571428*G21_9_1_14 + 130.178571428571*G21_9_1_15 - 130.178571428571*G21_9_1_16 + 173.571428571428*G21_9_1_17 + 43.3928571428567*G21_9_1_18 - 1.73895338233254e-12*G21_9_1_19 + 2.67857142857142*G24_0_0_0 + 2.67857142857143*G24_0_0_1 - 1.47321428571428*G24_0_1_0 - 1.47321428571428*G24_0_2_1 - 8.43749999999996*G24_0_3_0 - 4.82142857142855*G24_0_3_1 - 4.82142857142854*G24_0_4_0 - 8.43749999999992*G24_0_4_1 - 6.02678571428572*G24_0_5_0 - 6.02678571428571*G24_0_5_1 + 4.82142857142855*G24_0_6_0 + 4.82142857142853*G24_0_6_1 - 6.02678571428569*G24_0_7_0 - 6.02678571428567*G24_0_7_1 + 4.82142857142855*G24_0_8_0 + 4.82142857142851*G24_0_8_1 + 14.4642857142857*G24_0_9_0 + 14.4642857142857*G24_0_9_1 + 1.4732142857143*G24_1_0_0 + 1.4732142857143*G24_1_0_1 - 2.67857142857142*G24_1_1_0 - 1.19805642085284e-14*G24_1_1_1 - 1.47321428571429*G24_1_2_1 + 6.02678571428574*G24_1_3_0 + 4.27526395362088e-14*G24_1_3_1 - 4.82142857142856*G24_1_4_0 + 2.10751555096422e-14*G24_1_4_1 + 8.43749999999996*G24_1_5_0 + 3.61607142857138*G24_1_5_1 + 4.82142857142856*G24_1_6_0 - 3.61607142857142*G24_1_6_1 - 4.82142857142859*G24_1_7_0 - 1.23140972245472e-14*G24_1_7_1 + 6.02678571428571*G24_1_8_0 - 5.17354171655771e-14*G24_1_8_1 - 14.4642857142857*G24_1_9_0 + 3.31622750093796e-14*G24_1_9_1 + 1.47321428571428*G24_2_0_0 + 1.47321428571429*G24_2_0_1 - 1.47321428571428*G24_2_1_0 - 2.67857142857143*G24_2_2_1 - 3.41740524767431e-14*G24_2_3_0 - 4.82142857142859*G24_2_3_1 + 6.02678571428571*G24_2_4_1 + 2.54032905822044e-14*G24_2_5_0 - 4.82142857142857*G24_2_5_1 + 6.02678571428567*G24_2_6_1 + 3.61607142857142*G24_2_7_0 + 8.43750000000001*G24_2_7_1 - 3.61607142857142*G24_2_8_0 + 4.82142857142853*G24_2_8_1 - 14.4642857142856*G24_2_9_1 + 1.20535714285704*G24_3_0_0 + 1.20535714285713*G24_3_0_1 - 12.0535714285713*G24_3_1_0 + 4.72167791057824e-14*G24_3_1_1 + 9.64285714285706*G24_3_2_1 - 65.0892857142856*G24_3_3_0 - 54.2410714285714*G24_3_3_1 + 21.6964285714285*G24_3_4_0 - 10.8482142857141*G24_3_4_1 - 21.6964285714284*G24_3_5_0 - 10.8482142857143*G24_3_5_1 - 21.6964285714285*G24_3_6_0 - 1.21340437697626e-13*G24_3_6_1 + 2.07892730808013e-13*G24_3_7_0 - 10.8482142857139*G24_3_7_1 + 10.8482142857141*G24_3_8_0 + 54.2410714285711*G24_3_8_1 + 86.785714285714*G24_3_9_0 + 21.6964285714286*G24_3_9_1 + 1.20535714285717*G24_4_0_0 + 1.20535714285716*G24_4_0_1 + 9.64285714285711*G24_4_1_0 - 9.84447308479733e-14*G24_4_1_1 - 12.0535714285713*G24_4_2_1 - 10.8482142857142*G24_4_3_0 + 21.6964285714287*G24_4_3_1 - 54.2410714285712*G24_4_4_0 - 65.0892857142855*G24_4_4_1 - 10.8482142857143*G24_4_5_0 + 7.94503351997378e-14*G24_4_5_1 + 54.2410714285712*G24_4_6_0 + 10.848214285714*G24_4_6_1 - 10.8482142857142*G24_4_7_0 - 21.6964285714285*G24_4_7_1 - 2.26667642988509e-14*G24_4_8_0 - 21.6964285714286*G24_4_8_1 + 21.6964285714285*G24_4_9_0 + 86.785714285714*G24_4_9_1 + 12.0535714285715*G24_5_0_0 + 12.0535714285715*G24_5_0_1 - 1.20535714285718*G24_5_1_0 - 3.22937225854681e-14*G24_5_1_1 + 9.64285714285704*G24_5_2_1 + 21.6964285714286*G24_5_3_0 + 10.8482142857142*G24_5_3_1 + 21.6964285714285*G24_5_4_0 + 21.6964285714286*G24_5_4_1 + 65.0892857142856*G24_5_5_0 + 10.8482142857141*G24_5_5_1 - 21.6964285714285*G24_5_6_0 - 32.5446428571427*G24_5_6_1 - 10.8482142857145*G24_5_7_0 + 43.392857142857*G24_5_7_1 + 2.14117149032779e-13*G24_5_8_0 - 10.8482142857143*G24_5_8_1 - 86.7857142857141*G24_5_9_0 - 65.0892857142854*G24_5_9_1 - 9.64285714285709*G24_6_0_0 - 9.64285714285708*G24_6_0_1 - 1.20535714285713*G24_6_1_0 - 1.02480931285948e-13*G24_6_1_1 - 12.0535714285713*G24_6_2_1 + 10.8482142857144*G24_6_3_0 + 10.8482142857145*G24_6_3_1 - 54.2410714285712*G24_6_4_0 - 43.3928571428569*G24_6_4_1 + 10.8482142857142*G24_6_5_0 + 32.5446428571428*G24_6_5_1 + 54.2410714285712*G24_6_6_0 - 10.8482142857144*G24_6_6_1 + 1.04526847247155e-14*G24_6_7_0 - 21.6964285714285*G24_6_7_1 + 10.8482142857142*G24_6_8_0 - 10.8482142857144*G24_6_8_1 - 21.6964285714285*G24_6_9_0 + 65.0892857142855*G24_6_9_1 + 12.0535714285715*G24_7_0_0 + 12.0535714285715*G24_7_0_1 + 9.64285714285705*G24_7_1_0 - 3.4959128296897e-14*G24_7_1_1 - 1.20535714285721*G24_7_2_1 + 21.6964285714286*G24_7_3_0 + 21.6964285714284*G24_7_3_1 + 10.8482142857142*G24_7_4_0 + 21.6964285714287*G24_7_4_1 + 43.392857142857*G24_7_5_0 - 10.8482142857144*G24_7_5_1 - 10.8482142857143*G24_7_6_0 + 3.56443932529593e-14*G24_7_6_1 + 10.8482142857139*G24_7_7_0 + 65.0892857142854*G24_7_7_1 - 32.5446428571425*G24_7_8_0 - 21.6964285714285*G24_7_8_1 - 65.0892857142855*G24_7_9_0 - 86.7857142857139*G24_7_9_1 - 9.6428571428572*G24_8_0_0 - 9.64285714285711*G24_8_0_1 - 12.0535714285713*G24_8_1_0 + 4.17118420640874e-14*G24_8_1_1 - 1.2053571428572*G24_8_2_1 - 43.3928571428571*G24_8_3_0 - 54.2410714285713*G24_8_3_1 + 10.8482142857143*G24_8_4_0 + 10.8482142857144*G24_8_4_1 - 21.6964285714285*G24_8_5_0 - 1.40153229191524e-13*G24_8_5_1 - 10.8482142857142*G24_8_6_0 + 10.8482142857142*G24_8_6_1 + 32.5446428571429*G24_8_7_0 + 10.8482142857145*G24_8_7_1 - 10.8482142857144*G24_8_8_0 + 54.241071428571*G24_8_8_1 + 65.0892857142855*G24_8_9_0 - 21.6964285714283*G24_8_9_1 - 28.9285714285713*G24_9_0_0 - 28.9285714285708*G24_9_0_1 + 28.9285714285713*G24_9_1_0 - 4.20032081583405e-13*G24_9_1_1 + 28.9285714285711*G24_9_2_1 - 173.571428571428*G24_9_3_0 - 43.3928571428569*G24_9_3_1 - 43.3928571428569*G24_9_4_0 - 173.571428571427*G24_9_4_1 + 173.571428571428*G24_9_5_0 + 130.17857142857*G24_9_5_1 + 43.3928571428569*G24_9_6_0 - 130.178571428572*G24_9_6_1 + 130.178571428571*G24_9_7_0 + 173.571428571429*G24_9_7_1 - 130.178571428571*G24_9_8_0 + 43.3928571428557*G24_9_8_1 - 4.21441852770099e-14*G24_9_9_0 + 8.41943214365676e-13*G24_9_9_1 + 2.67857142857142*G25_0_0_10 + 1.4732142857143*G25_0_0_11 + 1.47321428571428*G25_0_0_12 + 1.20535714285704*G25_0_0_13 + 1.20535714285717*G25_0_0_14 + 12.0535714285715*G25_0_0_15 - 9.64285714285709*G25_0_0_16 + 12.0535714285715*G25_0_0_17 - 9.6428571428572*G25_0_0_18 - 28.9285714285713*G25_0_0_19 + 2.67857142857143*G25_0_1_10 + 1.4732142857143*G25_0_1_11 + 1.47321428571429*G25_0_1_12 + 1.20535714285713*G25_0_1_13 + 1.20535714285717*G25_0_1_14 + 12.0535714285715*G25_0_1_15 - 9.64285714285708*G25_0_1_16 + 12.0535714285715*G25_0_1_17 - 9.64285714285711*G25_0_1_18 - 28.9285714285708*G25_0_1_19 - 1.47321428571428*G25_1_0_10 - 2.67857142857142*G25_1_0_11 - 1.47321428571428*G25_1_0_12 - 12.0535714285713*G25_1_0_13 + 9.64285714285711*G25_1_0_14 - 1.20535714285719*G25_1_0_15 - 1.20535714285713*G25_1_0_16 + 9.64285714285705*G25_1_0_17 - 12.0535714285713*G25_1_0_18 + 28.9285714285713*G25_1_0_19 - 1.19805642085284e-14*G25_1_1_11 + 4.72167791057824e-14*G25_1_1_13 - 9.84447308479733e-14*G25_1_1_14 - 3.22937225854681e-14*G25_1_1_15 - 1.02480931285948e-13*G25_1_1_16 - 3.4959128296897e-14*G25_1_1_17 + 4.17118420640874e-14*G25_1_1_18 - 4.20032081583405e-13*G25_1_1_19 - 1.47321428571428*G25_2_1_10 - 1.47321428571429*G25_2_1_11 - 2.67857142857143*G25_2_1_12 + 9.64285714285706*G25_2_1_13 - 12.0535714285713*G25_2_1_14 + 9.64285714285704*G25_2_1_15 - 12.0535714285713*G25_2_1_16 - 1.20535714285721*G25_2_1_17 - 1.2053571428572*G25_2_1_18 + 28.9285714285711*G25_2_1_19 - 8.43749999999996*G25_3_0_10 + 6.02678571428574*G25_3_0_11 - 3.51697837519538e-14*G25_3_0_12 - 65.0892857142856*G25_3_0_13 - 10.8482142857142*G25_3_0_14 + 21.6964285714286*G25_3_0_15 + 10.8482142857144*G25_3_0_16 + 21.6964285714286*G25_3_0_17 - 43.3928571428571*G25_3_0_18 - 173.571428571428*G25_3_0_19 - 4.82142857142856*G25_3_1_10 + 4.23085503263587e-14*G25_3_1_11 - 4.82142857142859*G25_3_1_12 - 54.2410714285714*G25_3_1_13 + 21.6964285714287*G25_3_1_14 + 10.8482142857142*G25_3_1_15 + 10.8482142857145*G25_3_1_16 + 21.6964285714284*G25_3_1_17 - 54.2410714285713*G25_3_1_18 - 43.3928571428569*G25_3_1_19 - 4.82142857142854*G25_4_0_10 - 4.82142857142856*G25_4_0_11 + 21.6964285714285*G25_4_0_13 - 54.2410714285712*G25_4_0_14 + 21.6964285714285*G25_4_0_15 - 54.2410714285712*G25_4_0_16 + 10.8482142857142*G25_4_0_17 + 10.8482142857142*G25_4_0_18 - 43.3928571428569*G25_4_0_19 - 8.43749999999992*G25_4_1_10 + 2.06245610867573e-14*G25_4_1_11 + 6.02678571428571*G25_4_1_12 - 10.8482142857141*G25_4_1_13 - 65.0892857142855*G25_4_1_14 + 21.6964285714286*G25_4_1_15 - 43.3928571428569*G25_4_1_16 + 21.6964285714287*G25_4_1_17 + 10.8482142857144*G25_4_1_18 - 173.571428571427*G25_4_1_19 - 6.02678571428571*G25_5_0_10 + 8.43749999999996*G25_5_0_11 + 2.44457232234652e-14*G25_5_0_12 - 21.6964285714284*G25_5_0_13 - 10.8482142857143*G25_5_0_14 + 65.0892857142856*G25_5_0_15 + 10.8482142857142*G25_5_0_16 + 43.392857142857*G25_5_0_17 - 21.6964285714285*G25_5_0_18 + 173.571428571428*G25_5_0_19 - 6.02678571428571*G25_5_1_10 + 3.61607142857138*G25_5_1_11 - 4.82142857142857*G25_5_1_12 - 10.8482142857143*G25_5_1_13 + 8.1226692039138e-14*G25_5_1_14 + 10.8482142857141*G25_5_1_15 + 32.5446428571428*G25_5_1_16 - 10.8482142857144*G25_5_1_17 - 1.40985029098255e-13*G25_5_1_18 + 130.17857142857*G25_5_1_19 + 4.82142857142855*G25_6_0_10 + 4.82142857142856*G25_6_0_11 - 21.6964285714285*G25_6_0_13 + 54.2410714285712*G25_6_0_14 - 21.6964285714285*G25_6_0_15 + 54.2410714285712*G25_6_0_16 - 10.8482142857143*G25_6_0_17 - 10.8482142857142*G25_6_0_18 + 43.3928571428569*G25_6_0_19 + 4.82142857142853*G25_6_1_10 - 3.61607142857142*G25_6_1_11 + 6.02678571428567*G25_6_1_12 - 1.19335097359397e-13*G25_6_1_13 + 10.848214285714*G25_6_1_14 - 32.5446428571427*G25_6_1_15 - 10.8482142857145*G25_6_1_16 + 3.88917955999879e-14*G25_6_1_17 + 10.8482142857142*G25_6_1_18 - 130.178571428572*G25_6_1_19 - 6.02678571428568*G25_7_0_10 - 4.82142857142859*G25_7_0_11 + 3.61607142857141*G25_7_0_12 + 2.07448641598162e-13*G25_7_0_13 - 10.8482142857142*G25_7_0_14 - 10.8482142857145*G25_7_0_15 + 1.01334413950271e-14*G25_7_0_16 + 10.8482142857139*G25_7_0_17 + 32.5446428571429*G25_7_0_18 + 130.178571428571*G25_7_0_19 - 6.02678571428567*G25_7_1_10 - 1.35909079129748e-14*G25_7_1_11 + 8.43750000000001*G25_7_1_12 - 10.8482142857139*G25_7_1_13 - 21.6964285714285*G25_7_1_14 + 43.3928571428569*G25_7_1_15 - 21.6964285714285*G25_7_1_16 + 65.0892857142854*G25_7_1_17 + 10.8482142857145*G25_7_1_18 + 173.571428571429*G25_7_1_19 + 4.82142857142855*G25_8_0_10 + 6.02678571428571*G25_8_0_11 - 3.61607142857142*G25_8_0_12 + 10.8482142857141*G25_8_0_13 - 2.311128718957e-14*G25_8_0_14 + 2.14477971515782e-13*G25_8_0_15 + 10.8482142857142*G25_8_0_16 - 32.5446428571425*G25_8_0_17 - 10.8482142857144*G25_8_0_18 - 130.178571428571*G25_8_0_19 + 4.82142857142852*G25_8_1_10 - 5.17354171655771e-14*G25_8_1_11 + 4.82142857142854*G25_8_1_12 + 54.2410714285711*G25_8_1_13 - 21.6964285714286*G25_8_1_14 - 10.8482142857143*G25_8_1_15 - 10.8482142857144*G25_8_1_16 - 21.6964285714285*G25_8_1_17 + 54.241071428571*G25_8_1_18 + 43.3928571428557*G25_8_1_19 + 14.4642857142857*G25_9_0_10 - 14.4642857142857*G25_9_0_11 + 1.02140518265514e-14*G25_9_0_12 + 86.785714285714*G25_9_0_13 + 21.6964285714285*G25_9_0_14 - 86.7857142857141*G25_9_0_15 - 21.6964285714285*G25_9_0_16 - 65.0892857142855*G25_9_0_17 + 65.0892857142855*G25_9_0_18 - 5.6799129202062e-14*G25_9_0_19 + 14.4642857142857*G25_9_1_10 + 3.36063642192297e-14*G25_9_1_11 - 14.4642857142856*G25_9_1_12 + 21.6964285714286*G25_9_1_13 + 86.785714285714*G25_9_1_14 - 65.0892857142854*G25_9_1_15 + 65.0892857142855*G25_9_1_16 - 86.7857142857139*G25_9_1_17 - 21.6964285714283*G25_9_1_18 + 8.69476691166271e-13*G25_9_1_19;
    A[10] = 0.849999999999998*G0_0_0_0 + 0.849999999999998*G0_0_0_1 - 0.174999999999999*G0_0_1_0 - 0.175000000000001*G0_0_2_1 - 0.0749999999999957*G0_0_3_0 - 0.0749999999999985*G0_0_3_1 - 0.0750000000000014*G0_0_4_0 - 0.0749999999999955*G0_0_4_1 + 0.0750000000000018*G0_0_5_0 - 1.35*G0_0_5_1 + 0.0750000000000015*G0_0_6_0 + 0.674999999999996*G0_0_6_1 - 1.35*G0_0_7_0 + 0.0750000000000023*G0_0_7_1 + 0.674999999999998*G0_0_8_0 + 0.0749999999999945*G0_0_8_1 + 0.849999999999998*G0_1_0_0 + 0.849999999999998*G0_1_0_1 - 0.175000000000001*G0_1_1_0 - 0.175000000000001*G0_1_2_1 - 0.0749999999999998*G0_1_3_0 - 0.0750000000000045*G0_1_3_1 - 0.0750000000000018*G0_1_4_0 - 0.0749999999999958*G0_1_4_1 + 0.0750000000000038*G0_1_5_0 - 1.35*G0_1_5_1 + 0.0750000000000019*G0_1_6_0 + 0.674999999999996*G0_1_6_1 - 1.35*G0_1_7_0 + 0.075000000000004*G0_1_7_1 + 0.674999999999999*G0_1_8_0 + 0.0750000000000006*G0_1_8_1 + 0.849999999999998*G1_0_10_0 + 0.849999999999998*G1_0_10_1 - 0.174999999999999*G1_0_11_0 - 0.175000000000001*G1_0_12_1 - 0.0749999999999957*G1_0_13_0 - 0.0749999999999985*G1_0_13_1 - 0.0750000000000014*G1_0_14_0 - 0.0749999999999955*G1_0_14_1 + 0.0750000000000018*G1_0_15_0 - 1.35*G1_0_15_1 + 0.0750000000000015*G1_0_16_0 + 0.674999999999996*G1_0_16_1 - 1.35*G1_0_17_0 + 0.0750000000000023*G1_0_17_1 + 0.674999999999998*G1_0_18_0 + 0.0749999999999945*G1_0_18_1 + 0.849999999999998*G1_1_10_0 + 0.849999999999998*G1_1_10_1 - 0.175000000000001*G1_1_11_0 - 0.175000000000001*G1_1_12_1 - 0.0749999999999998*G1_1_13_0 - 0.0750000000000045*G1_1_13_1 - 0.0750000000000018*G1_1_14_0 - 0.0749999999999958*G1_1_14_1 + 0.0750000000000038*G1_1_15_0 - 1.35*G1_1_15_1 + 0.0750000000000019*G1_1_16_0 + 0.674999999999996*G1_1_16_1 - 1.35*G1_1_17_0 + 0.075000000000004*G1_1_17_1 + 0.674999999999999*G1_1_18_0 + 0.0750000000000006*G1_1_18_1 - 0.424999999999999*G2_0_0_0 - 0.424999999999999*G2_0_0_1 + 0.0874999999999993*G2_0_1_0 + 0.0875000000000006*G2_0_2_1 + 0.0374999999999978*G2_0_3_0 + 0.0374999999999992*G2_0_3_1 + 0.0375000000000007*G2_0_4_0 + 0.0374999999999977*G2_0_4_1 - 0.0375000000000009*G2_0_5_0 + 0.674999999999998*G2_0_5_1 - 0.0375000000000007*G2_0_6_0 - 0.337499999999998*G2_0_6_1 + 0.674999999999998*G2_0_7_0 - 0.0375000000000011*G2_0_7_1 - 0.337499999999999*G2_0_8_0 - 0.0374999999999972*G2_0_8_1 - 0.424999999999999*G2_1_0_0 - 0.424999999999999*G2_1_0_1 + 0.0875000000000004*G2_1_1_0 + 0.0875000000000007*G2_1_2_1 + 0.0374999999999999*G2_1_3_0 + 0.0375000000000023*G2_1_3_1 + 0.0375000000000009*G2_1_4_0 + 0.0374999999999979*G2_1_4_1 - 0.0375000000000019*G2_1_5_0 + 0.674999999999998*G2_1_5_1 - 0.0375000000000009*G2_1_6_0 - 0.337499999999998*G2_1_6_1 + 0.674999999999998*G2_1_7_0 - 0.037500000000002*G2_1_7_1 - 0.3375*G2_1_8_0 - 0.0375000000000003*G2_1_8_1 - 0.424999999999999*G3_0_10_0 - 0.424999999999999*G3_0_10_1 + 0.0874999999999993*G3_0_11_0 + 0.0875000000000006*G3_0_12_1 + 0.0374999999999978*G3_0_13_0 + 0.0374999999999992*G3_0_13_1 + 0.0375000000000007*G3_0_14_0 + 0.0374999999999977*G3_0_14_1 - 0.0375000000000009*G3_0_15_0 + 0.674999999999998*G3_0_15_1 - 0.0375000000000007*G3_0_16_0 - 0.337499999999998*G3_0_16_1 + 0.674999999999998*G3_0_17_0 - 0.0375000000000011*G3_0_17_1 - 0.337499999999999*G3_0_18_0 - 0.0374999999999972*G3_0_18_1 - 0.424999999999999*G3_1_10_0 - 0.424999999999999*G3_1_10_1 + 0.0875000000000004*G3_1_11_0 + 0.0875000000000007*G3_1_12_1 + 0.0374999999999999*G3_1_13_0 + 0.0375000000000023*G3_1_13_1 + 0.0375000000000009*G3_1_14_0 + 0.0374999999999979*G3_1_14_1 - 0.0375000000000019*G3_1_15_0 + 0.674999999999998*G3_1_15_1 - 0.0375000000000009*G3_1_16_0 - 0.337499999999998*G3_1_16_1 + 0.674999999999998*G3_1_17_0 - 0.037500000000002*G3_1_17_1 - 0.3375*G3_1_18_0 - 0.0375000000000003*G3_1_18_1 + 0.849999999999998*G14_0_10_0 + 0.849999999999998*G14_0_10_1 - 0.174999999999999*G14_0_11_0 - 0.175000000000001*G14_0_12_1 - 0.0749999999999957*G14_0_13_0 - 0.0749999999999985*G14_0_13_1 - 0.0750000000000014*G14_0_14_0 - 0.0749999999999955*G14_0_14_1 + 0.0750000000000018*G14_0_15_0 - 1.35*G14_0_15_1 + 0.0750000000000015*G14_0_16_0 + 0.674999999999996*G14_0_16_1 - 1.35*G14_0_17_0 + 0.0750000000000023*G14_0_17_1 + 0.674999999999998*G14_0_18_0 + 0.0749999999999945*G14_0_18_1 + 0.849999999999998*G14_1_10_0 + 0.849999999999998*G14_1_10_1 - 0.175000000000001*G14_1_11_0 - 0.175000000000001*G14_1_12_1 - 0.0749999999999998*G14_1_13_0 - 0.0750000000000045*G14_1_13_1 - 0.0750000000000018*G14_1_14_0 - 0.0749999999999958*G14_1_14_1 + 0.0750000000000038*G14_1_15_0 - 1.35*G14_1_15_1 + 0.0750000000000019*G14_1_16_0 + 0.674999999999996*G14_1_16_1 - 1.35*G14_1_17_0 + 0.075000000000004*G14_1_17_1 + 0.674999999999999*G14_1_18_0 + 0.0750000000000006*G14_1_18_1 + 0.849999999999998*G15_0_10_0 + 0.849999999999998*G15_0_10_1 - 0.174999999999999*G15_0_11_0 - 0.175000000000001*G15_0_12_1 - 0.0749999999999957*G15_0_13_0 - 0.0749999999999985*G15_0_13_1 - 0.0750000000000014*G15_0_14_0 - 0.0749999999999955*G15_0_14_1 + 0.0750000000000018*G15_0_15_0 - 1.35*G15_0_15_1 + 0.0750000000000015*G15_0_16_0 + 0.674999999999996*G15_0_16_1 - 1.35*G15_0_17_0 + 0.0750000000000023*G15_0_17_1 + 0.674999999999998*G15_0_18_0 + 0.0749999999999945*G15_0_18_1 + 0.849999999999998*G15_1_10_0 + 0.849999999999998*G15_1_10_1 - 0.175000000000001*G15_1_11_0 - 0.175000000000001*G15_1_12_1 - 0.0749999999999998*G15_1_13_0 - 0.0750000000000045*G15_1_13_1 - 0.0750000000000018*G15_1_14_0 - 0.0749999999999958*G15_1_14_1 + 0.0750000000000038*G15_1_15_0 - 1.35*G15_1_15_1 + 0.0750000000000019*G15_1_16_0 + 0.674999999999996*G15_1_16_1 - 1.35*G15_1_17_0 + 0.075000000000004*G15_1_17_1 + 0.674999999999999*G15_1_18_0 + 0.0750000000000006*G15_1_18_1 + 0.15*G16_0_20 + 0.0333333333333328*G16_0_23 + 0.0333333333333337*G16_0_24 + 0.033333333333333*G16_0_25 + 0.149999999999999*G16_1_20 + 0.0333333333333339*G16_1_23 + 0.0333333333333344*G16_1_24 + 0.0333333333333343*G16_1_25 - 0.424999999999999*G17_0_10_0 - 0.424999999999999*G17_0_10_1 + 0.0874999999999993*G17_0_11_0 + 0.0875000000000006*G17_0_12_1 + 0.0374999999999978*G17_0_13_0 + 0.0374999999999992*G17_0_13_1 + 0.0375000000000007*G17_0_14_0 + 0.0374999999999977*G17_0_14_1 - 0.0375000000000009*G17_0_15_0 + 0.674999999999998*G17_0_15_1 - 0.0375000000000007*G17_0_16_0 - 0.337499999999998*G17_0_16_1 + 0.674999999999998*G17_0_17_0 - 0.0375000000000011*G17_0_17_1 - 0.337499999999999*G17_0_18_0 - 0.0374999999999972*G17_0_18_1 - 0.424999999999999*G17_1_10_0 - 0.424999999999999*G17_1_10_1 + 0.0875000000000004*G17_1_11_0 + 0.0875000000000007*G17_1_12_1 + 0.0374999999999999*G17_1_13_0 + 0.0375000000000023*G17_1_13_1 + 0.0375000000000009*G17_1_14_0 + 0.0374999999999979*G17_1_14_1 - 0.0375000000000019*G17_1_15_0 + 0.674999999999998*G17_1_15_1 - 0.0375000000000009*G17_1_16_0 - 0.337499999999998*G17_1_16_1 + 0.674999999999998*G17_1_17_0 - 0.037500000000002*G17_1_17_1 - 0.3375*G17_1_18_0 - 0.0375000000000003*G17_1_18_1 - 0.424999999999999*G18_0_10_0 - 0.424999999999999*G18_0_10_1 + 0.0874999999999993*G18_0_11_0 + 0.0875000000000006*G18_0_12_1 + 0.0374999999999978*G18_0_13_0 + 0.0374999999999992*G18_0_13_1 + 0.0375000000000007*G18_0_14_0 + 0.0374999999999977*G18_0_14_1 - 0.0375000000000009*G18_0_15_0 + 0.674999999999998*G18_0_15_1 - 0.0375000000000007*G18_0_16_0 - 0.337499999999998*G18_0_16_1 + 0.674999999999998*G18_0_17_0 - 0.0375000000000011*G18_0_17_1 - 0.337499999999999*G18_0_18_0 - 0.0374999999999972*G18_0_18_1 - 0.424999999999999*G18_1_10_0 - 0.424999999999999*G18_1_10_1 + 0.0875000000000004*G18_1_11_0 + 0.0875000000000007*G18_1_12_1 + 0.0374999999999999*G18_1_13_0 + 0.0375000000000023*G18_1_13_1 + 0.0375000000000009*G18_1_14_0 + 0.0374999999999979*G18_1_14_1 - 0.0375000000000019*G18_1_15_0 + 0.674999999999998*G18_1_15_1 - 0.0375000000000009*G18_1_16_0 - 0.337499999999998*G18_1_16_1 + 0.674999999999998*G18_1_17_0 - 0.037500000000002*G18_1_17_1 - 0.3375*G18_1_18_0 - 0.0375000000000003*G18_1_18_1 - 0.0749999999999998*G19_0_20 - 0.0166666666666664*G19_0_23 - 0.0166666666666668*G19_0_24 - 0.0166666666666665*G19_0_25 - 0.0749999999999997*G19_1_20 - 0.016666666666667*G19_1_23 - 0.0166666666666672*G19_1_24 - 0.0166666666666672*G19_1_25 - 35.4166666666665*G22_0_10_0 - 35.4166666666665*G22_0_10_1 + 5.95238095238095*G22_0_11_0 + 5.95238095238098*G22_0_12_1 - 3.42873787088221e-14*G22_0_13_0 + 1.35454093688064e-13*G22_0_13_1 - 2.24295815210926e-13*G22_0_14_1 - 10.7142857142857*G22_0_15_0 + 53.5714285714283*G22_0_15_1 - 24.1071428571427*G22_0_16_1 + 53.5714285714284*G22_0_17_0 - 10.7142857142857*G22_0_17_1 - 24.1071428571428*G22_0_18_0 + 2.78778803969489e-14*G22_0_18_1 + 10.7142857142857*G22_0_19_0 + 10.7142857142856*G22_0_19_1 - 2.97619047619045*G22_1_10_0 - 2.97619047619046*G22_1_10_1 + 2.97619047619045*G22_1_11_0 + 1.77083333333333*G22_1_12_1 - 0.133928571428573*G22_1_13_0 + 4.68749999999998*G22_1_13_1 + 0.803571428571425*G22_1_14_0 - 2.81250000000001*G22_1_14_1 + 0.133928571428575*G22_1_15_0 + 4.82142857142856*G22_1_15_1 - 0.803571428571426*G22_1_16_0 - 3.61607142857141*G22_1_16_1 + 4.55357142857139*G22_1_17_0 - 0.133928571428594*G22_1_17_1 - 4.55357142857139*G22_1_18_0 - 4.68749999999994*G22_1_18_1 + 2.94642857142854*G22_1_19_1 - 2.97619047619046*G22_2_10_0 - 2.97619047619047*G22_2_10_1 + 1.77083333333333*G22_2_11_0 + 2.97619047619046*G22_2_12_1 - 2.81249999999998*G22_2_13_0 + 0.803571428571428*G22_2_13_1 + 4.68749999999997*G22_2_14_0 - 0.133928571428584*G22_2_14_1 - 0.133928571428567*G22_2_15_0 + 4.55357142857141*G22_2_15_1 - 4.68749999999997*G22_2_16_0 - 4.55357142857139*G22_2_16_1 + 4.82142857142856*G22_2_17_0 + 0.13392857142857*G22_2_17_1 - 3.61607142857142*G22_2_18_0 - 0.803571428571413*G22_2_18_1 + 2.94642857142855*G22_2_19_0 - 2.15799600411515e-14*G22_2_19_1 + 1.75831571525009e-14*G22_3_10_0 + 4.82142857142853*G22_3_11_0 - 3.6160714285714*G22_3_12_1 + 14.8660714285714*G22_3_13_0 + 14.8660714285714*G22_3_13_1 - 5.62499999999997*G22_3_14_0 + 2.81249999999994*G22_3_14_1 - 0.40178571428572*G22_3_15_0 - 2.41071428571423*G22_3_15_1 + 5.62499999999996*G22_3_16_0 + 6.02678571428571*G22_3_16_1 + 2.41071428571423*G22_3_17_0 + 4.41964285714275*G22_3_17_1 - 7.23214285714279*G22_3_18_0 - 14.8660714285713*G22_3_18_1 - 14.4642857142857*G22_3_19_0 - 7.23214285714287*G22_3_19_1 - 3.61607142857141*G22_4_11_0 + 2.62072575252402e-14*G22_4_11_1 + 4.82142857142853*G22_4_12_1 + 2.81249999999998*G22_4_13_0 - 5.62500000000001*G22_4_13_1 + 14.8660714285713*G22_4_14_0 + 14.8660714285713*G22_4_14_1 + 4.41964285714284*G22_4_15_0 + 2.41071428571424*G22_4_15_1 - 14.8660714285713*G22_4_16_0 - 7.23214285714273*G22_4_16_1 - 2.41071428571428*G22_4_17_0 - 0.401785714285736*G22_4_17_1 + 6.02678571428569*G22_4_18_0 + 5.625*G22_4_18_1 - 7.23214285714281*G22_4_19_0 - 14.4642857142857*G22_4_19_1 - 26.7857142857142*G22_5_10_0 - 26.7857142857142*G22_5_10_1 + 4.6875*G22_5_11_0 - 1.96327547755179e-14*G22_5_11_1 + 0.669642857142897*G22_5_12_1 - 4.01785714285714*G22_5_13_0 - 2.00892857142845*G22_5_13_1 - 10.0446428571428*G22_5_14_0 - 8.03571428571436*G22_5_14_1 - 8.0357142857142*G22_5_15_0 + 40.1785714285712*G22_5_15_1 + 10.0446428571428*G22_5_16_0 - 14.0625*G22_5_16_1 + 44.1964285714284*G22_5_17_0 - 4.01785714285705*G22_5_17_1 - 22.0982142857143*G22_5_18_0 + 2.00892857142852*G22_5_18_1 + 12.0535714285713*G22_5_19_0 + 12.0535714285713*G22_5_19_1 + 12.0535714285714*G22_6_10_0 + 12.0535714285714*G22_6_10_1 - 2.8125*G22_6_11_0 + 1.86427266398022e-14*G22_6_11_1 + 5.22321428571423*G22_6_12_1 - 0.401785714285704*G22_6_13_0 - 0.803571428571496*G22_6_13_1 + 15.2678571428571*G22_6_14_0 + 7.63392857142858*G22_6_14_1 + 10.0446428571428*G22_6_15_0 - 14.0624999999999*G22_6_15_1 - 15.2678571428571*G22_6_16_0 - 3.21428571428566*G22_6_16_1 - 22.0982142857142*G22_6_17_0 + 2.00892857142852*G22_6_17_1 + 12.8571428571429*G22_6_18_0 + 0.803571428571458*G22_6_18_1 - 9.6428571428571*G22_6_19_0 - 9.64285714285708*G22_6_19_1 - 26.7857142857142*G22_7_10_0 - 26.7857142857142*G22_7_10_1 + 0.66964285714289*G22_7_11_0 + 4.68750000000001*G22_7_12_1 - 8.03571428571428*G22_7_13_0 - 10.0446428571427*G22_7_13_1 - 2.00892857142856*G22_7_14_0 - 4.01785714285725*G22_7_14_1 - 4.0178571428571*G22_7_15_0 + 44.1964285714283*G22_7_15_1 + 2.00892857142857*G22_7_16_0 - 22.0982142857142*G22_7_16_1 + 40.1785714285713*G22_7_17_0 - 8.03571428571416*G22_7_17_1 - 14.0625000000001*G22_7_18_0 + 10.0446428571428*G22_7_18_1 + 12.0535714285714*G22_7_19_0 + 12.0535714285713*G22_7_19_1 + 12.0535714285714*G22_8_10_0 + 12.0535714285714*G22_8_10_1 + 5.22321428571422*G22_8_11_0 - 2.8125*G22_8_12_1 + 7.63392857142855*G22_8_13_0 + 15.267857142857*G22_8_13_1 - 0.803571428571424*G22_8_14_0 - 0.401785714285658*G22_8_14_1 + 2.00892857142855*G22_8_15_0 - 22.0982142857142*G22_8_15_1 + 0.803571428571421*G22_8_16_0 + 12.8571428571428*G22_8_16_1 - 14.0625*G22_8_17_0 + 10.0446428571427*G22_8_17_1 - 3.21428571428561*G22_8_18_0 - 15.267857142857*G22_8_18_1 - 9.6428571428571*G22_8_19_0 - 9.64285714285713*G22_8_19_1 - 5.35714285714283*G22_9_10_0 - 5.35714285714285*G22_9_10_1 + 2.94642857142856*G22_9_11_0 + 2.94642857142857*G22_9_12_1 + 16.8749999999999*G22_9_13_0 + 9.64285714285711*G22_9_13_1 + 9.64285714285709*G22_9_14_0 + 16.8749999999998*G22_9_14_1 + 12.0535714285714*G22_9_15_0 + 12.0535714285714*G22_9_15_1 - 9.64285714285709*G22_9_16_0 - 9.64285714285705*G22_9_16_1 + 12.0535714285714*G22_9_17_0 + 12.0535714285713*G22_9_17_1 - 9.6428571428571*G22_9_18_0 - 9.64285714285703*G22_9_18_1 - 28.9285714285713*G22_9_19_0 - 28.9285714285714*G22_9_19_1 - 35.4166666666665*G23_10_10_0 - 35.4166666666665*G23_10_10_1 + 5.95238095238095*G23_10_11_0 + 5.95238095238098*G23_10_12_1 - 3.42873787088221e-14*G23_10_13_0 + 1.35454093688064e-13*G23_10_13_1 - 2.24295815210926e-13*G23_10_14_1 - 10.7142857142857*G23_10_15_0 + 53.5714285714283*G23_10_15_1 - 24.1071428571427*G23_10_16_1 + 53.5714285714284*G23_10_17_0 - 10.7142857142857*G23_10_17_1 - 24.1071428571428*G23_10_18_0 + 2.78778803969489e-14*G23_10_18_1 + 10.7142857142857*G23_10_19_0 + 10.7142857142856*G23_10_19_1 - 2.97619047619045*G23_11_10_0 - 2.97619047619046*G23_11_10_1 + 2.97619047619045*G23_11_11_0 + 1.77083333333333*G23_11_12_1 - 0.133928571428573*G23_11_13_0 + 4.68749999999998*G23_11_13_1 + 0.803571428571425*G23_11_14_0 - 2.81250000000001*G23_11_14_1 + 0.133928571428575*G23_11_15_0 + 4.82142857142856*G23_11_15_1 - 0.803571428571426*G23_11_16_0 - 3.61607142857141*G23_11_16_1 + 4.55357142857139*G23_11_17_0 - 0.133928571428594*G23_11_17_1 - 4.55357142857139*G23_11_18_0 - 4.68749999999994*G23_11_18_1 + 2.94642857142854*G23_11_19_1 - 2.97619047619046*G23_12_10_0 - 2.97619047619047*G23_12_10_1 + 1.77083333333333*G23_12_11_0 + 2.97619047619046*G23_12_12_1 - 2.81249999999998*G23_12_13_0 + 0.803571428571428*G23_12_13_1 + 4.68749999999997*G23_12_14_0 - 0.133928571428584*G23_12_14_1 - 0.133928571428567*G23_12_15_0 + 4.55357142857141*G23_12_15_1 - 4.68749999999997*G23_12_16_0 - 4.55357142857139*G23_12_16_1 + 4.82142857142856*G23_12_17_0 + 0.13392857142857*G23_12_17_1 - 3.61607142857142*G23_12_18_0 - 0.803571428571413*G23_12_18_1 + 2.94642857142855*G23_12_19_0 - 2.15799600411515e-14*G23_12_19_1 + 1.75831571525009e-14*G23_13_10_0 + 4.82142857142853*G23_13_11_0 - 3.6160714285714*G23_13_12_1 + 14.8660714285714*G23_13_13_0 + 14.8660714285714*G23_13_13_1 - 5.62499999999997*G23_13_14_0 + 2.81249999999994*G23_13_14_1 - 0.40178571428572*G23_13_15_0 - 2.41071428571423*G23_13_15_1 + 5.62499999999996*G23_13_16_0 + 6.02678571428571*G23_13_16_1 + 2.41071428571423*G23_13_17_0 + 4.41964285714275*G23_13_17_1 - 7.23214285714279*G23_13_18_0 - 14.8660714285713*G23_13_18_1 - 14.4642857142857*G23_13_19_0 - 7.23214285714287*G23_13_19_1 - 3.61607142857141*G23_14_11_0 + 2.62072575252402e-14*G23_14_11_1 + 4.82142857142853*G23_14_12_1 + 2.81249999999998*G23_14_13_0 - 5.62500000000001*G23_14_13_1 + 14.8660714285713*G23_14_14_0 + 14.8660714285713*G23_14_14_1 + 4.41964285714284*G23_14_15_0 + 2.41071428571424*G23_14_15_1 - 14.8660714285713*G23_14_16_0 - 7.23214285714273*G23_14_16_1 - 2.41071428571428*G23_14_17_0 - 0.401785714285736*G23_14_17_1 + 6.02678571428569*G23_14_18_0 + 5.625*G23_14_18_1 - 7.23214285714281*G23_14_19_0 - 14.4642857142857*G23_14_19_1 - 26.7857142857142*G23_15_10_0 - 26.7857142857142*G23_15_10_1 + 4.6875*G23_15_11_0 - 1.96327547755179e-14*G23_15_11_1 + 0.669642857142897*G23_15_12_1 - 4.01785714285714*G23_15_13_0 - 2.00892857142845*G23_15_13_1 - 10.0446428571428*G23_15_14_0 - 8.03571428571436*G23_15_14_1 - 8.0357142857142*G23_15_15_0 + 40.1785714285712*G23_15_15_1 + 10.0446428571428*G23_15_16_0 - 14.0625*G23_15_16_1 + 44.1964285714284*G23_15_17_0 - 4.01785714285705*G23_15_17_1 - 22.0982142857143*G23_15_18_0 + 2.00892857142852*G23_15_18_1 + 12.0535714285713*G23_15_19_0 + 12.0535714285713*G23_15_19_1 + 12.0535714285714*G23_16_10_0 + 12.0535714285714*G23_16_10_1 - 2.8125*G23_16_11_0 + 1.86427266398022e-14*G23_16_11_1 + 5.22321428571423*G23_16_12_1 - 0.401785714285704*G23_16_13_0 - 0.803571428571496*G23_16_13_1 + 15.2678571428571*G23_16_14_0 + 7.63392857142858*G23_16_14_1 + 10.0446428571428*G23_16_15_0 - 14.0624999999999*G23_16_15_1 - 15.2678571428571*G23_16_16_0 - 3.21428571428566*G23_16_16_1 - 22.0982142857142*G23_16_17_0 + 2.00892857142852*G23_16_17_1 + 12.8571428571429*G23_16_18_0 + 0.803571428571458*G23_16_18_1 - 9.6428571428571*G23_16_19_0 - 9.64285714285708*G23_16_19_1 - 26.7857142857142*G23_17_10_0 - 26.7857142857142*G23_17_10_1 + 0.66964285714289*G23_17_11_0 + 4.68750000000001*G23_17_12_1 - 8.03571428571428*G23_17_13_0 - 10.0446428571427*G23_17_13_1 - 2.00892857142856*G23_17_14_0 - 4.01785714285725*G23_17_14_1 - 4.0178571428571*G23_17_15_0 + 44.1964285714283*G23_17_15_1 + 2.00892857142857*G23_17_16_0 - 22.0982142857142*G23_17_16_1 + 40.1785714285713*G23_17_17_0 - 8.03571428571416*G23_17_17_1 - 14.0625000000001*G23_17_18_0 + 10.0446428571428*G23_17_18_1 + 12.0535714285714*G23_17_19_0 + 12.0535714285713*G23_17_19_1 + 12.0535714285714*G23_18_10_0 + 12.0535714285714*G23_18_10_1 + 5.22321428571422*G23_18_11_0 - 2.8125*G23_18_12_1 + 7.63392857142855*G23_18_13_0 + 15.267857142857*G23_18_13_1 - 0.803571428571424*G23_18_14_0 - 0.401785714285658*G23_18_14_1 + 2.00892857142855*G23_18_15_0 - 22.0982142857142*G23_18_15_1 + 0.803571428571421*G23_18_16_0 + 12.8571428571428*G23_18_16_1 - 14.0625*G23_18_17_0 + 10.0446428571427*G23_18_17_1 - 3.21428571428561*G23_18_18_0 - 15.267857142857*G23_18_18_1 - 9.6428571428571*G23_18_19_0 - 9.64285714285713*G23_18_19_1 - 5.35714285714283*G23_19_10_0 - 5.35714285714285*G23_19_10_1 + 2.94642857142856*G23_19_11_0 + 2.94642857142857*G23_19_12_1 + 16.8749999999999*G23_19_13_0 + 9.64285714285711*G23_19_13_1 + 9.64285714285709*G23_19_14_0 + 16.8749999999998*G23_19_14_1 + 12.0535714285714*G23_19_15_0 + 12.0535714285714*G23_19_15_1 - 9.64285714285709*G23_19_16_0 - 9.64285714285705*G23_19_16_1 + 12.0535714285714*G23_19_17_0 + 12.0535714285713*G23_19_17_1 - 9.6428571428571*G23_19_18_0 - 9.64285714285703*G23_19_18_1 - 28.9285714285713*G23_19_19_0 - 28.9285714285714*G23_19_19_1 + 17.7083333333332*G26_0_10_0 + 17.7083333333333*G26_0_10_1 - 2.97619047619048*G26_0_11_0 - 2.97619047619049*G26_0_12_1 + 1.71436893544111e-14*G26_0_13_0 - 6.77270468440322e-14*G26_0_13_1 + 1.12147907605463e-13*G26_0_14_1 + 5.35714285714283*G26_0_15_0 - 26.7857142857142*G26_0_15_1 + 12.0535714285713*G26_0_16_1 - 26.7857142857142*G26_0_17_0 + 5.35714285714284*G26_0_17_1 + 12.0535714285714*G26_0_18_0 - 1.39389401984744e-14*G26_0_18_1 - 5.35714285714285*G26_0_19_0 - 5.35714285714281*G26_0_19_1 + 1.48809523809523*G26_1_10_0 + 1.48809523809523*G26_1_10_1 - 1.48809523809523*G26_1_11_0 - 0.885416666666667*G26_1_12_1 + 0.0669642857142865*G26_1_13_0 - 2.34374999999999*G26_1_13_1 - 0.401785714285713*G26_1_14_0 + 1.40625000000001*G26_1_14_1 - 0.0669642857142876*G26_1_15_0 - 2.41071428571428*G26_1_15_1 + 0.401785714285713*G26_1_16_0 + 1.80803571428571*G26_1_16_1 - 2.27678571428569*G26_1_17_0 + 0.066964285714297*G26_1_17_1 + 2.27678571428569*G26_1_18_0 + 2.34374999999997*G26_1_18_1 - 1.47321428571427*G26_1_19_1 + 1.48809523809523*G26_2_10_0 + 1.48809523809523*G26_2_10_1 - 0.885416666666663*G26_2_11_0 - 1.48809523809523*G26_2_12_1 + 1.40624999999999*G26_2_13_0 - 0.401785714285714*G26_2_13_1 - 2.34374999999998*G26_2_14_0 + 0.0669642857142922*G26_2_14_1 + 0.0669642857142833*G26_2_15_0 - 2.27678571428571*G26_2_15_1 + 2.34374999999998*G26_2_16_0 + 2.27678571428569*G26_2_16_1 - 2.41071428571428*G26_2_17_0 - 0.0669642857142851*G26_2_17_1 + 1.80803571428571*G26_2_18_0 + 0.401785714285707*G26_2_18_1 - 1.47321428571427*G26_2_19_0 + 1.07899800205757e-14*G26_2_19_1 - 2.41071428571427*G26_3_11_0 + 1.8080357142857*G26_3_12_1 - 7.43303571428569*G26_3_13_0 - 7.43303571428569*G26_3_13_1 + 2.81249999999998*G26_3_14_0 - 1.40624999999997*G26_3_14_1 + 0.20089285714286*G26_3_15_0 + 1.20535714285712*G26_3_15_1 - 2.81249999999998*G26_3_16_0 - 3.01339285714286*G26_3_16_1 - 1.20535714285712*G26_3_17_0 - 2.20982142857138*G26_3_17_1 + 3.61607142857139*G26_3_18_0 + 7.43303571428564*G26_3_18_1 + 7.23214285714283*G26_3_19_0 + 3.61607142857143*G26_3_19_1 + 1.8080357142857*G26_4_11_0 - 1.31036287626201e-14*G26_4_11_1 - 2.41071428571427*G26_4_12_1 - 1.40624999999999*G26_4_13_0 + 2.8125*G26_4_13_1 - 7.43303571428567*G26_4_14_0 - 7.43303571428567*G26_4_14_1 - 2.20982142857142*G26_4_15_0 - 1.20535714285712*G26_4_15_1 + 7.43303571428567*G26_4_16_0 + 3.61607142857137*G26_4_16_1 + 1.20535714285714*G26_4_17_0 + 0.200892857142868*G26_4_17_1 - 3.01339285714285*G26_4_18_0 - 2.8125*G26_4_18_1 + 3.61607142857141*G26_4_19_0 + 7.23214285714283*G26_4_19_1 + 13.3928571428571*G26_5_10_0 + 13.3928571428571*G26_5_10_1 - 2.34375*G26_5_11_0 - 0.334821428571448*G26_5_12_1 + 2.00892857142857*G26_5_13_0 + 1.00446428571422*G26_5_13_1 + 5.0223214285714*G26_5_14_0 + 4.01785714285718*G26_5_14_1 + 4.0178571428571*G26_5_15_0 - 20.0892857142856*G26_5_15_1 - 5.02232142857141*G26_5_16_0 + 7.03124999999999*G26_5_16_1 - 22.0982142857142*G26_5_17_0 + 2.00892857142853*G26_5_17_1 + 11.0491071428571*G26_5_18_0 - 1.00446428571426*G26_5_18_1 - 6.02678571428566*G26_5_19_0 - 6.02678571428567*G26_5_19_1 - 6.02678571428569*G26_6_10_0 - 6.02678571428569*G26_6_10_1 + 1.40625*G26_6_11_0 - 2.61160714285712*G26_6_12_1 + 0.200892857142852*G26_6_13_0 + 0.401785714285748*G26_6_13_1 - 7.63392857142853*G26_6_14_0 - 3.81696428571429*G26_6_14_1 - 5.02232142857141*G26_6_15_0 + 7.03124999999997*G26_6_15_1 + 7.63392857142853*G26_6_16_0 + 1.60714285714283*G26_6_16_1 + 11.0491071428571*G26_6_17_0 - 1.00446428571426*G26_6_17_1 - 6.42857142857143*G26_6_18_0 - 0.401785714285729*G26_6_18_1 + 4.82142857142855*G26_6_19_0 + 4.82142857142854*G26_6_19_1 + 13.3928571428571*G26_7_10_0 + 13.3928571428571*G26_7_10_1 - 0.334821428571445*G26_7_11_0 - 2.34375*G26_7_12_1 + 4.01785714285714*G26_7_13_0 + 5.02232142857135*G26_7_13_1 + 1.00446428571428*G26_7_14_0 + 2.00892857142862*G26_7_14_1 + 2.00892857142855*G26_7_15_0 - 22.0982142857142*G26_7_15_1 - 1.00446428571428*G26_7_16_0 + 11.0491071428571*G26_7_16_1 - 20.0892857142857*G26_7_17_0 + 4.01785714285708*G26_7_17_1 + 7.03125000000003*G26_7_18_0 - 5.02232142857138*G26_7_18_1 - 6.02678571428569*G26_7_19_0 - 6.02678571428567*G26_7_19_1 - 6.0267857142857*G26_8_10_0 - 6.02678571428569*G26_8_10_1 - 2.61160714285711*G26_8_11_0 + 1.40625*G26_8_12_1 - 3.81696428571428*G26_8_13_0 - 7.6339285714285*G26_8_13_1 + 0.401785714285712*G26_8_14_0 + 0.200892857142829*G26_8_14_1 - 1.00446428571427*G26_8_15_0 + 11.0491071428571*G26_8_15_1 - 0.401785714285711*G26_8_16_0 - 6.42857142857141*G26_8_16_1 + 7.03125000000001*G26_8_17_0 - 5.02232142857137*G26_8_17_1 + 1.6071428571428*G26_8_18_0 + 7.63392857142849*G26_8_18_1 + 4.82142857142855*G26_8_19_0 + 4.82142857142856*G26_8_19_1 + 2.67857142857142*G26_9_10_0 + 2.67857142857143*G26_9_10_1 - 1.47321428571428*G26_9_11_0 - 1.47321428571428*G26_9_12_1 - 8.43749999999996*G26_9_13_0 - 4.82142857142855*G26_9_13_1 - 4.82142857142854*G26_9_14_0 - 8.43749999999992*G26_9_14_1 - 6.02678571428572*G26_9_15_0 - 6.02678571428571*G26_9_15_1 + 4.82142857142855*G26_9_16_0 + 4.82142857142853*G26_9_16_1 - 6.02678571428569*G26_9_17_0 - 6.02678571428567*G26_9_17_1 + 4.82142857142855*G26_9_18_0 + 4.82142857142851*G26_9_18_1 + 14.4642857142857*G26_9_19_0 + 14.4642857142857*G26_9_19_1 + 17.7083333333332*G27_10_10_0 + 17.7083333333333*G27_10_10_1 - 2.97619047619048*G27_10_11_0 - 2.97619047619049*G27_10_12_1 + 1.71436893544111e-14*G27_10_13_0 - 6.77270468440322e-14*G27_10_13_1 + 1.12147907605463e-13*G27_10_14_1 + 5.35714285714283*G27_10_15_0 - 26.7857142857142*G27_10_15_1 + 12.0535714285713*G27_10_16_1 - 26.7857142857142*G27_10_17_0 + 5.35714285714284*G27_10_17_1 + 12.0535714285714*G27_10_18_0 - 1.39389401984744e-14*G27_10_18_1 - 5.35714285714285*G27_10_19_0 - 5.35714285714281*G27_10_19_1 + 1.48809523809523*G27_11_10_0 + 1.48809523809523*G27_11_10_1 - 1.48809523809523*G27_11_11_0 - 0.885416666666667*G27_11_12_1 + 0.0669642857142865*G27_11_13_0 - 2.34374999999999*G27_11_13_1 - 0.401785714285713*G27_11_14_0 + 1.40625000000001*G27_11_14_1 - 0.0669642857142876*G27_11_15_0 - 2.41071428571428*G27_11_15_1 + 0.401785714285713*G27_11_16_0 + 1.80803571428571*G27_11_16_1 - 2.27678571428569*G27_11_17_0 + 0.066964285714297*G27_11_17_1 + 2.27678571428569*G27_11_18_0 + 2.34374999999997*G27_11_18_1 - 1.47321428571427*G27_11_19_1 + 1.48809523809523*G27_12_10_0 + 1.48809523809523*G27_12_10_1 - 0.885416666666663*G27_12_11_0 - 1.48809523809523*G27_12_12_1 + 1.40624999999999*G27_12_13_0 - 0.401785714285714*G27_12_13_1 - 2.34374999999998*G27_12_14_0 + 0.0669642857142922*G27_12_14_1 + 0.0669642857142833*G27_12_15_0 - 2.27678571428571*G27_12_15_1 + 2.34374999999998*G27_12_16_0 + 2.27678571428569*G27_12_16_1 - 2.41071428571428*G27_12_17_0 - 0.0669642857142851*G27_12_17_1 + 1.80803571428571*G27_12_18_0 + 0.401785714285707*G27_12_18_1 - 1.47321428571427*G27_12_19_0 + 1.07899800205757e-14*G27_12_19_1 - 2.41071428571427*G27_13_11_0 + 1.8080357142857*G27_13_12_1 - 7.43303571428569*G27_13_13_0 - 7.43303571428569*G27_13_13_1 + 2.81249999999998*G27_13_14_0 - 1.40624999999997*G27_13_14_1 + 0.20089285714286*G27_13_15_0 + 1.20535714285712*G27_13_15_1 - 2.81249999999998*G27_13_16_0 - 3.01339285714286*G27_13_16_1 - 1.20535714285712*G27_13_17_0 - 2.20982142857138*G27_13_17_1 + 3.61607142857139*G27_13_18_0 + 7.43303571428564*G27_13_18_1 + 7.23214285714283*G27_13_19_0 + 3.61607142857143*G27_13_19_1 + 1.8080357142857*G27_14_11_0 - 1.31036287626201e-14*G27_14_11_1 - 2.41071428571427*G27_14_12_1 - 1.40624999999999*G27_14_13_0 + 2.8125*G27_14_13_1 - 7.43303571428567*G27_14_14_0 - 7.43303571428567*G27_14_14_1 - 2.20982142857142*G27_14_15_0 - 1.20535714285712*G27_14_15_1 + 7.43303571428567*G27_14_16_0 + 3.61607142857137*G27_14_16_1 + 1.20535714285714*G27_14_17_0 + 0.200892857142868*G27_14_17_1 - 3.01339285714285*G27_14_18_0 - 2.8125*G27_14_18_1 + 3.61607142857141*G27_14_19_0 + 7.23214285714283*G27_14_19_1 + 13.3928571428571*G27_15_10_0 + 13.3928571428571*G27_15_10_1 - 2.34375*G27_15_11_0 - 0.334821428571448*G27_15_12_1 + 2.00892857142857*G27_15_13_0 + 1.00446428571422*G27_15_13_1 + 5.0223214285714*G27_15_14_0 + 4.01785714285718*G27_15_14_1 + 4.0178571428571*G27_15_15_0 - 20.0892857142856*G27_15_15_1 - 5.02232142857141*G27_15_16_0 + 7.03124999999999*G27_15_16_1 - 22.0982142857142*G27_15_17_0 + 2.00892857142853*G27_15_17_1 + 11.0491071428571*G27_15_18_0 - 1.00446428571426*G27_15_18_1 - 6.02678571428566*G27_15_19_0 - 6.02678571428567*G27_15_19_1 - 6.02678571428569*G27_16_10_0 - 6.02678571428569*G27_16_10_1 + 1.40625*G27_16_11_0 - 2.61160714285712*G27_16_12_1 + 0.200892857142852*G27_16_13_0 + 0.401785714285748*G27_16_13_1 - 7.63392857142853*G27_16_14_0 - 3.81696428571429*G27_16_14_1 - 5.02232142857141*G27_16_15_0 + 7.03124999999997*G27_16_15_1 + 7.63392857142853*G27_16_16_0 + 1.60714285714283*G27_16_16_1 + 11.0491071428571*G27_16_17_0 - 1.00446428571426*G27_16_17_1 - 6.42857142857143*G27_16_18_0 - 0.401785714285729*G27_16_18_1 + 4.82142857142855*G27_16_19_0 + 4.82142857142854*G27_16_19_1 + 13.3928571428571*G27_17_10_0 + 13.3928571428571*G27_17_10_1 - 0.334821428571445*G27_17_11_0 - 2.34375*G27_17_12_1 + 4.01785714285714*G27_17_13_0 + 5.02232142857135*G27_17_13_1 + 1.00446428571428*G27_17_14_0 + 2.00892857142862*G27_17_14_1 + 2.00892857142855*G27_17_15_0 - 22.0982142857142*G27_17_15_1 - 1.00446428571428*G27_17_16_0 + 11.0491071428571*G27_17_16_1 - 20.0892857142857*G27_17_17_0 + 4.01785714285708*G27_17_17_1 + 7.03125000000003*G27_17_18_0 - 5.02232142857138*G27_17_18_1 - 6.02678571428569*G27_17_19_0 - 6.02678571428567*G27_17_19_1 - 6.0267857142857*G27_18_10_0 - 6.02678571428569*G27_18_10_1 - 2.61160714285711*G27_18_11_0 + 1.40625*G27_18_12_1 - 3.81696428571428*G27_18_13_0 - 7.6339285714285*G27_18_13_1 + 0.401785714285712*G27_18_14_0 + 0.200892857142829*G27_18_14_1 - 1.00446428571427*G27_18_15_0 + 11.0491071428571*G27_18_15_1 - 0.401785714285711*G27_18_16_0 - 6.42857142857141*G27_18_16_1 + 7.03125000000001*G27_18_17_0 - 5.02232142857137*G27_18_17_1 + 1.6071428571428*G27_18_18_0 + 7.63392857142849*G27_18_18_1 + 4.82142857142855*G27_18_19_0 + 4.82142857142856*G27_18_19_1 + 2.67857142857142*G27_19_10_0 + 2.67857142857143*G27_19_10_1 - 1.47321428571428*G27_19_11_0 - 1.47321428571428*G27_19_12_1 - 8.43749999999996*G27_19_13_0 - 4.82142857142855*G27_19_13_1 - 4.82142857142854*G27_19_14_0 - 8.43749999999992*G27_19_14_1 - 6.02678571428572*G27_19_15_0 - 6.02678571428571*G27_19_15_1 + 4.82142857142855*G27_19_16_0 + 4.82142857142853*G27_19_16_1 - 6.02678571428569*G27_19_17_0 - 6.02678571428567*G27_19_17_1 + 4.82142857142855*G27_19_18_0 + 4.82142857142851*G27_19_18_1 + 14.4642857142857*G27_19_19_0 + 14.4642857142857*G27_19_19_1;
    A[11] = -0.174999999999999*G0_0_0_0 - 0.175000000000001*G0_0_0_1 + 0.849999999999994*G0_0_1_0 + 0.175*G0_0_2_1 + 0.0749999999999988*G0_0_3_0 + 1.42499999999999*G0_0_3_1 + 0.0749999999999998*G0_0_4_0 - 0.6*G0_0_4_1 - 0.0750000000000011*G0_0_5_0 - 0.0749999999999998*G0_0_6_0 + 0.674999999999993*G0_0_7_0 + 0.599999999999989*G0_0_7_1 - 1.34999999999999*G0_0_8_0 - 1.42499999999998*G0_0_8_1 - 0.174999999999999*G1_0_10_0 - 0.175000000000001*G1_0_10_1 + 0.849999999999994*G1_0_11_0 + 0.175*G1_0_12_1 + 0.0749999999999988*G1_0_13_0 + 1.42499999999999*G1_0_13_1 + 0.0749999999999998*G1_0_14_0 - 0.6*G1_0_14_1 - 0.0750000000000011*G1_0_15_0 - 0.0749999999999998*G1_0_16_0 + 0.674999999999993*G1_0_17_0 + 0.599999999999989*G1_0_17_1 - 1.34999999999999*G1_0_18_0 - 1.42499999999998*G1_0_18_1 + 0.0874999999999993*G2_0_0_0 + 0.0875000000000004*G2_0_0_1 - 0.424999999999997*G2_0_1_0 - 0.0875000000000002*G2_0_2_1 - 0.0374999999999994*G2_0_3_0 - 0.712499999999996*G2_0_3_1 - 0.0374999999999999*G2_0_4_0 + 0.3*G2_0_4_1 + 0.0375000000000006*G2_0_5_0 + 0.0374999999999999*G2_0_6_0 - 0.337499999999997*G2_0_7_0 - 0.299999999999995*G2_0_7_1 + 0.674999999999994*G2_0_8_0 + 0.712499999999992*G2_0_8_1 + 0.0874999999999993*G3_0_10_0 + 0.0875000000000004*G3_0_10_1 - 0.424999999999997*G3_0_11_0 - 0.0875000000000002*G3_0_12_1 - 0.0374999999999994*G3_0_13_0 - 0.712499999999996*G3_0_13_1 - 0.0374999999999999*G3_0_14_0 + 0.3*G3_0_14_1 + 0.0375000000000006*G3_0_15_0 + 0.0374999999999999*G3_0_16_0 - 0.337499999999997*G3_0_17_0 - 0.299999999999995*G3_0_17_1 + 0.674999999999994*G3_0_18_0 + 0.712499999999992*G3_0_18_1 - 0.174999999999999*G14_0_10_0 - 0.175000000000001*G14_0_10_1 + 0.849999999999994*G14_0_11_0 + 0.175*G14_0_12_1 + 0.0749999999999988*G14_0_13_0 + 1.42499999999999*G14_0_13_1 + 0.0749999999999998*G14_0_14_0 - 0.6*G14_0_14_1 - 0.0750000000000011*G14_0_15_0 - 0.0749999999999998*G14_0_16_0 + 0.674999999999993*G14_0_17_0 + 0.599999999999989*G14_0_17_1 - 1.34999999999999*G14_0_18_0 - 1.42499999999998*G14_0_18_1 - 0.174999999999999*G15_0_10_0 - 0.175000000000001*G15_0_10_1 + 0.849999999999994*G15_0_11_0 + 0.175*G15_0_12_1 + 0.0749999999999988*G15_0_13_0 + 1.42499999999999*G15_0_13_1 + 0.0749999999999998*G15_0_14_0 - 0.6*G15_0_14_1 - 0.0750000000000011*G15_0_15_0 - 0.0749999999999998*G15_0_16_0 + 0.674999999999993*G15_0_17_0 + 0.599999999999989*G15_0_17_1 - 1.34999999999999*G15_0_18_0 - 1.42499999999998*G15_0_18_1 - 0.149999999999999*G16_0_21 - 0.0333333333333329*G16_0_23 - 0.0333333333333333*G16_0_24 - 0.0333333333333332*G16_0_25 + 0.0874999999999993*G17_0_10_0 + 0.0875000000000004*G17_0_10_1 - 0.424999999999997*G17_0_11_0 - 0.0875000000000002*G17_0_12_1 - 0.0374999999999994*G17_0_13_0 - 0.712499999999996*G17_0_13_1 - 0.0374999999999999*G17_0_14_0 + 0.3*G17_0_14_1 + 0.0375000000000006*G17_0_15_0 + 0.0374999999999999*G17_0_16_0 - 0.337499999999997*G17_0_17_0 - 0.299999999999995*G17_0_17_1 + 0.674999999999994*G17_0_18_0 + 0.712499999999992*G17_0_18_1 + 0.0874999999999993*G18_0_10_0 + 0.0875000000000004*G18_0_10_1 - 0.424999999999997*G18_0_11_0 - 0.0875000000000002*G18_0_12_1 - 0.0374999999999994*G18_0_13_0 - 0.712499999999996*G18_0_13_1 - 0.0374999999999999*G18_0_14_0 + 0.3*G18_0_14_1 + 0.0375000000000006*G18_0_15_0 + 0.0374999999999999*G18_0_16_0 - 0.337499999999997*G18_0_17_0 - 0.299999999999995*G18_0_17_1 + 0.674999999999994*G18_0_18_0 + 0.712499999999992*G18_0_18_1 + 0.0749999999999995*G19_0_21 + 0.0166666666666664*G19_0_23 + 0.0166666666666667*G19_0_24 + 0.0166666666666666*G19_0_25 - 2.97619047619045*G22_0_10_0 - 2.97619047619046*G22_0_10_1 + 2.97619047619045*G22_0_11_0 + 1.77083333333333*G22_0_12_1 - 0.133928571428573*G22_0_13_0 + 4.68749999999998*G22_0_13_1 + 0.803571428571425*G22_0_14_0 - 2.81250000000001*G22_0_14_1 + 0.133928571428575*G22_0_15_0 + 4.82142857142856*G22_0_15_1 - 0.803571428571426*G22_0_16_0 - 3.61607142857141*G22_0_16_1 + 4.55357142857139*G22_0_17_0 - 0.133928571428594*G22_0_17_1 - 4.55357142857139*G22_0_18_0 - 4.68749999999994*G22_0_18_1 + 2.94642857142854*G22_0_19_1 - 5.95238095238085*G22_1_10_0 - 5.95238095238097*G22_1_10_1 + 35.4166666666664*G22_1_11_0 - 4.67973635858024e-14*G22_1_11_1 + 5.95238095238097*G22_1_12_1 + 10.7142857142857*G22_1_13_0 + 64.285714285714*G22_1_13_1 + 1.01307850997046e-14*G22_1_14_0 - 24.1071428571429*G22_1_14_1 - 2.11566875130131e-14*G22_1_15_0 + 2.0811824485989e-13*G22_1_15_1 - 1.83186799063151e-14*G22_1_16_0 + 24.1071428571425*G22_1_17_0 + 24.1071428571424*G22_1_17_1 - 53.5714285714281*G22_1_18_0 - 64.2857142857137*G22_1_18_1 - 10.7142857142857*G22_1_19_0 - 1.47975381947774e-13*G22_1_19_1 - 1.77083333333332*G22_2_10_0 - 1.77083333333333*G22_2_10_1 + 2.97619047619046*G22_2_11_0 + 2.97619047619047*G22_2_12_1 + 0.13392857142857*G22_2_13_0 + 4.68749999999998*G22_2_13_1 + 4.68749999999998*G22_2_14_0 + 0.13392857142856*G22_2_14_1 + 2.81249999999999*G22_2_15_0 + 3.61607142857143*G22_2_15_1 - 4.68749999999998*G22_2_16_0 - 4.82142857142854*G22_2_16_1 + 3.6160714285714*G22_2_17_0 + 2.81249999999997*G22_2_17_1 - 4.82142857142854*G22_2_18_0 - 4.68749999999994*G22_2_18_1 - 2.94642857142856*G22_2_19_0 - 2.94642857142858*G22_2_19_1 - 4.68749999999992*G22_3_10_0 - 4.68749999999998*G22_3_10_1 + 26.7857142857141*G22_3_11_0 - 5.65961111668246e-14*G22_3_11_1 + 0.66964285714289*G22_3_12_1 + 8.03571428571423*G22_3_13_0 + 48.2142857142855*G22_3_13_1 - 10.0446428571428*G22_3_14_0 - 24.1071428571428*G22_3_14_1 + 4.0178571428571*G22_3_15_0 + 2.00892857142869*G22_3_15_1 + 10.0446428571428*G22_3_16_0 + 2.0089285714285*G22_3_16_1 + 22.098214285714*G22_3_17_0 + 24.1071428571426*G22_3_17_1 - 44.1964285714282*G22_3_18_0 - 48.2142857142853*G22_3_18_1 - 12.0535714285713*G22_3_19_0 - 3.01703106941886e-14*G22_3_19_1 + 2.81249999999995*G22_4_10_0 + 2.81249999999999*G22_4_10_1 - 12.0535714285713*G22_4_11_0 + 3.74610151985569e-14*G22_4_11_1 + 5.22321428571425*G22_4_12_1 - 10.0446428571428*G22_4_13_0 - 24.1071428571428*G22_4_13_1 + 15.2678571428571*G22_4_14_0 + 12.0535714285714*G22_4_14_1 + 0.401785714285727*G22_4_15_0 - 0.401785714285777*G22_4_15_1 - 15.2678571428571*G22_4_16_0 - 7.6339285714285*G22_4_16_1 - 12.8571428571427*G22_4_17_0 - 12.0535714285713*G22_4_17_1 + 22.0982142857141*G22_4_18_0 + 24.1071428571427*G22_4_18_1 + 9.6428571428571*G22_4_19_0 + 2.10387263166467e-14*G22_4_19_1 - 4.82142857142856*G22_5_10_0 - 4.82142857142857*G22_5_10_1 + 1.12442607308472e-14*G22_5_11_0 - 3.6160714285714*G22_5_12_1 + 0.401785714285698*G22_5_13_0 - 2.00892857142854*G22_5_13_1 - 5.62499999999998*G22_5_14_0 + 0.401785714285664*G22_5_14_1 - 14.8660714285714*G22_5_15_0 + 1.71945790938821e-14*G22_5_15_1 + 5.62499999999998*G22_5_16_0 + 8.43749999999999*G22_5_16_1 + 7.23214285714288*G22_5_17_0 - 7.63392857142854*G22_5_17_1 - 2.41071428571433*G22_5_18_0 + 2.00892857142857*G22_5_18_1 + 14.4642857142857*G22_5_19_0 + 7.2321428571428*G22_5_19_1 + 3.61607142857141*G22_6_10_0 + 3.61607142857141*G22_6_10_1 - 1.5594079846859e-14*G22_6_11_0 + 2.75526576712318e-14*G22_6_11_1 + 4.82142857142855*G22_6_12_1 - 4.41964285714285*G22_6_13_0 - 2.00892857142864*G22_6_13_1 + 14.8660714285714*G22_6_14_0 + 7.63392857142855*G22_6_14_1 - 2.81249999999999*G22_6_15_0 - 8.43749999999997*G22_6_15_1 - 14.8660714285714*G22_6_16_0 + 5.76066971902378e-14*G22_6_16_1 - 6.02678571428571*G22_6_17_0 - 0.401785714285758*G22_6_17_1 + 2.41071428571431*G22_6_18_0 + 2.00892857142863*G22_6_18_1 + 7.23214285714284*G22_6_19_0 - 7.23214285714285*G22_6_19_1 - 5.22321428571429*G22_7_10_0 - 5.22321428571425*G22_7_10_1 - 12.0535714285713*G22_7_11_0 + 2.4160292946111e-14*G22_7_11_1 - 2.8125*G22_7_12_1 - 2.00892857142858*G22_7_13_0 - 24.1071428571428*G22_7_13_1 - 0.80357142857143*G22_7_14_0 + 12.0535714285714*G22_7_14_1 - 7.63392857142853*G22_7_15_0 + 7.63392857142846*G22_7_15_1 + 0.803571428571433*G22_7_16_0 + 0.40178571428575*G22_7_16_1 + 3.2142857142858*G22_7_17_0 - 12.0535714285713*G22_7_17_1 + 14.0624999999998*G22_7_18_0 + 24.1071428571427*G22_7_18_1 + 9.64285714285711*G22_7_19_0 - 0.669642857142802*G22_8_10_0 - 0.669642857142871*G22_8_10_1 + 26.7857142857141*G22_8_11_0 - 5.07226067866978e-14*G22_8_11_1 + 4.68749999999999*G22_8_12_1 + 4.01785714285714*G22_8_13_0 + 48.2142857142854*G22_8_13_1 - 2.00892857142856*G22_8_14_0 - 24.1071428571427*G22_8_14_1 + 8.03571428571425*G22_8_15_0 - 2.00892857142842*G22_8_15_1 + 2.00892857142855*G22_8_16_0 - 2.0089285714286*G22_8_16_1 + 14.0624999999998*G22_8_17_0 + 24.1071428571426*G22_8_17_1 - 40.1785714285711*G22_8_18_0 - 48.2142857142852*G22_8_18_1 - 12.0535714285714*G22_8_19_0 - 1.27943228928062e-13*G22_8_19_1 - 2.94642857142859*G22_9_10_0 - 2.9464285714286*G22_9_10_1 + 5.35714285714283*G22_9_11_0 + 2.39611284170569e-14*G22_9_11_1 + 2.94642857142857*G22_9_12_1 - 12.0535714285715*G22_9_13_0 - 8.55061464341555e-14*G22_9_13_1 + 9.64285714285712*G22_9_14_0 - 4.21364332314766e-14*G22_9_14_1 - 16.8749999999999*G22_9_15_0 - 7.23214285714277*G22_9_15_1 - 9.64285714285712*G22_9_16_0 + 7.23214285714284*G22_9_16_1 + 9.64285714285719*G22_9_17_0 + 2.64114901823986e-14*G22_9_17_1 - 12.0535714285714*G22_9_18_0 + 1.01695344853492e-13*G22_9_18_1 + 28.9285714285714*G22_9_19_0 - 6.85727516436252e-14*G22_9_19_1 - 2.97619047619045*G23_10_10_0 - 2.97619047619046*G23_10_10_1 + 2.97619047619045*G23_10_11_0 + 1.77083333333333*G23_10_12_1 - 0.133928571428573*G23_10_13_0 + 4.68749999999998*G23_10_13_1 + 0.803571428571425*G23_10_14_0 - 2.81250000000001*G23_10_14_1 + 0.133928571428575*G23_10_15_0 + 4.82142857142856*G23_10_15_1 - 0.803571428571426*G23_10_16_0 - 3.61607142857141*G23_10_16_1 + 4.55357142857139*G23_10_17_0 - 0.133928571428594*G23_10_17_1 - 4.55357142857139*G23_10_18_0 - 4.68749999999994*G23_10_18_1 + 2.94642857142854*G23_10_19_1 - 5.95238095238085*G23_11_10_0 - 5.95238095238097*G23_11_10_1 + 35.4166666666664*G23_11_11_0 - 4.67973635858024e-14*G23_11_11_1 + 5.95238095238097*G23_11_12_1 + 10.7142857142857*G23_11_13_0 + 64.285714285714*G23_11_13_1 + 1.01307850997046e-14*G23_11_14_0 - 24.1071428571429*G23_11_14_1 - 2.11566875130131e-14*G23_11_15_0 + 2.0811824485989e-13*G23_11_15_1 - 1.83186799063151e-14*G23_11_16_0 + 24.1071428571425*G23_11_17_0 + 24.1071428571424*G23_11_17_1 - 53.5714285714281*G23_11_18_0 - 64.2857142857137*G23_11_18_1 - 10.7142857142857*G23_11_19_0 - 1.47975381947774e-13*G23_11_19_1 - 1.77083333333332*G23_12_10_0 - 1.77083333333333*G23_12_10_1 + 2.97619047619046*G23_12_11_0 + 2.97619047619047*G23_12_12_1 + 0.13392857142857*G23_12_13_0 + 4.68749999999998*G23_12_13_1 + 4.68749999999998*G23_12_14_0 + 0.13392857142856*G23_12_14_1 + 2.81249999999999*G23_12_15_0 + 3.61607142857143*G23_12_15_1 - 4.68749999999998*G23_12_16_0 - 4.82142857142854*G23_12_16_1 + 3.6160714285714*G23_12_17_0 + 2.81249999999997*G23_12_17_1 - 4.82142857142854*G23_12_18_0 - 4.68749999999994*G23_12_18_1 - 2.94642857142856*G23_12_19_0 - 2.94642857142858*G23_12_19_1 - 4.68749999999992*G23_13_10_0 - 4.68749999999998*G23_13_10_1 + 26.7857142857141*G23_13_11_0 - 5.65961111668246e-14*G23_13_11_1 + 0.66964285714289*G23_13_12_1 + 8.03571428571423*G23_13_13_0 + 48.2142857142855*G23_13_13_1 - 10.0446428571428*G23_13_14_0 - 24.1071428571428*G23_13_14_1 + 4.0178571428571*G23_13_15_0 + 2.00892857142869*G23_13_15_1 + 10.0446428571428*G23_13_16_0 + 2.0089285714285*G23_13_16_1 + 22.098214285714*G23_13_17_0 + 24.1071428571426*G23_13_17_1 - 44.1964285714282*G23_13_18_0 - 48.2142857142853*G23_13_18_1 - 12.0535714285713*G23_13_19_0 - 3.01703106941886e-14*G23_13_19_1 + 2.81249999999995*G23_14_10_0 + 2.81249999999999*G23_14_10_1 - 12.0535714285713*G23_14_11_0 + 3.74610151985569e-14*G23_14_11_1 + 5.22321428571425*G23_14_12_1 - 10.0446428571428*G23_14_13_0 - 24.1071428571428*G23_14_13_1 + 15.2678571428571*G23_14_14_0 + 12.0535714285714*G23_14_14_1 + 0.401785714285727*G23_14_15_0 - 0.401785714285777*G23_14_15_1 - 15.2678571428571*G23_14_16_0 - 7.6339285714285*G23_14_16_1 - 12.8571428571427*G23_14_17_0 - 12.0535714285713*G23_14_17_1 + 22.0982142857141*G23_14_18_0 + 24.1071428571427*G23_14_18_1 + 9.6428571428571*G23_14_19_0 + 2.10387263166467e-14*G23_14_19_1 - 4.82142857142856*G23_15_10_0 - 4.82142857142857*G23_15_10_1 + 1.12442607308472e-14*G23_15_11_0 - 3.6160714285714*G23_15_12_1 + 0.401785714285698*G23_15_13_0 - 2.00892857142854*G23_15_13_1 - 5.62499999999998*G23_15_14_0 + 0.401785714285664*G23_15_14_1 - 14.8660714285714*G23_15_15_0 + 1.71945790938821e-14*G23_15_15_1 + 5.62499999999998*G23_15_16_0 + 8.43749999999999*G23_15_16_1 + 7.23214285714288*G23_15_17_0 - 7.63392857142854*G23_15_17_1 - 2.41071428571433*G23_15_18_0 + 2.00892857142857*G23_15_18_1 + 14.4642857142857*G23_15_19_0 + 7.2321428571428*G23_15_19_1 + 3.61607142857141*G23_16_10_0 + 3.61607142857141*G23_16_10_1 - 1.5594079846859e-14*G23_16_11_0 + 2.75526576712318e-14*G23_16_11_1 + 4.82142857142855*G23_16_12_1 - 4.41964285714285*G23_16_13_0 - 2.00892857142864*G23_16_13_1 + 14.8660714285714*G23_16_14_0 + 7.63392857142855*G23_16_14_1 - 2.81249999999999*G23_16_15_0 - 8.43749999999997*G23_16_15_1 - 14.8660714285714*G23_16_16_0 + 5.76066971902378e-14*G23_16_16_1 - 6.02678571428571*G23_16_17_0 - 0.401785714285758*G23_16_17_1 + 2.41071428571431*G23_16_18_0 + 2.00892857142863*G23_16_18_1 + 7.23214285714284*G23_16_19_0 - 7.23214285714285*G23_16_19_1 - 5.22321428571429*G23_17_10_0 - 5.22321428571425*G23_17_10_1 - 12.0535714285713*G23_17_11_0 + 2.4160292946111e-14*G23_17_11_1 - 2.8125*G23_17_12_1 - 2.00892857142858*G23_17_13_0 - 24.1071428571428*G23_17_13_1 - 0.80357142857143*G23_17_14_0 + 12.0535714285714*G23_17_14_1 - 7.63392857142853*G23_17_15_0 + 7.63392857142846*G23_17_15_1 + 0.803571428571433*G23_17_16_0 + 0.40178571428575*G23_17_16_1 + 3.2142857142858*G23_17_17_0 - 12.0535714285713*G23_17_17_1 + 14.0624999999998*G23_17_18_0 + 24.1071428571427*G23_17_18_1 + 9.64285714285711*G23_17_19_0 - 0.669642857142802*G23_18_10_0 - 0.669642857142871*G23_18_10_1 + 26.7857142857141*G23_18_11_0 - 5.07226067866978e-14*G23_18_11_1 + 4.68749999999999*G23_18_12_1 + 4.01785714285714*G23_18_13_0 + 48.2142857142854*G23_18_13_1 - 2.00892857142856*G23_18_14_0 - 24.1071428571427*G23_18_14_1 + 8.03571428571425*G23_18_15_0 - 2.00892857142842*G23_18_15_1 + 2.00892857142855*G23_18_16_0 - 2.0089285714286*G23_18_16_1 + 14.0624999999998*G23_18_17_0 + 24.1071428571426*G23_18_17_1 - 40.1785714285711*G23_18_18_0 - 48.2142857142852*G23_18_18_1 - 12.0535714285714*G23_18_19_0 - 1.27943228928062e-13*G23_18_19_1 - 2.94642857142859*G23_19_10_0 - 2.9464285714286*G23_19_10_1 + 5.35714285714283*G23_19_11_0 + 2.39611284170569e-14*G23_19_11_1 + 2.94642857142857*G23_19_12_1 - 12.0535714285715*G23_19_13_0 - 8.55061464341555e-14*G23_19_13_1 + 9.64285714285712*G23_19_14_0 - 4.21364332314766e-14*G23_19_14_1 - 16.8749999999999*G23_19_15_0 - 7.23214285714277*G23_19_15_1 - 9.64285714285712*G23_19_16_0 + 7.23214285714284*G23_19_16_1 + 9.64285714285719*G23_19_17_0 + 2.64114901823986e-14*G23_19_17_1 - 12.0535714285714*G23_19_18_0 + 1.01695344853492e-13*G23_19_18_1 + 28.9285714285714*G23_19_19_0 - 6.85727516436252e-14*G23_19_19_1 + 1.48809523809523*G26_0_10_0 + 1.48809523809523*G26_0_10_1 - 1.48809523809523*G26_0_11_0 - 0.885416666666667*G26_0_12_1 + 0.0669642857142866*G26_0_13_0 - 2.34374999999999*G26_0_13_1 - 0.401785714285713*G26_0_14_0 + 1.40625000000001*G26_0_14_1 - 0.0669642857142875*G26_0_15_0 - 2.41071428571428*G26_0_15_1 + 0.401785714285713*G26_0_16_0 + 1.8080357142857*G26_0_16_1 - 2.27678571428569*G26_0_17_0 + 0.066964285714297*G26_0_17_1 + 2.27678571428569*G26_0_18_0 + 2.34374999999997*G26_0_18_1 - 1.47321428571427*G26_0_19_1 + 2.97619047619043*G26_1_10_0 + 2.97619047619048*G26_1_10_1 - 17.7083333333332*G26_1_11_0 + 2.33986817929012e-14*G26_1_11_1 - 2.97619047619049*G26_1_12_1 - 5.35714285714286*G26_1_13_0 - 32.142857142857*G26_1_13_1 + 12.0535714285714*G26_1_14_1 + 1.05783437565066e-14*G26_1_15_0 - 1.04059122429945e-13*G26_1_15_1 - 12.0535714285713*G26_1_17_0 - 12.0535714285712*G26_1_17_1 + 26.7857142857141*G26_1_18_0 + 32.1428571428568*G26_1_18_1 + 5.35714285714284*G26_1_19_0 + 7.39876909738868e-14*G26_1_19_1 + 0.885416666666662*G26_2_10_0 + 0.885416666666666*G26_2_10_1 - 1.48809523809523*G26_2_11_0 - 1.48809523809523*G26_2_12_1 - 0.066964285714285*G26_2_13_0 - 2.34374999999999*G26_2_13_1 - 2.34374999999999*G26_2_14_0 - 0.0669642857142801*G26_2_14_1 - 1.40625*G26_2_15_0 - 1.80803571428571*G26_2_15_1 + 2.34374999999999*G26_2_16_0 + 2.41071428571427*G26_2_16_1 - 1.8080357142857*G26_2_17_0 - 1.40624999999998*G26_2_17_1 + 2.41071428571427*G26_2_18_0 + 2.34374999999997*G26_2_18_1 + 1.47321428571428*G26_2_19_0 + 1.47321428571429*G26_2_19_1 + 2.34374999999996*G26_3_10_0 + 2.34374999999999*G26_3_10_1 - 13.392857142857*G26_3_11_0 + 2.82980555834123e-14*G26_3_11_1 - 0.334821428571445*G26_3_12_1 - 4.01785714285711*G26_3_13_0 - 24.1071428571428*G26_3_13_1 + 5.0223214285714*G26_3_14_0 + 12.0535714285714*G26_3_14_1 - 2.00892857142855*G26_3_15_0 - 1.00446428571434*G26_3_15_1 - 5.0223214285714*G26_3_16_0 - 1.00446428571425*G26_3_16_1 - 11.049107142857*G26_3_17_0 - 12.0535714285713*G26_3_17_1 + 22.0982142857141*G26_3_18_0 + 24.1071428571426*G26_3_18_1 + 6.02678571428566*G26_3_19_0 + 1.50851553470943e-14*G26_3_19_1 - 1.40624999999998*G26_4_10_0 - 1.40624999999999*G26_4_10_1 + 6.02678571428567*G26_4_11_0 - 1.87305075992784e-14*G26_4_11_1 - 2.61160714285713*G26_4_12_1 + 5.02232142857141*G26_4_13_0 + 12.0535714285714*G26_4_13_1 - 7.63392857142854*G26_4_14_0 - 6.0267857142857*G26_4_14_1 - 0.200892857142863*G26_4_15_0 + 0.200892857142889*G26_4_15_1 + 7.63392857142854*G26_4_16_0 + 3.81696428571425*G26_4_16_1 + 6.42857142857136*G26_4_17_0 + 6.02678571428565*G26_4_17_1 - 11.0491071428571*G26_4_18_0 - 12.0535714285713*G26_4_18_1 - 4.82142857142855*G26_4_19_0 - 1.05193631583234e-14*G26_4_19_1 + 2.41071428571428*G26_5_10_0 + 2.41071428571429*G26_5_10_1 + 1.8080357142857*G26_5_12_1 - 0.200892857142849*G26_5_13_0 + 1.00446428571427*G26_5_13_1 + 2.81249999999999*G26_5_14_0 - 0.200892857142832*G26_5_14_1 + 7.43303571428569*G26_5_15_0 - 2.81249999999999*G26_5_16_0 - 4.21875*G26_5_16_1 - 3.61607142857144*G26_5_17_0 + 3.81696428571427*G26_5_17_1 + 1.20535714285716*G26_5_18_0 - 1.00446428571429*G26_5_18_1 - 7.23214285714284*G26_5_19_0 - 3.6160714285714*G26_5_19_1 - 1.80803571428571*G26_6_10_0 - 1.8080357142857*G26_6_10_1 - 1.37763288356159e-14*G26_6_11_1 - 2.41071428571427*G26_6_12_1 + 2.20982142857143*G26_6_13_0 + 1.00446428571432*G26_6_13_1 - 7.43303571428569*G26_6_14_0 - 3.81696428571428*G26_6_14_1 + 1.40624999999999*G26_6_15_0 + 4.21874999999999*G26_6_15_1 + 7.43303571428569*G26_6_16_0 - 2.88033485951189e-14*G26_6_16_1 + 3.01339285714286*G26_6_17_0 + 0.200892857142879*G26_6_17_1 - 1.20535714285716*G26_6_18_0 - 1.00446428571431*G26_6_18_1 - 3.61607142857142*G26_6_19_0 + 3.61607142857142*G26_6_19_1 + 2.61160714285714*G26_7_10_0 + 2.61160714285713*G26_7_10_1 + 6.02678571428567*G26_7_11_0 - 1.20801464730555e-14*G26_7_11_1 + 1.40625*G26_7_12_1 + 1.00446428571429*G26_7_13_0 + 12.0535714285714*G26_7_13_1 + 0.401785714285715*G26_7_14_0 - 6.02678571428569*G26_7_14_1 + 3.81696428571426*G26_7_15_0 - 3.81696428571423*G26_7_15_1 - 0.401785714285716*G26_7_16_0 - 0.200892857142875*G26_7_16_1 - 1.6071428571429*G26_7_17_0 + 6.02678571428563*G26_7_17_1 - 7.03124999999992*G26_7_18_0 - 12.0535714285713*G26_7_18_1 - 4.82142857142855*G26_7_19_0 + 0.334821428571401*G26_8_10_0 + 0.334821428571436*G26_8_10_1 - 13.392857142857*G26_8_11_0 + 2.53613033933489e-14*G26_8_11_1 - 2.34375*G26_8_12_1 - 2.00892857142857*G26_8_13_0 - 24.1071428571427*G26_8_13_1 + 1.00446428571428*G26_8_14_0 + 12.0535714285714*G26_8_14_1 - 4.01785714285712*G26_8_15_0 + 1.00446428571421*G26_8_15_1 - 1.00446428571428*G26_8_16_0 + 1.0044642857143*G26_8_16_1 - 7.03124999999989*G26_8_17_0 - 12.0535714285713*G26_8_17_1 + 20.0892857142855*G26_8_18_0 + 24.1071428571426*G26_8_18_1 + 6.02678571428569*G26_8_19_0 + 6.39716144640312e-14*G26_8_19_1 + 1.4732142857143*G26_9_10_0 + 1.4732142857143*G26_9_10_1 - 2.67857142857142*G26_9_11_0 - 1.19805642085284e-14*G26_9_11_1 - 1.47321428571429*G26_9_12_1 + 6.02678571428574*G26_9_13_0 + 4.27530732170778e-14*G26_9_13_1 - 4.82142857142856*G26_9_14_0 + 2.10682166157383e-14*G26_9_14_1 + 8.43749999999996*G26_9_15_0 + 3.61607142857138*G26_9_15_1 + 4.82142857142856*G26_9_16_0 - 3.61607142857142*G26_9_16_1 - 4.82142857142859*G26_9_17_0 - 1.32057450911993e-14*G26_9_17_1 + 6.02678571428571*G26_9_18_0 - 5.08476724267459e-14*G26_9_18_1 - 14.4642857142857*G26_9_19_0 + 3.42863758218126e-14*G26_9_19_1 + 1.48809523809523*G27_10_10_0 + 1.48809523809523*G27_10_10_1 - 1.48809523809523*G27_10_11_0 - 0.885416666666667*G27_10_12_1 + 0.0669642857142866*G27_10_13_0 - 2.34374999999999*G27_10_13_1 - 0.401785714285713*G27_10_14_0 + 1.40625000000001*G27_10_14_1 - 0.0669642857142875*G27_10_15_0 - 2.41071428571428*G27_10_15_1 + 0.401785714285713*G27_10_16_0 + 1.8080357142857*G27_10_16_1 - 2.27678571428569*G27_10_17_0 + 0.066964285714297*G27_10_17_1 + 2.27678571428569*G27_10_18_0 + 2.34374999999997*G27_10_18_1 - 1.47321428571427*G27_10_19_1 + 2.97619047619043*G27_11_10_0 + 2.97619047619048*G27_11_10_1 - 17.7083333333332*G27_11_11_0 + 2.33986817929012e-14*G27_11_11_1 - 2.97619047619049*G27_11_12_1 - 5.35714285714286*G27_11_13_0 - 32.142857142857*G27_11_13_1 + 12.0535714285714*G27_11_14_1 + 1.05783437565066e-14*G27_11_15_0 - 1.04059122429945e-13*G27_11_15_1 - 12.0535714285713*G27_11_17_0 - 12.0535714285712*G27_11_17_1 + 26.7857142857141*G27_11_18_0 + 32.1428571428568*G27_11_18_1 + 5.35714285714284*G27_11_19_0 + 7.39876909738868e-14*G27_11_19_1 + 0.885416666666662*G27_12_10_0 + 0.885416666666666*G27_12_10_1 - 1.48809523809523*G27_12_11_0 - 1.48809523809523*G27_12_12_1 - 0.066964285714285*G27_12_13_0 - 2.34374999999999*G27_12_13_1 - 2.34374999999999*G27_12_14_0 - 0.0669642857142801*G27_12_14_1 - 1.40625*G27_12_15_0 - 1.80803571428571*G27_12_15_1 + 2.34374999999999*G27_12_16_0 + 2.41071428571427*G27_12_16_1 - 1.8080357142857*G27_12_17_0 - 1.40624999999998*G27_12_17_1 + 2.41071428571427*G27_12_18_0 + 2.34374999999997*G27_12_18_1 + 1.47321428571428*G27_12_19_0 + 1.47321428571429*G27_12_19_1 + 2.34374999999996*G27_13_10_0 + 2.34374999999999*G27_13_10_1 - 13.392857142857*G27_13_11_0 + 2.82980555834123e-14*G27_13_11_1 - 0.334821428571445*G27_13_12_1 - 4.01785714285711*G27_13_13_0 - 24.1071428571428*G27_13_13_1 + 5.0223214285714*G27_13_14_0 + 12.0535714285714*G27_13_14_1 - 2.00892857142855*G27_13_15_0 - 1.00446428571434*G27_13_15_1 - 5.0223214285714*G27_13_16_0 - 1.00446428571425*G27_13_16_1 - 11.049107142857*G27_13_17_0 - 12.0535714285713*G27_13_17_1 + 22.0982142857141*G27_13_18_0 + 24.1071428571426*G27_13_18_1 + 6.02678571428566*G27_13_19_0 + 1.50851553470943e-14*G27_13_19_1 - 1.40624999999998*G27_14_10_0 - 1.40624999999999*G27_14_10_1 + 6.02678571428567*G27_14_11_0 - 1.87305075992784e-14*G27_14_11_1 - 2.61160714285713*G27_14_12_1 + 5.02232142857141*G27_14_13_0 + 12.0535714285714*G27_14_13_1 - 7.63392857142854*G27_14_14_0 - 6.0267857142857*G27_14_14_1 - 0.200892857142863*G27_14_15_0 + 0.200892857142889*G27_14_15_1 + 7.63392857142854*G27_14_16_0 + 3.81696428571425*G27_14_16_1 + 6.42857142857136*G27_14_17_0 + 6.02678571428565*G27_14_17_1 - 11.0491071428571*G27_14_18_0 - 12.0535714285713*G27_14_18_1 - 4.82142857142855*G27_14_19_0 - 1.05193631583234e-14*G27_14_19_1 + 2.41071428571428*G27_15_10_0 + 2.41071428571429*G27_15_10_1 + 1.8080357142857*G27_15_12_1 - 0.200892857142849*G27_15_13_0 + 1.00446428571427*G27_15_13_1 + 2.81249999999999*G27_15_14_0 - 0.200892857142832*G27_15_14_1 + 7.43303571428569*G27_15_15_0 - 2.81249999999999*G27_15_16_0 - 4.21875*G27_15_16_1 - 3.61607142857144*G27_15_17_0 + 3.81696428571427*G27_15_17_1 + 1.20535714285716*G27_15_18_0 - 1.00446428571429*G27_15_18_1 - 7.23214285714284*G27_15_19_0 - 3.6160714285714*G27_15_19_1 - 1.80803571428571*G27_16_10_0 - 1.8080357142857*G27_16_10_1 - 1.37763288356159e-14*G27_16_11_1 - 2.41071428571427*G27_16_12_1 + 2.20982142857143*G27_16_13_0 + 1.00446428571432*G27_16_13_1 - 7.43303571428569*G27_16_14_0 - 3.81696428571428*G27_16_14_1 + 1.40624999999999*G27_16_15_0 + 4.21874999999999*G27_16_15_1 + 7.43303571428569*G27_16_16_0 - 2.88033485951189e-14*G27_16_16_1 + 3.01339285714286*G27_16_17_0 + 0.200892857142879*G27_16_17_1 - 1.20535714285716*G27_16_18_0 - 1.00446428571431*G27_16_18_1 - 3.61607142857142*G27_16_19_0 + 3.61607142857142*G27_16_19_1 + 2.61160714285714*G27_17_10_0 + 2.61160714285713*G27_17_10_1 + 6.02678571428567*G27_17_11_0 - 1.20801464730555e-14*G27_17_11_1 + 1.40625*G27_17_12_1 + 1.00446428571429*G27_17_13_0 + 12.0535714285714*G27_17_13_1 + 0.401785714285715*G27_17_14_0 - 6.02678571428569*G27_17_14_1 + 3.81696428571426*G27_17_15_0 - 3.81696428571423*G27_17_15_1 - 0.401785714285716*G27_17_16_0 - 0.200892857142875*G27_17_16_1 - 1.6071428571429*G27_17_17_0 + 6.02678571428563*G27_17_17_1 - 7.03124999999992*G27_17_18_0 - 12.0535714285713*G27_17_18_1 - 4.82142857142855*G27_17_19_0 + 0.334821428571401*G27_18_10_0 + 0.334821428571436*G27_18_10_1 - 13.392857142857*G27_18_11_0 + 2.53613033933489e-14*G27_18_11_1 - 2.34375*G27_18_12_1 - 2.00892857142857*G27_18_13_0 - 24.1071428571427*G27_18_13_1 + 1.00446428571428*G27_18_14_0 + 12.0535714285714*G27_18_14_1 - 4.01785714285712*G27_18_15_0 + 1.00446428571421*G27_18_15_1 - 1.00446428571428*G27_18_16_0 + 1.0044642857143*G27_18_16_1 - 7.03124999999989*G27_18_17_0 - 12.0535714285713*G27_18_17_1 + 20.0892857142855*G27_18_18_0 + 24.1071428571426*G27_18_18_1 + 6.02678571428569*G27_18_19_0 + 6.39716144640312e-14*G27_18_19_1 + 1.4732142857143*G27_19_10_0 + 1.4732142857143*G27_19_10_1 - 2.67857142857142*G27_19_11_0 - 1.19805642085284e-14*G27_19_11_1 - 1.47321428571429*G27_19_12_1 + 6.02678571428574*G27_19_13_0 + 4.27530732170778e-14*G27_19_13_1 - 4.82142857142856*G27_19_14_0 + 2.10682166157383e-14*G27_19_14_1 + 8.43749999999996*G27_19_15_0 + 3.61607142857138*G27_19_15_1 + 4.82142857142856*G27_19_16_0 - 3.61607142857142*G27_19_16_1 - 4.82142857142859*G27_19_17_0 - 1.32057450911993e-14*G27_19_17_1 + 6.02678571428571*G27_19_18_0 - 5.08476724267459e-14*G27_19_18_1 - 14.4642857142857*G27_19_19_0 + 3.42863758218126e-14*G27_19_19_1;
    A[12] = -0.175000000000001*G0_1_0_0 - 0.175000000000001*G0_1_0_1 + 0.175*G0_1_1_0 + 0.849999999999997*G0_1_2_1 - 0.599999999999996*G0_1_3_0 + 0.0750000000000016*G0_1_3_1 + 1.42499999999999*G0_1_4_0 + 0.0749999999999967*G0_1_4_1 + 0.599999999999996*G0_1_5_0 + 0.674999999999999*G0_1_5_1 - 1.42499999999999*G0_1_6_0 - 1.34999999999999*G0_1_6_1 - 0.0750000000000049*G0_1_7_1 - 0.0750000000000001*G0_1_8_1 - 0.175000000000001*G1_1_10_0 - 0.175000000000001*G1_1_10_1 + 0.175*G1_1_11_0 + 0.849999999999997*G1_1_12_1 - 0.599999999999996*G1_1_13_0 + 0.0750000000000016*G1_1_13_1 + 1.42499999999999*G1_1_14_0 + 0.0749999999999967*G1_1_14_1 + 0.599999999999996*G1_1_15_0 + 0.674999999999999*G1_1_15_1 - 1.42499999999999*G1_1_16_0 - 1.34999999999999*G1_1_16_1 - 0.0750000000000049*G1_1_17_1 - 0.0750000000000001*G1_1_18_1 + 0.0875000000000005*G2_1_0_0 + 0.0875000000000007*G2_1_0_1 - 0.0875000000000002*G2_1_1_0 - 0.424999999999998*G2_1_2_1 + 0.299999999999998*G2_1_3_0 - 0.0375000000000008*G2_1_3_1 - 0.712499999999997*G2_1_4_0 - 0.0374999999999983*G2_1_4_1 - 0.299999999999998*G2_1_5_0 - 0.3375*G2_1_5_1 + 0.712499999999997*G2_1_6_0 + 0.674999999999996*G2_1_6_1 + 0.0375000000000024*G2_1_7_1 + 0.0375000000000001*G2_1_8_1 + 0.0875000000000005*G3_1_10_0 + 0.0875000000000007*G3_1_10_1 - 0.0875000000000002*G3_1_11_0 - 0.424999999999998*G3_1_12_1 + 0.299999999999998*G3_1_13_0 - 0.0375000000000008*G3_1_13_1 - 0.712499999999997*G3_1_14_0 - 0.0374999999999983*G3_1_14_1 - 0.299999999999998*G3_1_15_0 - 0.3375*G3_1_15_1 + 0.712499999999997*G3_1_16_0 + 0.674999999999996*G3_1_16_1 + 0.0375000000000024*G3_1_17_1 + 0.0375000000000001*G3_1_18_1 - 0.175000000000001*G14_1_10_0 - 0.175000000000001*G14_1_10_1 + 0.175*G14_1_11_0 + 0.849999999999997*G14_1_12_1 - 0.599999999999996*G14_1_13_0 + 0.0750000000000016*G14_1_13_1 + 1.42499999999999*G14_1_14_0 + 0.0749999999999967*G14_1_14_1 + 0.599999999999996*G14_1_15_0 + 0.674999999999999*G14_1_15_1 - 1.42499999999999*G14_1_16_0 - 1.34999999999999*G14_1_16_1 - 0.0750000000000049*G14_1_17_1 - 0.0750000000000001*G14_1_18_1 - 0.175000000000001*G15_1_10_0 - 0.175000000000001*G15_1_10_1 + 0.175*G15_1_11_0 + 0.849999999999997*G15_1_12_1 - 0.599999999999996*G15_1_13_0 + 0.0750000000000016*G15_1_13_1 + 1.42499999999999*G15_1_14_0 + 0.0749999999999967*G15_1_14_1 + 0.599999999999996*G15_1_15_0 + 0.674999999999999*G15_1_15_1 - 1.42499999999999*G15_1_16_0 - 1.34999999999999*G15_1_16_1 - 0.0750000000000049*G15_1_17_1 - 0.0750000000000001*G15_1_18_1 - 0.149999999999999*G16_1_22 - 0.0333333333333335*G16_1_23 - 0.0333333333333336*G16_1_24 - 0.0333333333333343*G16_1_25 + 0.0875000000000005*G17_1_10_0 + 0.0875000000000007*G17_1_10_1 - 0.0875000000000002*G17_1_11_0 - 0.424999999999998*G17_1_12_1 + 0.299999999999998*G17_1_13_0 - 0.0375000000000008*G17_1_13_1 - 0.712499999999997*G17_1_14_0 - 0.0374999999999983*G17_1_14_1 - 0.299999999999998*G17_1_15_0 - 0.3375*G17_1_15_1 + 0.712499999999997*G17_1_16_0 + 0.674999999999996*G17_1_16_1 + 0.0375000000000024*G17_1_17_1 + 0.0375000000000001*G17_1_18_1 + 0.0875000000000005*G18_1_10_0 + 0.0875000000000007*G18_1_10_1 - 0.0875000000000002*G18_1_11_0 - 0.424999999999998*G18_1_12_1 + 0.299999999999998*G18_1_13_0 - 0.0375000000000008*G18_1_13_1 - 0.712499999999997*G18_1_14_0 - 0.0374999999999983*G18_1_14_1 - 0.299999999999998*G18_1_15_0 - 0.3375*G18_1_15_1 + 0.712499999999997*G18_1_16_0 + 0.674999999999996*G18_1_16_1 + 0.0375000000000024*G18_1_17_1 + 0.0375000000000001*G18_1_18_1 + 0.0749999999999995*G19_1_22 + 0.0166666666666667*G19_1_23 + 0.0166666666666668*G19_1_24 + 0.0166666666666672*G19_1_25 - 2.97619047619046*G22_0_10_0 - 2.97619047619047*G22_0_10_1 + 1.77083333333333*G22_0_11_0 + 2.97619047619046*G22_0_12_1 - 2.81249999999998*G22_0_13_0 + 0.803571428571427*G22_0_13_1 + 4.68749999999997*G22_0_14_0 - 0.133928571428584*G22_0_14_1 - 0.133928571428567*G22_0_15_0 + 4.55357142857141*G22_0_15_1 - 4.68749999999997*G22_0_16_0 - 4.55357142857139*G22_0_16_1 + 4.82142857142856*G22_0_17_0 + 0.13392857142857*G22_0_17_1 - 3.61607142857142*G22_0_18_0 - 0.803571428571413*G22_0_18_1 + 2.94642857142855*G22_0_19_0 - 2.17742490704609e-14*G22_0_19_1 - 1.77083333333332*G22_1_10_0 - 1.77083333333333*G22_1_10_1 + 2.97619047619046*G22_1_11_0 + 2.97619047619047*G22_1_12_1 + 0.13392857142857*G22_1_13_0 + 4.68749999999997*G22_1_13_1 + 4.68749999999998*G22_1_14_0 + 0.13392857142856*G22_1_14_1 + 2.81249999999999*G22_1_15_0 + 3.61607142857143*G22_1_15_1 - 4.68749999999998*G22_1_16_0 - 4.82142857142854*G22_1_16_1 + 3.6160714285714*G22_1_17_0 + 2.81249999999997*G22_1_17_1 - 4.82142857142854*G22_1_18_0 - 4.68749999999994*G22_1_18_1 - 2.94642857142856*G22_1_19_0 - 2.94642857142858*G22_1_19_1 - 5.95238095238097*G22_2_10_0 - 5.95238095238097*G22_2_10_1 + 5.95238095238092*G22_2_11_0 + 5.94199914367746e-14*G22_2_11_1 + 35.4166666666665*G22_2_12_1 - 24.1071428571427*G22_2_13_0 - 8.4821039081362e-14*G22_2_13_1 + 64.285714285714*G22_2_14_0 + 10.7142857142857*G22_2_14_1 + 24.1071428571428*G22_2_15_0 + 24.1071428571428*G22_2_15_1 - 64.285714285714*G22_2_16_0 - 53.5714285714282*G22_2_16_1 + 2.82551759767102e-14*G22_2_17_0 - 5.1236792586451e-14*G22_2_17_1 + 1.10411679798972e-13*G22_2_18_1 - 5.50670620214078e-14*G22_2_19_0 - 10.7142857142858*G22_2_19_1 + 2.81250000000001*G22_3_10_0 + 2.81249999999998*G22_3_10_1 + 5.22321428571426*G22_3_11_0 - 2.70783836443327e-14*G22_3_11_1 - 12.0535714285713*G22_3_12_1 + 12.0535714285714*G22_3_13_0 + 15.2678571428572*G22_3_13_1 - 24.1071428571427*G22_3_14_0 - 10.0446428571428*G22_3_14_1 - 12.0535714285714*G22_3_15_0 - 12.8571428571427*G22_3_15_1 + 24.1071428571427*G22_3_16_0 + 22.0982142857141*G22_3_16_1 - 0.401785714285748*G22_3_17_0 + 0.401785714285671*G22_3_17_1 - 7.63392857142852*G22_3_18_0 - 15.2678571428571*G22_3_18_1 - 4.81836792687318e-14*G22_3_19_0 + 9.64285714285706*G22_3_19_1 - 4.68750000000002*G22_4_10_0 - 4.68749999999999*G22_4_10_1 + 0.669642857142854*G22_4_11_0 + 3.85629135203417e-14*G22_4_11_1 + 26.7857142857141*G22_4_12_1 - 24.1071428571427*G22_4_13_0 - 10.0446428571429*G22_4_13_1 + 48.2142857142855*G22_4_14_0 + 8.0357142857143*G22_4_14_1 + 24.1071428571428*G22_4_15_0 + 22.0982142857141*G22_4_15_1 - 48.2142857142855*G22_4_16_0 - 44.1964285714283*G22_4_16_1 + 2.0089285714286*G22_4_17_0 + 4.01785714285716*G22_4_17_1 + 2.00892857142856*G22_4_18_0 + 10.0446428571428*G22_4_18_1 - 3.01980662698043e-14*G22_4_19_0 - 12.0535714285714*G22_4_19_1 - 5.22321428571427*G22_5_10_0 - 5.22321428571427*G22_5_10_1 - 2.81249999999998*G22_5_11_0 - 1.72996054515353e-14*G22_5_11_1 - 12.0535714285714*G22_5_12_1 + 12.0535714285714*G22_5_13_0 - 0.803571428571364*G22_5_13_1 - 24.1071428571427*G22_5_14_0 - 2.00892857142862*G22_5_14_1 - 12.0535714285714*G22_5_15_0 + 3.21428571428571*G22_5_15_1 + 24.1071428571427*G22_5_16_0 + 14.0624999999999*G22_5_16_1 + 7.63392857142858*G22_5_17_0 - 7.63392857142855*G22_5_17_1 + 0.401785714285667*G22_5_18_0 + 0.803571428571408*G22_5_18_1 + 7.18175519054398e-14*G22_5_19_0 + 9.64285714285714*G22_5_19_1 - 0.66964285714287*G22_6_10_0 - 0.669642857142857*G22_6_10_1 + 4.68749999999997*G22_6_11_0 + 3.40450677932774e-14*G22_6_11_1 + 26.7857142857141*G22_6_12_1 - 24.1071428571427*G22_6_13_0 - 2.00892857142865*G22_6_13_1 + 48.2142857142855*G22_6_14_0 + 4.01785714285718*G22_6_14_1 + 24.1071428571428*G22_6_15_0 + 14.0624999999999*G22_6_15_1 - 48.2142857142855*G22_6_16_0 - 40.1785714285711*G22_6_16_1 - 2.00892857142857*G22_6_17_0 + 8.03571428571426*G22_6_17_1 - 2.00892857142853*G22_6_18_0 + 2.00892857142861*G22_6_18_1 - 4.51583215266282e-14*G22_6_19_0 - 12.0535714285714*G22_6_19_1 - 4.82142857142856*G22_7_10_0 - 4.82142857142857*G22_7_10_1 - 3.6160714285714*G22_7_11_0 + 1.02342846278283e-14*G22_7_11_1 + 1.24969479209369e-14*G22_7_12_1 + 0.401785714285688*G22_7_13_0 - 5.62499999999996*G22_7_13_1 - 2.00892857142857*G22_7_14_0 + 0.401785714285643*G22_7_14_1 - 7.63392857142856*G22_7_15_0 + 7.23214285714284*G22_7_15_1 + 2.00892857142857*G22_7_16_0 - 2.41071428571425*G22_7_16_1 + 6.33664128113498e-14*G22_7_17_0 - 14.8660714285714*G22_7_17_1 + 8.43749999999991*G22_7_18_0 + 5.62499999999999*G22_7_18_1 + 7.23214285714287*G22_7_19_0 + 14.4642857142856*G22_7_19_1 + 3.61607142857144*G22_8_10_0 + 3.61607142857141*G22_8_10_1 + 4.82142857142853*G22_8_11_0 + 1.29826704942104e-14*G22_8_12_1 + 7.63392857142857*G22_8_13_0 + 14.8660714285714*G22_8_13_1 - 2.00892857142857*G22_8_14_0 - 4.41964285714288*G22_8_14_1 - 0.401785714285704*G22_8_15_0 - 6.02678571428564*G22_8_15_1 + 2.00892857142857*G22_8_16_0 + 2.41071428571429*G22_8_16_1 - 8.43750000000002*G22_8_17_0 - 2.81250000000006*G22_8_17_1 + 4.20169541520687e-14*G22_8_18_0 - 14.8660714285713*G22_8_18_1 - 7.23214285714287*G22_8_19_0 + 7.23214285714278*G22_8_19_1 - 2.94642857142855*G22_9_10_0 - 2.94642857142858*G22_9_10_1 + 2.94642857142855*G22_9_11_0 + 5.35714285714286*G22_9_12_1 + 6.65717481140859e-14*G22_9_13_0 + 9.64285714285718*G22_9_13_1 - 12.0535714285714*G22_9_14_1 - 4.96963581397836e-14*G22_9_15_0 + 9.64285714285713*G22_9_15_1 - 12.0535714285713*G22_9_16_1 - 7.23214285714283*G22_9_17_0 - 16.875*G22_9_17_1 + 7.23214285714283*G22_9_18_0 - 9.64285714285707*G22_9_18_1 - 1.59872115546023e-14*G22_9_19_0 + 28.9285714285713*G22_9_19_1 - 2.97619047619046*G23_10_10_0 - 2.97619047619047*G23_10_10_1 + 1.77083333333333*G23_10_11_0 + 2.97619047619046*G23_10_12_1 - 2.81249999999998*G23_10_13_0 + 0.803571428571427*G23_10_13_1 + 4.68749999999997*G23_10_14_0 - 0.133928571428584*G23_10_14_1 - 0.133928571428567*G23_10_15_0 + 4.55357142857141*G23_10_15_1 - 4.68749999999997*G23_10_16_0 - 4.55357142857139*G23_10_16_1 + 4.82142857142856*G23_10_17_0 + 0.13392857142857*G23_10_17_1 - 3.61607142857142*G23_10_18_0 - 0.803571428571413*G23_10_18_1 + 2.94642857142855*G23_10_19_0 - 2.17742490704609e-14*G23_10_19_1 - 1.77083333333332*G23_11_10_0 - 1.77083333333333*G23_11_10_1 + 2.97619047619046*G23_11_11_0 + 2.97619047619047*G23_11_12_1 + 0.13392857142857*G23_11_13_0 + 4.68749999999997*G23_11_13_1 + 4.68749999999998*G23_11_14_0 + 0.13392857142856*G23_11_14_1 + 2.81249999999999*G23_11_15_0 + 3.61607142857143*G23_11_15_1 - 4.68749999999998*G23_11_16_0 - 4.82142857142854*G23_11_16_1 + 3.6160714285714*G23_11_17_0 + 2.81249999999997*G23_11_17_1 - 4.82142857142854*G23_11_18_0 - 4.68749999999994*G23_11_18_1 - 2.94642857142856*G23_11_19_0 - 2.94642857142858*G23_11_19_1 - 5.95238095238097*G23_12_10_0 - 5.95238095238097*G23_12_10_1 + 5.95238095238092*G23_12_11_0 + 5.94199914367746e-14*G23_12_11_1 + 35.4166666666665*G23_12_12_1 - 24.1071428571427*G23_12_13_0 - 8.4821039081362e-14*G23_12_13_1 + 64.285714285714*G23_12_14_0 + 10.7142857142857*G23_12_14_1 + 24.1071428571428*G23_12_15_0 + 24.1071428571428*G23_12_15_1 - 64.285714285714*G23_12_16_0 - 53.5714285714282*G23_12_16_1 + 2.82551759767102e-14*G23_12_17_0 - 5.1236792586451e-14*G23_12_17_1 + 1.10411679798972e-13*G23_12_18_1 - 5.50670620214078e-14*G23_12_19_0 - 10.7142857142858*G23_12_19_1 + 2.81250000000001*G23_13_10_0 + 2.81249999999998*G23_13_10_1 + 5.22321428571426*G23_13_11_0 - 2.70783836443327e-14*G23_13_11_1 - 12.0535714285713*G23_13_12_1 + 12.0535714285714*G23_13_13_0 + 15.2678571428572*G23_13_13_1 - 24.1071428571427*G23_13_14_0 - 10.0446428571428*G23_13_14_1 - 12.0535714285714*G23_13_15_0 - 12.8571428571427*G23_13_15_1 + 24.1071428571427*G23_13_16_0 + 22.0982142857141*G23_13_16_1 - 0.401785714285748*G23_13_17_0 + 0.401785714285671*G23_13_17_1 - 7.63392857142852*G23_13_18_0 - 15.2678571428571*G23_13_18_1 - 4.81836792687318e-14*G23_13_19_0 + 9.64285714285706*G23_13_19_1 - 4.68750000000002*G23_14_10_0 - 4.68749999999999*G23_14_10_1 + 0.669642857142854*G23_14_11_0 + 3.85629135203417e-14*G23_14_11_1 + 26.7857142857141*G23_14_12_1 - 24.1071428571427*G23_14_13_0 - 10.0446428571429*G23_14_13_1 + 48.2142857142855*G23_14_14_0 + 8.0357142857143*G23_14_14_1 + 24.1071428571428*G23_14_15_0 + 22.0982142857141*G23_14_15_1 - 48.2142857142855*G23_14_16_0 - 44.1964285714283*G23_14_16_1 + 2.0089285714286*G23_14_17_0 + 4.01785714285716*G23_14_17_1 + 2.00892857142856*G23_14_18_0 + 10.0446428571428*G23_14_18_1 - 3.01980662698043e-14*G23_14_19_0 - 12.0535714285714*G23_14_19_1 - 5.22321428571427*G23_15_10_0 - 5.22321428571427*G23_15_10_1 - 2.81249999999998*G23_15_11_0 - 1.72996054515353e-14*G23_15_11_1 - 12.0535714285714*G23_15_12_1 + 12.0535714285714*G23_15_13_0 - 0.803571428571364*G23_15_13_1 - 24.1071428571427*G23_15_14_0 - 2.00892857142862*G23_15_14_1 - 12.0535714285714*G23_15_15_0 + 3.21428571428571*G23_15_15_1 + 24.1071428571427*G23_15_16_0 + 14.0624999999999*G23_15_16_1 + 7.63392857142858*G23_15_17_0 - 7.63392857142855*G23_15_17_1 + 0.401785714285667*G23_15_18_0 + 0.803571428571408*G23_15_18_1 + 7.18175519054398e-14*G23_15_19_0 + 9.64285714285714*G23_15_19_1 - 0.66964285714287*G23_16_10_0 - 0.669642857142857*G23_16_10_1 + 4.68749999999997*G23_16_11_0 + 3.40450677932774e-14*G23_16_11_1 + 26.7857142857141*G23_16_12_1 - 24.1071428571427*G23_16_13_0 - 2.00892857142865*G23_16_13_1 + 48.2142857142855*G23_16_14_0 + 4.01785714285718*G23_16_14_1 + 24.1071428571428*G23_16_15_0 + 14.0624999999999*G23_16_15_1 - 48.2142857142855*G23_16_16_0 - 40.1785714285711*G23_16_16_1 - 2.00892857142857*G23_16_17_0 + 8.03571428571426*G23_16_17_1 - 2.00892857142853*G23_16_18_0 + 2.00892857142861*G23_16_18_1 - 4.51583215266282e-14*G23_16_19_0 - 12.0535714285714*G23_16_19_1 - 4.82142857142856*G23_17_10_0 - 4.82142857142857*G23_17_10_1 - 3.6160714285714*G23_17_11_0 + 1.02342846278283e-14*G23_17_11_1 + 1.24969479209369e-14*G23_17_12_1 + 0.401785714285688*G23_17_13_0 - 5.62499999999996*G23_17_13_1 - 2.00892857142857*G23_17_14_0 + 0.401785714285643*G23_17_14_1 - 7.63392857142856*G23_17_15_0 + 7.23214285714284*G23_17_15_1 + 2.00892857142857*G23_17_16_0 - 2.41071428571425*G23_17_16_1 + 6.33664128113498e-14*G23_17_17_0 - 14.8660714285714*G23_17_17_1 + 8.43749999999991*G23_17_18_0 + 5.62499999999999*G23_17_18_1 + 7.23214285714287*G23_17_19_0 + 14.4642857142856*G23_17_19_1 + 3.61607142857144*G23_18_10_0 + 3.61607142857141*G23_18_10_1 + 4.82142857142853*G23_18_11_0 + 1.29826704942104e-14*G23_18_12_1 + 7.63392857142857*G23_18_13_0 + 14.8660714285714*G23_18_13_1 - 2.00892857142857*G23_18_14_0 - 4.41964285714288*G23_18_14_1 - 0.401785714285704*G23_18_15_0 - 6.02678571428564*G23_18_15_1 + 2.00892857142857*G23_18_16_0 + 2.41071428571429*G23_18_16_1 - 8.43750000000002*G23_18_17_0 - 2.81250000000006*G23_18_17_1 + 4.20169541520687e-14*G23_18_18_0 - 14.8660714285713*G23_18_18_1 - 7.23214285714287*G23_18_19_0 + 7.23214285714278*G23_18_19_1 - 2.94642857142855*G23_19_10_0 - 2.94642857142858*G23_19_10_1 + 2.94642857142855*G23_19_11_0 + 5.35714285714286*G23_19_12_1 + 6.65717481140859e-14*G23_19_13_0 + 9.64285714285718*G23_19_13_1 - 12.0535714285714*G23_19_14_1 - 4.96963581397836e-14*G23_19_15_0 + 9.64285714285713*G23_19_15_1 - 12.0535714285713*G23_19_16_1 - 7.23214285714283*G23_19_17_0 - 16.875*G23_19_17_1 + 7.23214285714283*G23_19_18_0 - 9.64285714285707*G23_19_18_1 - 1.59872115546023e-14*G23_19_19_0 + 28.9285714285713*G23_19_19_1 + 1.48809523809523*G26_0_10_0 + 1.48809523809523*G26_0_10_1 - 0.885416666666663*G26_0_11_0 - 1.48809523809523*G26_0_12_1 + 1.40624999999999*G26_0_13_0 - 0.401785714285714*G26_0_13_1 - 2.34374999999999*G26_0_14_0 + 0.0669642857142922*G26_0_14_1 + 0.0669642857142833*G26_0_15_0 - 2.27678571428571*G26_0_15_1 + 2.34374999999999*G26_0_16_0 + 2.27678571428569*G26_0_16_1 - 2.41071428571428*G26_0_17_0 - 0.0669642857142852*G26_0_17_1 + 1.80803571428571*G26_0_18_0 + 0.401785714285707*G26_0_18_1 - 1.47321428571427*G26_0_19_0 + 1.08871245352304e-14*G26_0_19_1 + 0.885416666666662*G26_1_10_0 + 0.885416666666666*G26_1_10_1 - 1.48809523809523*G26_1_11_0 - 1.48809523809523*G26_1_12_1 - 0.066964285714285*G26_1_13_0 - 2.34374999999999*G26_1_13_1 - 2.34374999999999*G26_1_14_0 - 0.0669642857142802*G26_1_14_1 - 1.40624999999999*G26_1_15_0 - 1.80803571428571*G26_1_15_1 + 2.34374999999999*G26_1_16_0 + 2.41071428571427*G26_1_16_1 - 1.8080357142857*G26_1_17_0 - 1.40624999999998*G26_1_17_1 + 2.41071428571427*G26_1_18_0 + 2.34374999999997*G26_1_18_1 + 1.47321428571428*G26_1_19_0 + 1.47321428571429*G26_1_19_1 + 2.97619047619048*G26_2_10_0 + 2.97619047619049*G26_2_10_1 - 2.97619047619046*G26_2_11_0 - 2.97099957183873e-14*G26_2_11_1 - 17.7083333333333*G26_2_12_1 + 12.0535714285714*G26_2_13_0 + 4.2410519540681e-14*G26_2_13_1 - 32.142857142857*G26_2_14_0 - 5.35714285714283*G26_2_14_1 - 12.0535714285714*G26_2_15_0 - 12.0535714285714*G26_2_15_1 + 32.142857142857*G26_2_16_0 + 26.7857142857141*G26_2_16_1 - 1.41275879883551e-14*G26_2_17_0 + 2.56183962932255e-14*G26_2_17_1 - 5.52058398994859e-14*G26_2_18_1 + 2.75335310107039e-14*G26_2_19_0 + 5.3571428571429*G26_2_19_1 - 1.40625000000001*G26_3_10_0 - 1.40624999999999*G26_3_10_1 - 2.61160714285713*G26_3_11_0 + 1.35391918221664e-14*G26_3_11_1 + 6.02678571428567*G26_3_12_1 - 6.0267857142857*G26_3_13_0 - 7.63392857142858*G26_3_13_1 + 12.0535714285714*G26_3_14_0 + 5.02232142857141*G26_3_14_1 + 6.02678571428568*G26_3_15_0 + 6.42857142857136*G26_3_15_1 - 12.0535714285714*G26_3_16_0 - 11.0491071428571*G26_3_16_1 + 0.200892857142874*G26_3_17_0 - 0.200892857142836*G26_3_17_1 + 3.81696428571426*G26_3_18_0 + 7.63392857142854*G26_3_18_1 + 2.40918396343659e-14*G26_3_19_0 - 4.82142857142853*G26_3_19_1 + 2.34375000000001*G26_4_10_0 + 2.34375*G26_4_10_1 - 0.334821428571427*G26_4_11_0 - 1.92814567601709e-14*G26_4_11_1 - 13.3928571428571*G26_4_12_1 + 12.0535714285714*G26_4_13_0 + 5.02232142857145*G26_4_13_1 - 24.1071428571427*G26_4_14_0 - 4.01785714285715*G26_4_14_1 - 12.0535714285714*G26_4_15_0 - 11.0491071428571*G26_4_15_1 + 24.1071428571427*G26_4_16_0 + 22.0982142857141*G26_4_16_1 - 1.0044642857143*G26_4_17_0 - 2.00892857142858*G26_4_17_1 - 1.00446428571428*G26_4_18_0 - 5.02232142857142*G26_4_18_1 + 1.50990331349021e-14*G26_4_19_0 + 6.02678571428571*G26_4_19_1 + 2.61160714285713*G26_5_10_0 + 2.61160714285714*G26_5_10_1 + 1.40624999999999*G26_5_11_0 + 6.02678571428568*G26_5_12_1 - 6.02678571428568*G26_5_13_0 + 0.401785714285682*G26_5_13_1 + 12.0535714285714*G26_5_14_0 + 1.00446428571431*G26_5_14_1 + 6.02678571428572*G26_5_15_0 - 1.60714285714286*G26_5_15_1 - 12.0535714285714*G26_5_16_0 - 7.03124999999996*G26_5_16_1 - 3.81696428571429*G26_5_17_0 + 3.81696428571427*G26_5_17_1 - 0.200892857142834*G26_5_18_0 - 0.401785714285704*G26_5_18_1 - 3.59087759527199e-14*G26_5_19_0 - 4.82142857142857*G26_5_19_1 + 0.334821428571435*G26_6_10_0 + 0.334821428571428*G26_6_10_1 - 2.34374999999999*G26_6_11_0 - 1.70225338966387e-14*G26_6_11_1 - 13.3928571428571*G26_6_12_1 + 12.0535714285714*G26_6_13_0 + 1.00446428571433*G26_6_13_1 - 24.1071428571427*G26_6_14_0 - 2.00892857142859*G26_6_14_1 - 12.0535714285714*G26_6_15_0 - 7.03124999999994*G26_6_15_1 + 24.1071428571427*G26_6_16_0 + 20.0892857142856*G26_6_16_1 + 1.00446428571429*G26_6_17_0 - 4.01785714285713*G26_6_17_1 + 1.00446428571427*G26_6_18_0 - 1.0044642857143*G26_6_18_1 + 2.25791607633141e-14*G26_6_19_0 + 6.02678571428572*G26_6_19_1 + 2.41071428571428*G26_7_10_0 + 2.41071428571429*G26_7_10_1 + 1.8080357142857*G26_7_11_0 - 0.200892857142844*G26_7_13_0 + 2.81249999999998*G26_7_13_1 + 1.00446428571428*G26_7_14_0 - 0.200892857142822*G26_7_14_1 + 3.81696428571428*G26_7_15_0 - 3.61607142857142*G26_7_15_1 - 1.00446428571429*G26_7_16_0 + 1.20535714285712*G26_7_16_1 - 3.16832064056749e-14*G26_7_17_0 + 7.43303571428568*G26_7_17_1 - 4.21874999999995*G26_7_18_0 - 2.8125*G26_7_18_1 - 3.61607142857143*G26_7_19_0 - 7.23214285714282*G26_7_19_1 - 1.80803571428572*G26_8_10_0 - 1.8080357142857*G26_8_10_1 - 2.41071428571427*G26_8_11_0 - 3.81696428571428*G26_8_13_0 - 7.4330357142857*G26_8_13_1 + 1.00446428571428*G26_8_14_0 + 2.20982142857144*G26_8_14_1 + 0.200892857142852*G26_8_15_0 + 3.01339285714282*G26_8_15_1 - 1.00446428571428*G26_8_16_0 - 1.20535714285715*G26_8_16_1 + 4.21875000000001*G26_8_17_0 + 1.40625000000003*G26_8_17_1 - 2.10084770760344e-14*G26_8_18_0 + 7.43303571428565*G26_8_18_1 + 3.61607142857143*G26_8_19_0 - 3.61607142857139*G26_8_19_1 + 1.47321428571428*G26_9_10_0 + 1.47321428571429*G26_9_10_1 - 1.47321428571428*G26_9_11_0 - 2.67857142857143*G26_9_12_1 - 3.3285874057043e-14*G26_9_13_0 - 4.82142857142859*G26_9_13_1 + 6.02678571428571*G26_9_14_1 + 2.48481790698918e-14*G26_9_15_0 - 4.82142857142857*G26_9_15_1 + 6.02678571428567*G26_9_16_1 + 3.61607142857142*G26_9_17_0 + 8.43750000000001*G26_9_17_1 - 3.61607142857142*G26_9_18_0 + 4.82142857142853*G26_9_18_1 - 14.4642857142856*G26_9_19_1 + 1.48809523809523*G27_10_10_0 + 1.48809523809523*G27_10_10_1 - 0.885416666666663*G27_10_11_0 - 1.48809523809523*G27_10_12_1 + 1.40624999999999*G27_10_13_0 - 0.401785714285714*G27_10_13_1 - 2.34374999999999*G27_10_14_0 + 0.0669642857142922*G27_10_14_1 + 0.0669642857142833*G27_10_15_0 - 2.27678571428571*G27_10_15_1 + 2.34374999999999*G27_10_16_0 + 2.27678571428569*G27_10_16_1 - 2.41071428571428*G27_10_17_0 - 0.0669642857142852*G27_10_17_1 + 1.80803571428571*G27_10_18_0 + 0.401785714285707*G27_10_18_1 - 1.47321428571427*G27_10_19_0 + 1.08871245352304e-14*G27_10_19_1 + 0.885416666666662*G27_11_10_0 + 0.885416666666666*G27_11_10_1 - 1.48809523809523*G27_11_11_0 - 1.48809523809523*G27_11_12_1 - 0.066964285714285*G27_11_13_0 - 2.34374999999999*G27_11_13_1 - 2.34374999999999*G27_11_14_0 - 0.0669642857142802*G27_11_14_1 - 1.40624999999999*G27_11_15_0 - 1.80803571428571*G27_11_15_1 + 2.34374999999999*G27_11_16_0 + 2.41071428571427*G27_11_16_1 - 1.8080357142857*G27_11_17_0 - 1.40624999999998*G27_11_17_1 + 2.41071428571427*G27_11_18_0 + 2.34374999999997*G27_11_18_1 + 1.47321428571428*G27_11_19_0 + 1.47321428571429*G27_11_19_1 + 2.97619047619048*G27_12_10_0 + 2.97619047619049*G27_12_10_1 - 2.97619047619046*G27_12_11_0 - 2.97099957183873e-14*G27_12_11_1 - 17.7083333333333*G27_12_12_1 + 12.0535714285714*G27_12_13_0 + 4.2410519540681e-14*G27_12_13_1 - 32.142857142857*G27_12_14_0 - 5.35714285714283*G27_12_14_1 - 12.0535714285714*G27_12_15_0 - 12.0535714285714*G27_12_15_1 + 32.142857142857*G27_12_16_0 + 26.7857142857141*G27_12_16_1 - 1.41275879883551e-14*G27_12_17_0 + 2.56183962932255e-14*G27_12_17_1 - 5.52058398994859e-14*G27_12_18_1 + 2.75335310107039e-14*G27_12_19_0 + 5.3571428571429*G27_12_19_1 - 1.40625000000001*G27_13_10_0 - 1.40624999999999*G27_13_10_1 - 2.61160714285713*G27_13_11_0 + 1.35391918221664e-14*G27_13_11_1 + 6.02678571428567*G27_13_12_1 - 6.0267857142857*G27_13_13_0 - 7.63392857142858*G27_13_13_1 + 12.0535714285714*G27_13_14_0 + 5.02232142857141*G27_13_14_1 + 6.02678571428568*G27_13_15_0 + 6.42857142857136*G27_13_15_1 - 12.0535714285714*G27_13_16_0 - 11.0491071428571*G27_13_16_1 + 0.200892857142874*G27_13_17_0 - 0.200892857142836*G27_13_17_1 + 3.81696428571426*G27_13_18_0 + 7.63392857142854*G27_13_18_1 + 2.40918396343659e-14*G27_13_19_0 - 4.82142857142853*G27_13_19_1 + 2.34375000000001*G27_14_10_0 + 2.34375*G27_14_10_1 - 0.334821428571427*G27_14_11_0 - 1.92814567601709e-14*G27_14_11_1 - 13.3928571428571*G27_14_12_1 + 12.0535714285714*G27_14_13_0 + 5.02232142857145*G27_14_13_1 - 24.1071428571427*G27_14_14_0 - 4.01785714285715*G27_14_14_1 - 12.0535714285714*G27_14_15_0 - 11.0491071428571*G27_14_15_1 + 24.1071428571427*G27_14_16_0 + 22.0982142857141*G27_14_16_1 - 1.0044642857143*G27_14_17_0 - 2.00892857142858*G27_14_17_1 - 1.00446428571428*G27_14_18_0 - 5.02232142857142*G27_14_18_1 + 1.50990331349021e-14*G27_14_19_0 + 6.02678571428571*G27_14_19_1 + 2.61160714285713*G27_15_10_0 + 2.61160714285714*G27_15_10_1 + 1.40624999999999*G27_15_11_0 + 6.02678571428568*G27_15_12_1 - 6.02678571428568*G27_15_13_0 + 0.401785714285682*G27_15_13_1 + 12.0535714285714*G27_15_14_0 + 1.00446428571431*G27_15_14_1 + 6.02678571428572*G27_15_15_0 - 1.60714285714286*G27_15_15_1 - 12.0535714285714*G27_15_16_0 - 7.03124999999996*G27_15_16_1 - 3.81696428571429*G27_15_17_0 + 3.81696428571427*G27_15_17_1 - 0.200892857142834*G27_15_18_0 - 0.401785714285704*G27_15_18_1 - 3.59087759527199e-14*G27_15_19_0 - 4.82142857142857*G27_15_19_1 + 0.334821428571435*G27_16_10_0 + 0.334821428571428*G27_16_10_1 - 2.34374999999999*G27_16_11_0 - 1.70225338966387e-14*G27_16_11_1 - 13.3928571428571*G27_16_12_1 + 12.0535714285714*G27_16_13_0 + 1.00446428571433*G27_16_13_1 - 24.1071428571427*G27_16_14_0 - 2.00892857142859*G27_16_14_1 - 12.0535714285714*G27_16_15_0 - 7.03124999999994*G27_16_15_1 + 24.1071428571427*G27_16_16_0 + 20.0892857142856*G27_16_16_1 + 1.00446428571429*G27_16_17_0 - 4.01785714285713*G27_16_17_1 + 1.00446428571427*G27_16_18_0 - 1.0044642857143*G27_16_18_1 + 2.25791607633141e-14*G27_16_19_0 + 6.02678571428572*G27_16_19_1 + 2.41071428571428*G27_17_10_0 + 2.41071428571429*G27_17_10_1 + 1.8080357142857*G27_17_11_0 - 0.200892857142844*G27_17_13_0 + 2.81249999999998*G27_17_13_1 + 1.00446428571428*G27_17_14_0 - 0.200892857142822*G27_17_14_1 + 3.81696428571428*G27_17_15_0 - 3.61607142857142*G27_17_15_1 - 1.00446428571429*G27_17_16_0 + 1.20535714285712*G27_17_16_1 - 3.16832064056749e-14*G27_17_17_0 + 7.43303571428568*G27_17_17_1 - 4.21874999999995*G27_17_18_0 - 2.8125*G27_17_18_1 - 3.61607142857143*G27_17_19_0 - 7.23214285714282*G27_17_19_1 - 1.80803571428572*G27_18_10_0 - 1.8080357142857*G27_18_10_1 - 2.41071428571427*G27_18_11_0 - 3.81696428571428*G27_18_13_0 - 7.4330357142857*G27_18_13_1 + 1.00446428571428*G27_18_14_0 + 2.20982142857144*G27_18_14_1 + 0.200892857142852*G27_18_15_0 + 3.01339285714282*G27_18_15_1 - 1.00446428571428*G27_18_16_0 - 1.20535714285715*G27_18_16_1 + 4.21875000000001*G27_18_17_0 + 1.40625000000003*G27_18_17_1 - 2.10084770760344e-14*G27_18_18_0 + 7.43303571428565*G27_18_18_1 + 3.61607142857143*G27_18_19_0 - 3.61607142857139*G27_18_19_1 + 1.47321428571428*G27_19_10_0 + 1.47321428571429*G27_19_10_1 - 1.47321428571428*G27_19_11_0 - 2.67857142857143*G27_19_12_1 - 3.3285874057043e-14*G27_19_13_0 - 4.82142857142859*G27_19_13_1 + 6.02678571428571*G27_19_14_1 + 2.48481790698918e-14*G27_19_15_0 - 4.82142857142857*G27_19_15_1 + 6.02678571428567*G27_19_16_1 + 3.61607142857142*G27_19_17_0 + 8.43750000000001*G27_19_17_1 - 3.61607142857142*G27_19_18_0 + 4.82142857142853*G27_19_18_1 - 14.4642857142856*G27_19_19_1;
    A[13] = -0.0749999999999957*G0_0_0_0 - 0.0749999999999997*G0_0_0_1 + 0.0749999999999988*G0_0_1_0 - 0.599999999999996*G0_0_2_1 + 3.37499999999999*G0_0_3_0 + 1.6875*G0_0_3_1 - 0.674999999999998*G0_0_4_0 + 1.68749999999998*G0_0_4_1 + 0.675000000000001*G0_0_5_0 + 0.337500000000003*G0_0_5_1 + 0.674999999999998*G0_0_6_0 + 0.337500000000005*G0_0_6_1 + 0.337499999999988*G0_0_7_1 - 1.68749999999999*G0_0_8_1 - 4.04999999999999*G0_0_9_0 - 2.025*G0_0_9_1 - 0.0749999999999985*G0_1_0_0 - 0.0750000000000046*G0_1_0_1 + 1.42499999999999*G0_1_1_0 + 0.0750000000000016*G0_1_2_1 + 1.6875*G0_1_3_0 + 3.375*G0_1_3_1 - 0.337500000000006*G0_1_4_0 - 0.675000000000011*G0_1_4_1 + 0.337499999999999*G0_1_5_0 + 1.73064687580826e-14*G0_1_5_1 + 0.337500000000005*G0_1_6_0 + 0.33749999999999*G0_1_7_0 + 0.674999999999976*G0_1_7_1 - 1.68749999999998*G0_1_8_0 - 3.37499999999998*G0_1_8_1 - 2.025*G0_1_9_0 - 0.0749999999999957*G1_0_10_0 - 0.0749999999999997*G1_0_10_1 + 0.0749999999999988*G1_0_11_0 - 0.599999999999996*G1_0_12_1 + 3.37499999999999*G1_0_13_0 + 1.6875*G1_0_13_1 - 0.674999999999998*G1_0_14_0 + 1.68749999999998*G1_0_14_1 + 0.675000000000001*G1_0_15_0 + 0.337500000000003*G1_0_15_1 + 0.674999999999998*G1_0_16_0 + 0.337500000000005*G1_0_16_1 + 0.337499999999988*G1_0_17_1 - 1.68749999999999*G1_0_18_1 - 4.04999999999999*G1_0_19_0 - 2.025*G1_0_19_1 - 0.0749999999999985*G1_1_10_0 - 0.0750000000000046*G1_1_10_1 + 1.42499999999999*G1_1_11_0 + 0.0750000000000016*G1_1_12_1 + 1.6875*G1_1_13_0 + 3.375*G1_1_13_1 - 0.337500000000006*G1_1_14_0 - 0.675000000000011*G1_1_14_1 + 0.337499999999999*G1_1_15_0 + 1.73064687580826e-14*G1_1_15_1 + 0.337500000000005*G1_1_16_0 + 0.33749999999999*G1_1_17_0 + 0.674999999999976*G1_1_17_1 - 1.68749999999998*G1_1_18_0 - 3.37499999999998*G1_1_18_1 - 2.025*G1_1_19_0 + 0.0374999999999978*G2_0_0_0 + 0.0374999999999999*G2_0_0_1 - 0.0374999999999994*G2_0_1_0 + 0.299999999999998*G2_0_2_1 - 1.6875*G2_0_3_0 - 0.843750000000001*G2_0_3_1 + 0.337499999999999*G2_0_4_0 - 0.843749999999991*G2_0_4_1 - 0.3375*G2_0_5_0 - 0.168750000000002*G2_0_5_1 - 0.337499999999999*G2_0_6_0 - 0.168750000000003*G2_0_6_1 - 0.168749999999994*G2_0_7_1 + 0.843749999999993*G2_0_8_1 + 2.025*G2_0_9_0 + 1.0125*G2_0_9_1 + 0.0374999999999992*G2_1_0_0 + 0.0375000000000023*G2_1_0_1 - 0.712499999999996*G2_1_1_0 - 0.0375000000000008*G2_1_2_1 - 0.843750000000001*G2_1_3_0 - 1.6875*G2_1_3_1 + 0.168750000000003*G2_1_4_0 + 0.337500000000006*G2_1_4_1 - 0.168749999999999*G2_1_5_0 - 0.168750000000003*G2_1_6_0 - 0.168749999999995*G2_1_7_0 - 0.337499999999988*G2_1_7_1 + 0.843749999999992*G2_1_8_0 + 1.68749999999999*G2_1_8_1 + 1.0125*G2_1_9_0 + 0.0374999999999978*G3_0_10_0 + 0.0374999999999999*G3_0_10_1 - 0.0374999999999994*G3_0_11_0 + 0.299999999999998*G3_0_12_1 - 1.6875*G3_0_13_0 - 0.843750000000001*G3_0_13_1 + 0.337499999999999*G3_0_14_0 - 0.843749999999991*G3_0_14_1 - 0.3375*G3_0_15_0 - 0.168750000000002*G3_0_15_1 - 0.337499999999999*G3_0_16_0 - 0.168750000000003*G3_0_16_1 - 0.168749999999994*G3_0_17_1 + 0.843749999999993*G3_0_18_1 + 2.025*G3_0_19_0 + 1.0125*G3_0_19_1 + 0.0374999999999992*G3_1_10_0 + 0.0375000000000023*G3_1_10_1 - 0.712499999999996*G3_1_11_0 - 0.0375000000000008*G3_1_12_1 - 0.843750000000001*G3_1_13_0 - 1.6875*G3_1_13_1 + 0.168750000000003*G3_1_14_0 + 0.337500000000006*G3_1_14_1 - 0.168749999999999*G3_1_15_0 - 0.168750000000003*G3_1_16_0 - 0.168749999999995*G3_1_17_0 - 0.337499999999988*G3_1_17_1 + 0.843749999999992*G3_1_18_0 + 1.68749999999999*G3_1_18_1 + 1.0125*G3_1_19_0 - 0.0749999999999957*G14_0_10_0 - 0.0749999999999997*G14_0_10_1 + 0.0749999999999988*G14_0_11_0 - 0.599999999999996*G14_0_12_1 + 3.37499999999999*G14_0_13_0 + 1.6875*G14_0_13_1 - 0.674999999999998*G14_0_14_0 + 1.68749999999998*G14_0_14_1 + 0.675000000000001*G14_0_15_0 + 0.337500000000003*G14_0_15_1 + 0.674999999999998*G14_0_16_0 + 0.337500000000005*G14_0_16_1 + 0.337499999999988*G14_0_17_1 - 1.68749999999999*G14_0_18_1 - 4.04999999999999*G14_0_19_0 - 2.025*G14_0_19_1 - 0.0749999999999985*G14_1_10_0 - 0.0750000000000046*G14_1_10_1 + 1.42499999999999*G14_1_11_0 + 0.0750000000000016*G14_1_12_1 + 1.6875*G14_1_13_0 + 3.375*G14_1_13_1 - 0.337500000000006*G14_1_14_0 - 0.675000000000011*G14_1_14_1 + 0.337499999999999*G14_1_15_0 + 1.73064687580826e-14*G14_1_15_1 + 0.337500000000005*G14_1_16_0 + 0.33749999999999*G14_1_17_0 + 0.674999999999976*G14_1_17_1 - 1.68749999999998*G14_1_18_0 - 3.37499999999998*G14_1_18_1 - 2.025*G14_1_19_0 - 0.0749999999999957*G15_0_10_0 - 0.0749999999999997*G15_0_10_1 + 0.0749999999999988*G15_0_11_0 - 0.599999999999996*G15_0_12_1 + 3.37499999999999*G15_0_13_0 + 1.6875*G15_0_13_1 - 0.674999999999998*G15_0_14_0 + 1.68749999999998*G15_0_14_1 + 0.675000000000001*G15_0_15_0 + 0.337500000000003*G15_0_15_1 + 0.674999999999998*G15_0_16_0 + 0.337500000000005*G15_0_16_1 + 0.337499999999988*G15_0_17_1 - 1.68749999999999*G15_0_18_1 - 4.04999999999999*G15_0_19_0 - 2.025*G15_0_19_1 - 0.0749999999999985*G15_1_10_0 - 0.0750000000000046*G15_1_10_1 + 1.42499999999999*G15_1_11_0 + 0.0750000000000016*G15_1_12_1 + 1.6875*G15_1_13_0 + 3.375*G15_1_13_1 - 0.337500000000006*G15_1_14_0 - 0.675000000000011*G15_1_14_1 + 0.337499999999999*G15_1_15_0 + 1.73064687580826e-14*G15_1_15_1 + 0.337500000000005*G15_1_16_0 + 0.33749999999999*G15_1_17_0 + 0.674999999999976*G15_1_17_1 - 1.68749999999998*G15_1_18_0 - 3.37499999999998*G15_1_18_1 - 2.025*G15_1_19_0 + 0.0749999999999998*G16_0_20 - 0.075*G16_0_21 + 0.149999999999999*G16_0_22 - 0.599999999999998*G16_0_23 - 0.299999999999999*G16_0_25 + 0.074999999999999*G16_1_20 - 0.3*G16_1_21 + 0.0750000000000004*G16_1_22 - 0.299999999999999*G16_1_23 - 0.3*G16_1_25 + 0.0374999999999978*G17_0_10_0 + 0.0374999999999999*G17_0_10_1 - 0.0374999999999994*G17_0_11_0 + 0.299999999999998*G17_0_12_1 - 1.6875*G17_0_13_0 - 0.843750000000001*G17_0_13_1 + 0.337499999999999*G17_0_14_0 - 0.843749999999991*G17_0_14_1 - 0.3375*G17_0_15_0 - 0.168750000000002*G17_0_15_1 - 0.337499999999999*G17_0_16_0 - 0.168750000000003*G17_0_16_1 - 0.168749999999994*G17_0_17_1 + 0.843749999999993*G17_0_18_1 + 2.025*G17_0_19_0 + 1.0125*G17_0_19_1 + 0.0374999999999992*G17_1_10_0 + 0.0375000000000023*G17_1_10_1 - 0.712499999999996*G17_1_11_0 - 0.0375000000000008*G17_1_12_1 - 0.843750000000001*G17_1_13_0 - 1.6875*G17_1_13_1 + 0.168750000000003*G17_1_14_0 + 0.337500000000006*G17_1_14_1 - 0.168749999999999*G17_1_15_0 - 0.168750000000003*G17_1_16_0 - 0.168749999999995*G17_1_17_0 - 0.337499999999988*G17_1_17_1 + 0.843749999999992*G17_1_18_0 + 1.68749999999999*G17_1_18_1 + 1.0125*G17_1_19_0 + 0.0374999999999978*G18_0_10_0 + 0.0374999999999999*G18_0_10_1 - 0.0374999999999994*G18_0_11_0 + 0.299999999999998*G18_0_12_1 - 1.6875*G18_0_13_0 - 0.843750000000001*G18_0_13_1 + 0.337499999999999*G18_0_14_0 - 0.843749999999991*G18_0_14_1 - 0.3375*G18_0_15_0 - 0.168750000000002*G18_0_15_1 - 0.337499999999999*G18_0_16_0 - 0.168750000000003*G18_0_16_1 - 0.168749999999994*G18_0_17_1 + 0.843749999999993*G18_0_18_1 + 2.025*G18_0_19_0 + 1.0125*G18_0_19_1 + 0.0374999999999992*G18_1_10_0 + 0.0375000000000023*G18_1_10_1 - 0.712499999999996*G18_1_11_0 - 0.0375000000000008*G18_1_12_1 - 0.843750000000001*G18_1_13_0 - 1.6875*G18_1_13_1 + 0.168750000000003*G18_1_14_0 + 0.337500000000006*G18_1_14_1 - 0.168749999999999*G18_1_15_0 - 0.168750000000003*G18_1_16_0 - 0.168749999999995*G18_1_17_0 - 0.337499999999988*G18_1_17_1 + 0.843749999999992*G18_1_18_0 + 1.68749999999999*G18_1_18_1 + 1.0125*G18_1_19_0 - 0.0374999999999999*G19_0_20 + 0.0375*G19_0_21 - 0.0749999999999997*G19_0_22 + 0.299999999999999*G19_0_23 + 0.149999999999999*G19_0_25 - 0.0374999999999995*G19_1_20 + 0.15*G19_1_21 - 0.0375000000000002*G19_1_22 + 0.149999999999999*G19_1_23 + 0.15*G19_1_25 + 1.73611125475759e-14*G22_0_10_0 + 4.82142857142854*G22_0_11_0 - 3.6160714285714*G22_0_12_1 + 14.8660714285714*G22_0_13_0 + 14.8660714285714*G22_0_13_1 - 5.62499999999996*G22_0_14_0 + 2.81249999999994*G22_0_14_1 - 0.40178571428572*G22_0_15_0 - 2.41071428571423*G22_0_15_1 + 5.62499999999996*G22_0_16_0 + 6.02678571428571*G22_0_16_1 + 2.41071428571423*G22_0_17_0 + 4.41964285714275*G22_0_17_1 - 7.23214285714279*G22_0_18_0 - 14.8660714285713*G22_0_18_1 - 14.4642857142857*G22_0_19_0 - 7.23214285714287*G22_0_19_1 - 4.68749999999992*G22_1_10_0 - 4.68749999999998*G22_1_10_1 + 26.7857142857141*G22_1_11_0 - 5.65961111668246e-14*G22_1_11_1 + 0.66964285714289*G22_1_12_1 + 8.03571428571423*G22_1_13_0 + 48.2142857142855*G22_1_13_1 - 10.0446428571428*G22_1_14_0 - 24.1071428571428*G22_1_14_1 + 4.0178571428571*G22_1_15_0 + 2.00892857142869*G22_1_15_1 + 10.0446428571428*G22_1_16_0 + 2.00892857142851*G22_1_16_1 + 22.098214285714*G22_1_17_0 + 24.1071428571426*G22_1_17_1 - 44.1964285714282*G22_1_18_0 - 48.2142857142853*G22_1_18_1 - 12.0535714285713*G22_1_19_0 - 3.54993812123894e-14*G22_1_19_1 + 2.81250000000001*G22_2_10_0 + 2.81249999999998*G22_2_10_1 + 5.22321428571427*G22_2_11_0 - 2.70783836443327e-14*G22_2_11_1 - 12.0535714285713*G22_2_12_1 + 12.0535714285714*G22_2_13_0 + 15.2678571428572*G22_2_13_1 - 24.1071428571427*G22_2_14_0 - 10.0446428571428*G22_2_14_1 - 12.0535714285714*G22_2_15_0 - 12.8571428571427*G22_2_15_1 + 24.1071428571427*G22_2_16_0 + 22.0982142857141*G22_2_16_1 - 0.401785714285747*G22_2_17_0 + 0.401785714285673*G22_2_17_1 - 7.63392857142853*G22_2_18_0 - 15.2678571428571*G22_2_18_1 - 5.08482145278322e-14*G22_2_19_0 + 9.64285714285706*G22_2_19_1 - 29.7321428571424*G22_3_10_0 - 29.7321428571428*G22_3_10_1 + 80.3571428571424*G22_3_11_0 - 6.42857142857127*G22_3_12_1 + 216.964285714285*G22_3_13_0 + 216.964285714285*G22_3_13_1 + 21.6964285714284*G22_3_14_0 + 108.482142857142*G22_3_14_1 + 43.392857142857*G22_3_15_0 + 28.9285714285718*G22_3_15_1 - 21.6964285714285*G22_3_16_0 + 7.23214285714365*G22_3_16_1 + 94.017857142856*G22_3_17_0 + 108.482142857141*G22_3_17_1 - 144.642857142856*G22_3_18_0 - 216.964285714284*G22_3_18_1 - 260.357142857142*G22_3_19_0 - 216.964285714285*G22_3_19_1 + 2.81249999999995*G22_4_10_0 + 2.81250000000007*G22_4_10_1 - 28.1249999999998*G22_4_11_0 - 4.37026712106702e-14*G22_4_11_1 - 28.1249999999999*G22_4_12_1 - 10.8482142857143*G22_4_13_0 - 54.2410714285712*G22_4_13_1 - 54.2410714285711*G22_4_14_0 - 10.848214285714*G22_4_14_1 - 10.8482142857143*G22_4_15_0 - 3.61607142857159*G22_4_15_1 + 54.2410714285712*G22_4_16_0 + 28.928571428571*G22_4_16_1 - 3.61607142857127*G22_4_17_0 - 10.8482142857139*G22_4_17_1 + 28.9285714285712*G22_4_18_0 + 54.2410714285708*G22_4_18_1 + 21.6964285714286*G22_4_19_0 + 21.6964285714288*G22_4_19_1 + 4.41964285714282*G22_5_10_0 + 4.41964285714285*G22_5_10_1 - 4.41964285714283*G22_5_11_0 + 13.6607142857142*G22_5_12_1 - 21.6964285714285*G22_5_13_0 - 14.4642857142857*G22_5_13_1 + 21.6964285714285*G22_5_14_0 - 3.61607142857131*G22_5_14_1 + 21.6964285714284*G22_5_15_0 + 7.23214285714274*G22_5_15_1 - 21.6964285714285*G22_5_16_0 - 25.3124999999999*G22_5_16_1 - 10.8482142857142*G22_5_17_0 + 3.61607142857148*G22_5_17_1 + 10.8482142857142*G22_5_18_0 + 14.4642857142856*G22_5_18_1 + 5.3179682879545e-14*G22_5_19_0 + 9.19611609084825e-14*G22_5_19_1 - 5.22321428571423*G22_6_10_0 - 5.22321428571418*G22_6_10_1 - 5.62499999999999*G22_6_11_0 - 9.45204329536158e-14*G22_6_11_1 - 20.0892857142856*G22_6_12_1 + 10.8482142857141*G22_6_13_0 - 3.61607142857139*G22_6_13_1 - 54.2410714285711*G22_6_14_0 - 25.3124999999998*G22_6_14_1 + 10.8482142857142*G22_6_15_0 + 18.080357142857*G22_6_15_1 + 54.2410714285711*G22_6_16_0 + 7.23214285714258*G22_6_16_1 + 10.8482142857142*G22_6_17_0 + 3.61607142857152*G22_6_17_1 + 2.23484425410092e-14*G22_6_18_0 + 3.61607142857131*G22_6_18_1 - 21.6964285714283*G22_6_19_0 + 21.6964285714287*G22_6_19_1 + 5.62499999999991*G22_7_10_0 + 5.62500000000002*G22_7_10_1 - 20.0892857142856*G22_7_11_0 + 1.12750864801972e-14*G22_7_11_1 + 5.22321428571421*G22_7_12_1 - 47.0089285714285*G22_7_13_0 - 54.2410714285714*G22_7_13_1 + 7.23214285714284*G22_7_14_0 - 10.848214285714*G22_7_14_1 + 3.61607142857139*G22_7_15_0 - 1.64202852703799e-13*G22_7_15_1 - 7.23214285714283*G22_7_16_0 - 10.8482142857144*G22_7_16_1 - 14.4642857142855*G22_7_17_0 - 10.848214285714*G22_7_17_1 + 28.9285714285713*G22_7_18_0 + 54.241071428571*G22_7_18_1 + 43.3928571428571*G22_7_19_0 + 21.6964285714287*G22_7_19_1 - 0.401785714285584*G22_8_10_0 - 0.40178571428581*G22_8_10_1 + 40.1785714285712*G22_8_11_0 - 1.70452359186991e-14*G22_8_11_1 + 0.401785714285846*G22_8_12_1 + 72.3214285714284*G22_8_13_0 + 108.482142857143*G22_8_13_1 - 3.61607142857141*G22_8_14_0 - 4.24635153428721e-13*G22_8_14_1 - 7.23214285714282*G22_8_15_0 - 10.8482142857139*G22_8_15_1 + 3.61607142857139*G22_8_16_0 + 10.8482142857145*G22_8_16_1 - 3.61607142857169*G22_8_17_0 - 6.38141666245429e-13*G22_8_17_1 - 36.1607142857139*G22_8_18_0 - 108.482142857142*G22_8_18_1 - 65.0892857142855*G22_8_19_0 - 3.85313309037016e-13*G22_8_19_1 - 2.41071428571407*G22_9_10_0 - 2.41071428571426*G22_9_10_1 + 24.1071428571427*G22_9_11_0 - 9.44335582115648e-14*G22_9_11_1 - 19.2857142857141*G22_9_12_1 + 130.178571428571*G22_9_13_0 + 108.482142857143*G22_9_13_1 - 43.392857142857*G22_9_14_0 + 21.6964285714282*G22_9_14_1 + 43.3928571428569*G22_9_15_0 + 21.6964285714286*G22_9_15_1 + 43.3928571428569*G22_9_16_0 + 2.40890640768043e-13*G22_9_16_1 - 4.12231880575487e-13*G22_9_17_0 + 21.6964285714279*G22_9_17_1 - 21.6964285714282*G22_9_18_0 - 108.482142857142*G22_9_18_1 - 173.571428571428*G22_9_19_0 - 43.3928571428573*G22_9_19_1 + 1.73611125475759e-14*G23_10_10_0 + 4.82142857142854*G23_10_11_0 - 3.6160714285714*G23_10_12_1 + 14.8660714285714*G23_10_13_0 + 14.8660714285714*G23_10_13_1 - 5.62499999999996*G23_10_14_0 + 2.81249999999994*G23_10_14_1 - 0.40178571428572*G23_10_15_0 - 2.41071428571423*G23_10_15_1 + 5.62499999999996*G23_10_16_0 + 6.02678571428571*G23_10_16_1 + 2.41071428571423*G23_10_17_0 + 4.41964285714275*G23_10_17_1 - 7.23214285714279*G23_10_18_0 - 14.8660714285713*G23_10_18_1 - 14.4642857142857*G23_10_19_0 - 7.23214285714287*G23_10_19_1 - 4.68749999999992*G23_11_10_0 - 4.68749999999998*G23_11_10_1 + 26.7857142857141*G23_11_11_0 - 5.65961111668246e-14*G23_11_11_1 + 0.66964285714289*G23_11_12_1 + 8.03571428571423*G23_11_13_0 + 48.2142857142855*G23_11_13_1 - 10.0446428571428*G23_11_14_0 - 24.1071428571428*G23_11_14_1 + 4.0178571428571*G23_11_15_0 + 2.00892857142869*G23_11_15_1 + 10.0446428571428*G23_11_16_0 + 2.00892857142851*G23_11_16_1 + 22.098214285714*G23_11_17_0 + 24.1071428571426*G23_11_17_1 - 44.1964285714282*G23_11_18_0 - 48.2142857142853*G23_11_18_1 - 12.0535714285713*G23_11_19_0 - 3.54993812123894e-14*G23_11_19_1 + 2.81250000000001*G23_12_10_0 + 2.81249999999998*G23_12_10_1 + 5.22321428571427*G23_12_11_0 - 2.70783836443327e-14*G23_12_11_1 - 12.0535714285713*G23_12_12_1 + 12.0535714285714*G23_12_13_0 + 15.2678571428572*G23_12_13_1 - 24.1071428571427*G23_12_14_0 - 10.0446428571428*G23_12_14_1 - 12.0535714285714*G23_12_15_0 - 12.8571428571427*G23_12_15_1 + 24.1071428571427*G23_12_16_0 + 22.0982142857141*G23_12_16_1 - 0.401785714285747*G23_12_17_0 + 0.401785714285673*G23_12_17_1 - 7.63392857142853*G23_12_18_0 - 15.2678571428571*G23_12_18_1 - 5.08482145278322e-14*G23_12_19_0 + 9.64285714285706*G23_12_19_1 - 29.7321428571424*G23_13_10_0 - 29.7321428571428*G23_13_10_1 + 80.3571428571424*G23_13_11_0 - 6.42857142857127*G23_13_12_1 + 216.964285714285*G23_13_13_0 + 216.964285714285*G23_13_13_1 + 21.6964285714284*G23_13_14_0 + 108.482142857142*G23_13_14_1 + 43.392857142857*G23_13_15_0 + 28.9285714285718*G23_13_15_1 - 21.6964285714285*G23_13_16_0 + 7.23214285714365*G23_13_16_1 + 94.017857142856*G23_13_17_0 + 108.482142857141*G23_13_17_1 - 144.642857142856*G23_13_18_0 - 216.964285714284*G23_13_18_1 - 260.357142857142*G23_13_19_0 - 216.964285714285*G23_13_19_1 + 2.81249999999995*G23_14_10_0 + 2.81250000000007*G23_14_10_1 - 28.1249999999998*G23_14_11_0 - 4.37026712106702e-14*G23_14_11_1 - 28.1249999999999*G23_14_12_1 - 10.8482142857143*G23_14_13_0 - 54.2410714285712*G23_14_13_1 - 54.2410714285711*G23_14_14_0 - 10.848214285714*G23_14_14_1 - 10.8482142857143*G23_14_15_0 - 3.61607142857159*G23_14_15_1 + 54.2410714285712*G23_14_16_0 + 28.928571428571*G23_14_16_1 - 3.61607142857127*G23_14_17_0 - 10.8482142857139*G23_14_17_1 + 28.9285714285712*G23_14_18_0 + 54.2410714285708*G23_14_18_1 + 21.6964285714286*G23_14_19_0 + 21.6964285714288*G23_14_19_1 + 4.41964285714282*G23_15_10_0 + 4.41964285714285*G23_15_10_1 - 4.41964285714283*G23_15_11_0 + 13.6607142857142*G23_15_12_1 - 21.6964285714285*G23_15_13_0 - 14.4642857142857*G23_15_13_1 + 21.6964285714285*G23_15_14_0 - 3.61607142857131*G23_15_14_1 + 21.6964285714284*G23_15_15_0 + 7.23214285714274*G23_15_15_1 - 21.6964285714285*G23_15_16_0 - 25.3124999999999*G23_15_16_1 - 10.8482142857142*G23_15_17_0 + 3.61607142857148*G23_15_17_1 + 10.8482142857142*G23_15_18_0 + 14.4642857142856*G23_15_18_1 + 5.3179682879545e-14*G23_15_19_0 + 9.19611609084825e-14*G23_15_19_1 - 5.22321428571423*G23_16_10_0 - 5.22321428571418*G23_16_10_1 - 5.62499999999999*G23_16_11_0 - 9.45204329536158e-14*G23_16_11_1 - 20.0892857142856*G23_16_12_1 + 10.8482142857141*G23_16_13_0 - 3.61607142857139*G23_16_13_1 - 54.2410714285711*G23_16_14_0 - 25.3124999999998*G23_16_14_1 + 10.8482142857142*G23_16_15_0 + 18.080357142857*G23_16_15_1 + 54.2410714285711*G23_16_16_0 + 7.23214285714258*G23_16_16_1 + 10.8482142857142*G23_16_17_0 + 3.61607142857152*G23_16_17_1 + 2.23484425410092e-14*G23_16_18_0 + 3.61607142857131*G23_16_18_1 - 21.6964285714283*G23_16_19_0 + 21.6964285714287*G23_16_19_1 + 5.62499999999991*G23_17_10_0 + 5.62500000000002*G23_17_10_1 - 20.0892857142856*G23_17_11_0 + 1.12750864801972e-14*G23_17_11_1 + 5.22321428571421*G23_17_12_1 - 47.0089285714285*G23_17_13_0 - 54.2410714285714*G23_17_13_1 + 7.23214285714284*G23_17_14_0 - 10.848214285714*G23_17_14_1 + 3.61607142857139*G23_17_15_0 - 1.64202852703799e-13*G23_17_15_1 - 7.23214285714283*G23_17_16_0 - 10.8482142857144*G23_17_16_1 - 14.4642857142855*G23_17_17_0 - 10.848214285714*G23_17_17_1 + 28.9285714285713*G23_17_18_0 + 54.241071428571*G23_17_18_1 + 43.3928571428571*G23_17_19_0 + 21.6964285714287*G23_17_19_1 - 0.401785714285584*G23_18_10_0 - 0.40178571428581*G23_18_10_1 + 40.1785714285712*G23_18_11_0 - 1.70452359186991e-14*G23_18_11_1 + 0.401785714285846*G23_18_12_1 + 72.3214285714284*G23_18_13_0 + 108.482142857143*G23_18_13_1 - 3.61607142857141*G23_18_14_0 - 4.24635153428721e-13*G23_18_14_1 - 7.23214285714282*G23_18_15_0 - 10.8482142857139*G23_18_15_1 + 3.61607142857139*G23_18_16_0 + 10.8482142857145*G23_18_16_1 - 3.61607142857169*G23_18_17_0 - 6.38141666245429e-13*G23_18_17_1 - 36.1607142857139*G23_18_18_0 - 108.482142857142*G23_18_18_1 - 65.0892857142855*G23_18_19_0 - 3.85313309037016e-13*G23_18_19_1 - 2.41071428571407*G23_19_10_0 - 2.41071428571426*G23_19_10_1 + 24.1071428571427*G23_19_11_0 - 9.44335582115648e-14*G23_19_11_1 - 19.2857142857141*G23_19_12_1 + 130.178571428571*G23_19_13_0 + 108.482142857143*G23_19_13_1 - 43.392857142857*G23_19_14_0 + 21.6964285714282*G23_19_14_1 + 43.3928571428569*G23_19_15_0 + 21.6964285714286*G23_19_15_1 + 43.3928571428569*G23_19_16_0 + 2.40890640768043e-13*G23_19_16_1 - 4.12231880575487e-13*G23_19_17_0 + 21.6964285714279*G23_19_17_1 - 21.6964285714282*G23_19_18_0 - 108.482142857142*G23_19_18_1 - 173.571428571428*G23_19_19_0 - 43.3928571428573*G23_19_19_1 - 2.41071428571427*G26_0_11_0 + 1.8080357142857*G26_0_12_1 - 7.43303571428569*G26_0_13_0 - 7.43303571428569*G26_0_13_1 + 2.81249999999998*G26_0_14_0 - 1.40624999999997*G26_0_14_1 + 0.20089285714286*G26_0_15_0 + 1.20535714285712*G26_0_15_1 - 2.81249999999998*G26_0_16_0 - 3.01339285714286*G26_0_16_1 - 1.20535714285712*G26_0_17_0 - 2.20982142857138*G26_0_17_1 + 3.6160714285714*G26_0_18_0 + 7.43303571428564*G26_0_18_1 + 7.23214285714283*G26_0_19_0 + 3.61607142857143*G26_0_19_1 + 2.34374999999996*G26_1_10_0 + 2.34374999999999*G26_1_10_1 - 13.392857142857*G26_1_11_0 + 2.82980555834123e-14*G26_1_11_1 - 0.334821428571445*G26_1_12_1 - 4.01785714285712*G26_1_13_0 - 24.1071428571428*G26_1_13_1 + 5.0223214285714*G26_1_14_0 + 12.0535714285714*G26_1_14_1 - 2.00892857142855*G26_1_15_0 - 1.00446428571435*G26_1_15_1 - 5.0223214285714*G26_1_16_0 - 1.00446428571425*G26_1_16_1 - 11.049107142857*G26_1_17_0 - 12.0535714285713*G26_1_17_1 + 22.0982142857141*G26_1_18_0 + 24.1071428571426*G26_1_18_1 + 6.02678571428567*G26_1_19_0 + 1.77496906061947e-14*G26_1_19_1 - 1.40625000000001*G26_2_10_0 - 1.40624999999999*G26_2_10_1 - 2.61160714285713*G26_2_11_0 + 1.35391918221664e-14*G26_2_11_1 + 6.02678571428567*G26_2_12_1 - 6.0267857142857*G26_2_13_0 - 7.63392857142858*G26_2_13_1 + 12.0535714285714*G26_2_14_0 + 5.02232142857141*G26_2_14_1 + 6.02678571428568*G26_2_15_0 + 6.42857142857136*G26_2_15_1 - 12.0535714285714*G26_2_16_0 - 11.0491071428571*G26_2_16_1 + 0.200892857142874*G26_2_17_0 - 0.200892857142836*G26_2_17_1 + 3.81696428571426*G26_2_18_0 + 7.63392857142854*G26_2_18_1 + 2.54241072639161e-14*G26_2_19_0 - 4.82142857142853*G26_2_19_1 + 14.8660714285712*G26_3_10_0 + 14.8660714285714*G26_3_10_1 - 40.1785714285712*G26_3_11_0 + 3.21428571428563*G26_3_12_1 - 108.482142857143*G26_3_13_0 - 108.482142857143*G26_3_13_1 - 10.8482142857142*G26_3_14_0 - 54.2410714285708*G26_3_14_1 - 21.6964285714285*G26_3_15_0 - 14.4642857142859*G26_3_15_1 + 10.8482142857142*G26_3_16_0 - 3.61607142857182*G26_3_16_1 - 47.008928571428*G26_3_17_0 - 54.2410714285705*G26_3_17_1 + 72.321428571428*G26_3_18_0 + 108.482142857142*G26_3_18_1 + 130.178571428571*G26_3_19_0 + 108.482142857143*G26_3_19_1 - 1.40624999999998*G26_4_10_0 - 1.40625000000003*G26_4_10_1 + 14.0624999999999*G26_4_11_0 + 2.18513356053351e-14*G26_4_11_1 + 14.0624999999999*G26_4_12_1 + 5.42410714285717*G26_4_13_0 + 27.1205357142856*G26_4_13_1 + 27.1205357142856*G26_4_14_0 + 5.42410714285702*G26_4_14_1 + 5.42410714285713*G26_4_15_0 + 1.80803571428579*G26_4_15_1 - 27.1205357142856*G26_4_16_0 - 14.4642857142855*G26_4_16_1 + 1.80803571428563*G26_4_17_0 + 5.42410714285694*G26_4_17_1 - 14.4642857142856*G26_4_18_0 - 27.1205357142854*G26_4_18_1 - 10.8482142857143*G26_4_19_0 - 10.8482142857144*G26_4_19_1 - 2.20982142857141*G26_5_10_0 - 2.20982142857143*G26_5_10_1 + 2.20982142857142*G26_5_11_0 - 6.83035714285709*G26_5_12_1 + 10.8482142857142*G26_5_13_0 + 7.23214285714286*G26_5_13_1 - 10.8482142857142*G26_5_14_0 + 1.80803571428566*G26_5_14_1 - 10.8482142857142*G26_5_15_0 - 3.61607142857137*G26_5_15_1 + 10.8482142857142*G26_5_16_0 + 12.6562499999999*G26_5_16_1 + 5.42410714285712*G26_5_17_0 - 1.80803571428574*G26_5_17_1 - 5.42410714285712*G26_5_18_0 - 7.23214285714279*G26_5_18_1 - 2.65898414397725e-14*G26_5_19_0 - 4.59805804542412e-14*G26_5_19_1 + 2.61160714285711*G26_6_10_0 + 2.61160714285709*G26_6_10_1 + 2.8125*G26_6_11_0 + 4.72602164768079e-14*G26_6_11_1 + 10.0446428571428*G26_6_12_1 - 5.42410714285707*G26_6_13_0 + 1.80803571428569*G26_6_13_1 + 27.1205357142856*G26_6_14_0 + 12.6562499999999*G26_6_14_1 - 5.42410714285708*G26_6_15_0 - 9.04017857142849*G26_6_15_1 - 27.1205357142856*G26_6_16_0 - 3.61607142857129*G26_6_16_1 - 5.4241071428571*G26_6_17_0 - 1.80803571428576*G26_6_17_1 - 1.11742212705046e-14*G26_6_18_0 - 1.80803571428565*G26_6_18_1 + 10.8482142857141*G26_6_19_0 - 10.8482142857143*G26_6_19_1 - 2.81249999999996*G26_7_10_0 - 2.81250000000001*G26_7_10_1 + 10.0446428571428*G26_7_11_0 - 2.61160714285711*G26_7_12_1 + 23.5044642857143*G26_7_13_0 + 27.1205357142857*G26_7_13_1 - 3.61607142857142*G26_7_14_0 + 5.42410714285702*G26_7_14_1 - 1.80803571428569*G26_7_15_0 + 8.21014263518993e-14*G26_7_15_1 + 3.61607142857141*G26_7_16_0 + 5.42410714285719*G26_7_16_1 + 7.23214285714277*G26_7_17_0 + 5.42410714285699*G26_7_17_1 - 14.4642857142856*G26_7_18_0 - 27.1205357142855*G26_7_18_1 - 21.6964285714286*G26_7_19_0 - 10.8482142857144*G26_7_19_1 + 0.200892857142792*G26_8_10_0 + 0.200892857142905*G26_8_10_1 - 20.0892857142856*G26_8_11_0 - 0.200892857142923*G26_8_12_1 - 36.1607142857142*G26_8_13_0 - 54.2410714285713*G26_8_13_1 + 1.8080357142857*G26_8_14_0 + 2.1231757671436e-13*G26_8_14_1 + 3.61607142857141*G26_8_15_0 + 5.42410714285693*G26_8_15_1 - 1.80803571428569*G26_8_16_0 - 5.42410714285723*G26_8_16_1 + 1.80803571428585*G26_8_17_0 + 3.19070833122714e-13*G26_8_17_1 + 18.080357142857*G26_8_18_0 + 54.2410714285709*G26_8_18_1 + 32.5446428571428*G26_8_19_0 + 1.92656654518508e-13*G26_8_19_1 + 1.20535714285704*G26_9_10_0 + 1.20535714285713*G26_9_10_1 - 12.0535714285713*G26_9_11_0 + 4.72167791057824e-14*G26_9_11_1 + 9.64285714285705*G26_9_12_1 - 65.0892857142856*G26_9_13_0 - 54.2410714285714*G26_9_13_1 + 21.6964285714285*G26_9_14_0 - 10.8482142857141*G26_9_14_1 - 21.6964285714284*G26_9_15_0 - 10.8482142857143*G26_9_15_1 - 21.6964285714285*G26_9_16_0 - 1.20445320384022e-13*G26_9_16_1 + 2.06115940287743e-13*G26_9_17_0 - 10.8482142857139*G26_9_17_1 + 10.8482142857141*G26_9_18_0 + 54.2410714285711*G26_9_18_1 + 86.785714285714*G26_9_19_0 + 21.6964285714286*G26_9_19_1 - 2.41071428571427*G27_10_11_0 + 1.8080357142857*G27_10_12_1 - 7.43303571428569*G27_10_13_0 - 7.43303571428569*G27_10_13_1 + 2.81249999999998*G27_10_14_0 - 1.40624999999997*G27_10_14_1 + 0.20089285714286*G27_10_15_0 + 1.20535714285712*G27_10_15_1 - 2.81249999999998*G27_10_16_0 - 3.01339285714286*G27_10_16_1 - 1.20535714285712*G27_10_17_0 - 2.20982142857138*G27_10_17_1 + 3.6160714285714*G27_10_18_0 + 7.43303571428564*G27_10_18_1 + 7.23214285714283*G27_10_19_0 + 3.61607142857143*G27_10_19_1 + 2.34374999999996*G27_11_10_0 + 2.34374999999999*G27_11_10_1 - 13.392857142857*G27_11_11_0 + 2.82980555834123e-14*G27_11_11_1 - 0.334821428571445*G27_11_12_1 - 4.01785714285712*G27_11_13_0 - 24.1071428571428*G27_11_13_1 + 5.0223214285714*G27_11_14_0 + 12.0535714285714*G27_11_14_1 - 2.00892857142855*G27_11_15_0 - 1.00446428571435*G27_11_15_1 - 5.0223214285714*G27_11_16_0 - 1.00446428571425*G27_11_16_1 - 11.049107142857*G27_11_17_0 - 12.0535714285713*G27_11_17_1 + 22.0982142857141*G27_11_18_0 + 24.1071428571426*G27_11_18_1 + 6.02678571428567*G27_11_19_0 + 1.77496906061947e-14*G27_11_19_1 - 1.40625000000001*G27_12_10_0 - 1.40624999999999*G27_12_10_1 - 2.61160714285713*G27_12_11_0 + 1.35391918221664e-14*G27_12_11_1 + 6.02678571428567*G27_12_12_1 - 6.0267857142857*G27_12_13_0 - 7.63392857142858*G27_12_13_1 + 12.0535714285714*G27_12_14_0 + 5.02232142857141*G27_12_14_1 + 6.02678571428568*G27_12_15_0 + 6.42857142857136*G27_12_15_1 - 12.0535714285714*G27_12_16_0 - 11.0491071428571*G27_12_16_1 + 0.200892857142874*G27_12_17_0 - 0.200892857142836*G27_12_17_1 + 3.81696428571426*G27_12_18_0 + 7.63392857142854*G27_12_18_1 + 2.54241072639161e-14*G27_12_19_0 - 4.82142857142853*G27_12_19_1 + 14.8660714285712*G27_13_10_0 + 14.8660714285714*G27_13_10_1 - 40.1785714285712*G27_13_11_0 + 3.21428571428563*G27_13_12_1 - 108.482142857143*G27_13_13_0 - 108.482142857143*G27_13_13_1 - 10.8482142857142*G27_13_14_0 - 54.2410714285708*G27_13_14_1 - 21.6964285714285*G27_13_15_0 - 14.4642857142859*G27_13_15_1 + 10.8482142857142*G27_13_16_0 - 3.61607142857182*G27_13_16_1 - 47.008928571428*G27_13_17_0 - 54.2410714285705*G27_13_17_1 + 72.321428571428*G27_13_18_0 + 108.482142857142*G27_13_18_1 + 130.178571428571*G27_13_19_0 + 108.482142857143*G27_13_19_1 - 1.40624999999998*G27_14_10_0 - 1.40625000000003*G27_14_10_1 + 14.0624999999999*G27_14_11_0 + 2.18513356053351e-14*G27_14_11_1 + 14.0624999999999*G27_14_12_1 + 5.42410714285717*G27_14_13_0 + 27.1205357142856*G27_14_13_1 + 27.1205357142856*G27_14_14_0 + 5.42410714285702*G27_14_14_1 + 5.42410714285713*G27_14_15_0 + 1.80803571428579*G27_14_15_1 - 27.1205357142856*G27_14_16_0 - 14.4642857142855*G27_14_16_1 + 1.80803571428563*G27_14_17_0 + 5.42410714285694*G27_14_17_1 - 14.4642857142856*G27_14_18_0 - 27.1205357142854*G27_14_18_1 - 10.8482142857143*G27_14_19_0 - 10.8482142857144*G27_14_19_1 - 2.20982142857141*G27_15_10_0 - 2.20982142857143*G27_15_10_1 + 2.20982142857142*G27_15_11_0 - 6.83035714285709*G27_15_12_1 + 10.8482142857142*G27_15_13_0 + 7.23214285714286*G27_15_13_1 - 10.8482142857142*G27_15_14_0 + 1.80803571428566*G27_15_14_1 - 10.8482142857142*G27_15_15_0 - 3.61607142857137*G27_15_15_1 + 10.8482142857142*G27_15_16_0 + 12.6562499999999*G27_15_16_1 + 5.42410714285712*G27_15_17_0 - 1.80803571428574*G27_15_17_1 - 5.42410714285712*G27_15_18_0 - 7.23214285714279*G27_15_18_1 - 2.65898414397725e-14*G27_15_19_0 - 4.59805804542412e-14*G27_15_19_1 + 2.61160714285711*G27_16_10_0 + 2.61160714285709*G27_16_10_1 + 2.8125*G27_16_11_0 + 4.72602164768079e-14*G27_16_11_1 + 10.0446428571428*G27_16_12_1 - 5.42410714285707*G27_16_13_0 + 1.80803571428569*G27_16_13_1 + 27.1205357142856*G27_16_14_0 + 12.6562499999999*G27_16_14_1 - 5.42410714285708*G27_16_15_0 - 9.04017857142849*G27_16_15_1 - 27.1205357142856*G27_16_16_0 - 3.61607142857129*G27_16_16_1 - 5.4241071428571*G27_16_17_0 - 1.80803571428576*G27_16_17_1 - 1.11742212705046e-14*G27_16_18_0 - 1.80803571428565*G27_16_18_1 + 10.8482142857141*G27_16_19_0 - 10.8482142857143*G27_16_19_1 - 2.81249999999996*G27_17_10_0 - 2.81250000000001*G27_17_10_1 + 10.0446428571428*G27_17_11_0 - 2.61160714285711*G27_17_12_1 + 23.5044642857143*G27_17_13_0 + 27.1205357142857*G27_17_13_1 - 3.61607142857142*G27_17_14_0 + 5.42410714285702*G27_17_14_1 - 1.80803571428569*G27_17_15_0 + 8.21014263518993e-14*G27_17_15_1 + 3.61607142857141*G27_17_16_0 + 5.42410714285719*G27_17_16_1 + 7.23214285714277*G27_17_17_0 + 5.42410714285699*G27_17_17_1 - 14.4642857142856*G27_17_18_0 - 27.1205357142855*G27_17_18_1 - 21.6964285714286*G27_17_19_0 - 10.8482142857144*G27_17_19_1 + 0.200892857142792*G27_18_10_0 + 0.200892857142905*G27_18_10_1 - 20.0892857142856*G27_18_11_0 - 0.200892857142923*G27_18_12_1 - 36.1607142857142*G27_18_13_0 - 54.2410714285713*G27_18_13_1 + 1.8080357142857*G27_18_14_0 + 2.1231757671436e-13*G27_18_14_1 + 3.61607142857141*G27_18_15_0 + 5.42410714285693*G27_18_15_1 - 1.80803571428569*G27_18_16_0 - 5.42410714285723*G27_18_16_1 + 1.80803571428585*G27_18_17_0 + 3.19070833122714e-13*G27_18_17_1 + 18.080357142857*G27_18_18_0 + 54.2410714285709*G27_18_18_1 + 32.5446428571428*G27_18_19_0 + 1.92656654518508e-13*G27_18_19_1 + 1.20535714285704*G27_19_10_0 + 1.20535714285713*G27_19_10_1 - 12.0535714285713*G27_19_11_0 + 4.72167791057824e-14*G27_19_11_1 + 9.64285714285705*G27_19_12_1 - 65.0892857142856*G27_19_13_0 - 54.2410714285714*G27_19_13_1 + 21.6964285714285*G27_19_14_0 - 10.8482142857141*G27_19_14_1 - 21.6964285714284*G27_19_15_0 - 10.8482142857143*G27_19_15_1 - 21.6964285714285*G27_19_16_0 - 1.20445320384022e-13*G27_19_16_1 + 2.06115940287743e-13*G27_19_17_0 - 10.8482142857139*G27_19_17_1 + 10.8482142857141*G27_19_18_0 + 54.2410714285711*G27_19_18_1 + 86.785714285714*G27_19_19_0 + 21.6964285714286*G27_19_19_1;
    A[14] = -0.0750000000000014*G0_0_0_0 - 0.0750000000000018*G0_0_0_1 + 0.0749999999999997*G0_0_1_0 + 1.42499999999999*G0_0_2_1 - 0.674999999999998*G0_0_3_0 - 0.337500000000006*G0_0_3_1 + 3.37499999999999*G0_0_4_0 + 1.68749999999999*G0_0_4_1 + 0.674999999999999*G0_0_5_0 + 0.337499999999997*G0_0_5_1 - 3.37499999999999*G0_0_6_0 - 1.68749999999998*G0_0_6_1 + 0.337499999999995*G0_0_7_1 + 0.337500000000006*G0_0_8_1 - 2.025*G0_0_9_1 - 0.0749999999999955*G0_1_0_0 - 0.0749999999999958*G0_1_0_1 - 0.6*G0_1_1_0 + 0.0749999999999967*G0_1_2_1 + 1.68749999999998*G0_1_3_0 - 0.675000000000011*G0_1_3_1 + 1.68749999999999*G0_1_4_0 + 3.37499999999998*G0_1_4_1 + 0.337500000000006*G0_1_5_0 - 1.68749999999999*G0_1_6_0 + 1.67227343084164e-14*G0_1_6_1 + 0.337499999999997*G0_1_7_0 + 0.675000000000003*G0_1_7_1 + 0.337499999999998*G0_1_8_0 + 0.675000000000012*G0_1_8_1 - 2.02499999999999*G0_1_9_0 - 4.05*G0_1_9_1 - 0.0750000000000014*G1_0_10_0 - 0.0750000000000018*G1_0_10_1 + 0.0749999999999997*G1_0_11_0 + 1.42499999999999*G1_0_12_1 - 0.674999999999998*G1_0_13_0 - 0.337500000000006*G1_0_13_1 + 3.37499999999999*G1_0_14_0 + 1.68749999999999*G1_0_14_1 + 0.674999999999999*G1_0_15_0 + 0.337499999999997*G1_0_15_1 - 3.37499999999999*G1_0_16_0 - 1.68749999999998*G1_0_16_1 + 0.337499999999995*G1_0_17_1 + 0.337500000000006*G1_0_18_1 - 2.025*G1_0_19_1 - 0.0749999999999955*G1_1_10_0 - 0.0749999999999958*G1_1_10_1 - 0.6*G1_1_11_0 + 0.0749999999999967*G1_1_12_1 + 1.68749999999998*G1_1_13_0 - 0.675000000000011*G1_1_13_1 + 1.68749999999999*G1_1_14_0 + 3.37499999999998*G1_1_14_1 + 0.337500000000006*G1_1_15_0 - 1.68749999999999*G1_1_16_0 + 1.67227343084164e-14*G1_1_16_1 + 0.337499999999997*G1_1_17_0 + 0.675000000000003*G1_1_17_1 + 0.337499999999998*G1_1_18_0 + 0.675000000000012*G1_1_18_1 - 2.02499999999999*G1_1_19_0 - 4.05*G1_1_19_1 + 0.0375000000000007*G2_0_0_0 + 0.0375000000000009*G2_0_0_1 - 0.0374999999999999*G2_0_1_0 - 0.712499999999997*G2_0_2_1 + 0.337499999999999*G2_0_3_0 + 0.168750000000003*G2_0_3_1 - 1.68749999999999*G2_0_4_0 - 0.843749999999996*G2_0_4_1 - 0.337499999999999*G2_0_5_0 - 0.168749999999998*G2_0_5_1 + 1.68749999999999*G2_0_6_0 + 0.84374999999999*G2_0_6_1 - 0.168749999999997*G2_0_7_1 - 0.168750000000003*G2_0_8_1 + 1.0125*G2_0_9_1 + 0.0374999999999977*G2_1_0_0 + 0.0374999999999979*G2_1_0_1 + 0.3*G2_1_1_0 - 0.0374999999999983*G2_1_2_1 - 0.843749999999991*G2_1_3_0 + 0.337500000000006*G2_1_3_1 - 0.843749999999996*G2_1_4_0 - 1.68749999999999*G2_1_4_1 - 0.168750000000003*G2_1_5_0 + 0.843749999999996*G2_1_6_0 - 0.168749999999998*G2_1_7_0 - 0.337500000000002*G2_1_7_1 - 0.168749999999999*G2_1_8_0 - 0.337500000000006*G2_1_8_1 + 1.01249999999999*G2_1_9_0 + 2.025*G2_1_9_1 + 0.0375000000000007*G3_0_10_0 + 0.0375000000000009*G3_0_10_1 - 0.0374999999999999*G3_0_11_0 - 0.712499999999997*G3_0_12_1 + 0.337499999999999*G3_0_13_0 + 0.168750000000003*G3_0_13_1 - 1.68749999999999*G3_0_14_0 - 0.843749999999996*G3_0_14_1 - 0.337499999999999*G3_0_15_0 - 0.168749999999998*G3_0_15_1 + 1.68749999999999*G3_0_16_0 + 0.84374999999999*G3_0_16_1 - 0.168749999999997*G3_0_17_1 - 0.168750000000003*G3_0_18_1 + 1.0125*G3_0_19_1 + 0.0374999999999977*G3_1_10_0 + 0.0374999999999979*G3_1_10_1 + 0.3*G3_1_11_0 - 0.0374999999999983*G3_1_12_1 - 0.843749999999991*G3_1_13_0 + 0.337500000000006*G3_1_13_1 - 0.843749999999996*G3_1_14_0 - 1.68749999999999*G3_1_14_1 - 0.168750000000003*G3_1_15_0 + 0.843749999999996*G3_1_16_0 - 0.168749999999998*G3_1_17_0 - 0.337500000000002*G3_1_17_1 - 0.168749999999999*G3_1_18_0 - 0.337500000000006*G3_1_18_1 + 1.01249999999999*G3_1_19_0 + 2.025*G3_1_19_1 - 0.0750000000000014*G14_0_10_0 - 0.0750000000000018*G14_0_10_1 + 0.0749999999999997*G14_0_11_0 + 1.42499999999999*G14_0_12_1 - 0.674999999999998*G14_0_13_0 - 0.337500000000006*G14_0_13_1 + 3.37499999999999*G14_0_14_0 + 1.68749999999999*G14_0_14_1 + 0.674999999999999*G14_0_15_0 + 0.337499999999997*G14_0_15_1 - 3.37499999999999*G14_0_16_0 - 1.68749999999998*G14_0_16_1 + 0.337499999999995*G14_0_17_1 + 0.337500000000006*G14_0_18_1 - 2.025*G14_0_19_1 - 0.0749999999999955*G14_1_10_0 - 0.0749999999999958*G14_1_10_1 - 0.6*G14_1_11_0 + 0.0749999999999967*G14_1_12_1 + 1.68749999999998*G14_1_13_0 - 0.675000000000011*G14_1_13_1 + 1.68749999999999*G14_1_14_0 + 3.37499999999998*G14_1_14_1 + 0.337500000000006*G14_1_15_0 - 1.68749999999999*G14_1_16_0 + 1.67227343084164e-14*G14_1_16_1 + 0.337499999999997*G14_1_17_0 + 0.675000000000003*G14_1_17_1 + 0.337499999999998*G14_1_18_0 + 0.675000000000012*G14_1_18_1 - 2.02499999999999*G14_1_19_0 - 4.05*G14_1_19_1 - 0.0750000000000014*G15_0_10_0 - 0.0750000000000018*G15_0_10_1 + 0.0749999999999997*G15_0_11_0 + 1.42499999999999*G15_0_12_1 - 0.674999999999998*G15_0_13_0 - 0.337500000000006*G15_0_13_1 + 3.37499999999999*G15_0_14_0 + 1.68749999999999*G15_0_14_1 + 0.674999999999999*G15_0_15_0 + 0.337499999999997*G15_0_15_1 - 3.37499999999999*G15_0_16_0 - 1.68749999999998*G15_0_16_1 + 0.337499999999995*G15_0_17_1 + 0.337500000000006*G15_0_18_1 - 2.025*G15_0_19_1 - 0.0749999999999955*G15_1_10_0 - 0.0749999999999958*G15_1_10_1 - 0.6*G15_1_11_0 + 0.0749999999999967*G15_1_12_1 + 1.68749999999998*G15_1_13_0 - 0.675000000000011*G15_1_13_1 + 1.68749999999999*G15_1_14_0 + 3.37499999999998*G15_1_14_1 + 0.337500000000006*G15_1_15_0 - 1.68749999999999*G15_1_16_0 + 1.67227343084164e-14*G15_1_16_1 + 0.337499999999997*G15_1_17_0 + 0.675000000000003*G15_1_17_1 + 0.337499999999998*G15_1_18_0 + 0.675000000000012*G15_1_18_1 - 2.02499999999999*G15_1_19_0 - 4.05*G15_1_19_1 + 0.0749999999999997*G16_0_20 + 0.0749999999999997*G16_0_21 - 0.299999999999999*G16_0_22 - 0.299999999999999*G16_0_23 - 0.299999999999999*G16_0_24 + 0.0750000000000002*G16_1_20 + 0.15*G16_1_21 - 0.0750000000000002*G16_1_22 - 0.599999999999995*G16_1_23 - 0.299999999999996*G16_1_24 + 0.0375000000000007*G17_0_10_0 + 0.0375000000000009*G17_0_10_1 - 0.0374999999999999*G17_0_11_0 - 0.712499999999997*G17_0_12_1 + 0.337499999999999*G17_0_13_0 + 0.168750000000003*G17_0_13_1 - 1.68749999999999*G17_0_14_0 - 0.843749999999996*G17_0_14_1 - 0.337499999999999*G17_0_15_0 - 0.168749999999998*G17_0_15_1 + 1.68749999999999*G17_0_16_0 + 0.84374999999999*G17_0_16_1 - 0.168749999999997*G17_0_17_1 - 0.168750000000003*G17_0_18_1 + 1.0125*G17_0_19_1 + 0.0374999999999977*G17_1_10_0 + 0.0374999999999979*G17_1_10_1 + 0.3*G17_1_11_0 - 0.0374999999999983*G17_1_12_1 - 0.843749999999991*G17_1_13_0 + 0.337500000000006*G17_1_13_1 - 0.843749999999996*G17_1_14_0 - 1.68749999999999*G17_1_14_1 - 0.168750000000003*G17_1_15_0 + 0.843749999999996*G17_1_16_0 - 0.168749999999998*G17_1_17_0 - 0.337500000000002*G17_1_17_1 - 0.168749999999999*G17_1_18_0 - 0.337500000000006*G17_1_18_1 + 1.01249999999999*G17_1_19_0 + 2.025*G17_1_19_1 + 0.0375000000000007*G18_0_10_0 + 0.0375000000000009*G18_0_10_1 - 0.0374999999999999*G18_0_11_0 - 0.712499999999997*G18_0_12_1 + 0.337499999999999*G18_0_13_0 + 0.168750000000003*G18_0_13_1 - 1.68749999999999*G18_0_14_0 - 0.843749999999996*G18_0_14_1 - 0.337499999999999*G18_0_15_0 - 0.168749999999998*G18_0_15_1 + 1.68749999999999*G18_0_16_0 + 0.84374999999999*G18_0_16_1 - 0.168749999999997*G18_0_17_1 - 0.168750000000003*G18_0_18_1 + 1.0125*G18_0_19_1 + 0.0374999999999977*G18_1_10_0 + 0.0374999999999979*G18_1_10_1 + 0.3*G18_1_11_0 - 0.0374999999999983*G18_1_12_1 - 0.843749999999991*G18_1_13_0 + 0.337500000000006*G18_1_13_1 - 0.843749999999996*G18_1_14_0 - 1.68749999999999*G18_1_14_1 - 0.168750000000003*G18_1_15_0 + 0.843749999999996*G18_1_16_0 - 0.168749999999998*G18_1_17_0 - 0.337500000000002*G18_1_17_1 - 0.168749999999999*G18_1_18_0 - 0.337500000000006*G18_1_18_1 + 1.01249999999999*G18_1_19_0 + 2.025*G18_1_19_1 - 0.0374999999999998*G19_0_20 - 0.0374999999999998*G19_0_21 + 0.149999999999999*G19_0_22 + 0.149999999999999*G19_0_23 + 0.149999999999999*G19_0_24 - 0.0375000000000001*G19_1_20 - 0.0749999999999998*G19_1_21 + 0.0375000000000001*G19_1_22 + 0.299999999999997*G19_1_23 + 0.149999999999998*G19_1_24 - 3.61607142857141*G22_0_11_0 + 2.62072575252402e-14*G22_0_11_1 + 4.82142857142853*G22_0_12_1 + 2.81249999999998*G22_0_13_0 - 5.62500000000001*G22_0_13_1 + 14.8660714285713*G22_0_14_0 + 14.8660714285713*G22_0_14_1 + 4.41964285714284*G22_0_15_0 + 2.41071428571424*G22_0_15_1 - 14.8660714285713*G22_0_16_0 - 7.23214285714273*G22_0_16_1 - 2.41071428571428*G22_0_17_0 - 0.401785714285736*G22_0_17_1 + 6.02678571428569*G22_0_18_0 + 5.625*G22_0_18_1 - 7.23214285714281*G22_0_19_0 - 14.4642857142856*G22_0_19_1 + 2.81249999999995*G22_1_10_0 + 2.81249999999999*G22_1_10_1 - 12.0535714285713*G22_1_11_0 + 3.74610151985569e-14*G22_1_11_1 + 5.22321428571425*G22_1_12_1 - 10.0446428571428*G22_1_13_0 - 24.1071428571428*G22_1_13_1 + 15.2678571428571*G22_1_14_0 + 12.0535714285714*G22_1_14_1 + 0.401785714285727*G22_1_15_0 - 0.401785714285777*G22_1_15_1 - 15.2678571428571*G22_1_16_0 - 7.6339285714285*G22_1_16_1 - 12.8571428571427*G22_1_17_0 - 12.0535714285713*G22_1_17_1 + 22.0982142857141*G22_1_18_0 + 24.1071428571427*G22_1_18_1 + 9.6428571428571*G22_1_19_0 + 1.97064586870965e-14*G22_1_19_1 - 4.68750000000002*G22_2_10_0 - 4.68749999999999*G22_2_10_1 + 0.669642857142854*G22_2_11_0 + 3.85629135203417e-14*G22_2_11_1 + 26.7857142857141*G22_2_12_1 - 24.1071428571427*G22_2_13_0 - 10.0446428571429*G22_2_13_1 + 48.2142857142855*G22_2_14_0 + 8.0357142857143*G22_2_14_1 + 24.1071428571428*G22_2_15_0 + 22.0982142857141*G22_2_15_1 - 48.2142857142855*G22_2_16_0 - 44.1964285714283*G22_2_16_1 + 2.0089285714286*G22_2_17_0 + 4.01785714285716*G22_2_17_1 + 2.00892857142856*G22_2_18_0 + 10.0446428571428*G22_2_18_1 - 2.8421709430404e-14*G22_2_19_0 - 12.0535714285714*G22_2_19_1 + 2.81249999999995*G22_3_10_0 + 2.81250000000007*G22_3_10_1 - 28.1249999999998*G22_3_11_0 - 4.37026712106702e-14*G22_3_11_1 - 28.1249999999999*G22_3_12_1 - 10.8482142857143*G22_3_13_0 - 54.2410714285712*G22_3_13_1 - 54.2410714285711*G22_3_14_0 - 10.848214285714*G22_3_14_1 - 10.8482142857143*G22_3_15_0 - 3.61607142857158*G22_3_15_1 + 54.2410714285712*G22_3_16_0 + 28.928571428571*G22_3_16_1 - 3.61607142857127*G22_3_17_0 - 10.8482142857139*G22_3_17_1 + 28.9285714285712*G22_3_18_0 + 54.2410714285708*G22_3_18_1 + 21.6964285714286*G22_3_19_0 + 21.6964285714288*G22_3_19_1 - 29.7321428571427*G22_4_10_0 - 29.7321428571429*G22_4_10_1 - 6.42857142857147*G22_4_11_0 + 2.95750098354277e-13*G22_4_11_1 + 80.3571428571424*G22_4_12_1 + 108.482142857142*G22_4_13_0 + 21.6964285714282*G22_4_13_1 + 216.964285714285*G22_4_14_0 + 216.964285714284*G22_4_14_1 + 108.482142857142*G22_4_15_0 + 94.0178571428566*G22_4_15_1 - 216.964285714285*G22_4_16_0 - 144.642857142855*G22_4_16_1 + 28.9285714285711*G22_4_17_0 + 43.3928571428562*G22_4_17_1 + 7.23214285714306*G22_4_18_0 - 21.6964285714276*G22_4_18_1 - 216.964285714285*G22_4_19_0 - 260.357142857142*G22_4_19_1 + 5.62500000000002*G22_5_10_0 + 5.62500000000005*G22_5_10_1 + 5.22321428571426*G22_5_11_0 - 9.04842325156415e-14*G22_5_11_1 - 20.0892857142856*G22_5_12_1 - 10.8482142857142*G22_5_13_0 + 7.23214285714292*G22_5_13_1 - 54.2410714285712*G22_5_14_0 - 47.0089285714283*G22_5_14_1 - 10.8482142857142*G22_5_15_0 - 14.4642857142857*G22_5_15_1 + 54.2410714285712*G22_5_16_0 + 28.928571428571*G22_5_16_1 - 4.46240266960274e-14*G22_5_17_0 + 3.61607142857155*G22_5_17_1 - 10.8482142857142*G22_5_18_0 - 7.23214285714301*G22_5_18_1 + 21.6964285714285*G22_5_19_0 + 43.3928571428571*G22_5_19_1 - 0.401785714285763*G22_6_10_0 - 0.401785714285836*G22_6_10_1 + 0.40178571428571*G22_6_11_0 + 1.85004665469257e-13*G22_6_11_1 + 40.1785714285712*G22_6_12_1 - 2.35089725464377e-14*G22_6_13_0 - 3.61607142857161*G22_6_13_1 + 108.482142857142*G22_6_14_0 + 72.321428571428*G22_6_14_1 + 3.82471831983366e-14*G22_6_15_0 - 3.61607142857137*G22_6_15_1 - 108.482142857142*G22_6_16_0 - 36.1607142857136*G22_6_16_1 - 10.8482142857142*G22_6_17_0 - 7.23214285714311*G22_6_17_1 + 10.8482142857143*G22_6_18_0 + 3.61607142857178*G22_6_18_1 + 1.16850973341798e-14*G22_6_19_0 - 65.0892857142857*G22_6_19_1 + 4.41964285714288*G22_7_10_0 + 4.41964285714288*G22_7_10_1 + 13.6607142857142*G22_7_11_0 - 4.87310832596425e-14*G22_7_11_1 - 4.41964285714285*G22_7_12_1 - 3.61607142857137*G22_7_13_0 + 21.6964285714285*G22_7_13_1 - 14.4642857142857*G22_7_14_0 - 21.6964285714284*G22_7_14_1 + 3.61607142857142*G22_7_15_0 - 10.8482142857142*G22_7_15_1 + 14.4642857142857*G22_7_16_0 + 10.8482142857141*G22_7_16_1 + 7.23214285714272*G22_7_17_0 + 21.6964285714285*G22_7_17_1 - 25.3124999999998*G22_7_18_0 - 21.6964285714285*G22_7_18_1 - 4.97969721013902e-14*G22_7_19_0 + 4.21902096592319e-14*G22_7_19_1 - 5.22321428571432*G22_8_10_0 - 5.2232142857142*G22_8_10_1 - 20.0892857142856*G22_8_11_0 - 5.62500000000006*G22_8_12_1 - 25.3125*G22_8_13_0 - 54.2410714285713*G22_8_13_1 - 3.61607142857146*G22_8_14_0 + 10.8482142857144*G22_8_14_1 + 3.61607142857138*G22_8_15_0 + 10.848214285714*G22_8_15_1 + 3.61607142857147*G22_8_16_0 - 6.51041720534096e-14*G22_8_16_1 + 18.0803571428572*G22_8_17_0 + 10.8482142857145*G22_8_17_1 + 7.2321428571427*G22_8_18_0 + 54.2410714285709*G22_8_18_1 + 21.6964285714286*G22_8_19_0 - 21.6964285714282*G22_8_19_1 - 2.41071428571435*G22_9_10_0 - 2.41071428571433*G22_9_10_1 - 19.2857142857142*G22_9_11_0 + 1.96889461695947e-13*G22_9_11_1 + 24.1071428571426*G22_9_12_1 + 21.6964285714284*G22_9_13_0 - 43.3928571428574*G22_9_13_1 + 108.482142857142*G22_9_14_0 + 130.178571428571*G22_9_14_1 + 21.6964285714286*G22_9_15_0 - 1.54903867510825e-13*G22_9_15_1 - 108.482142857142*G22_9_16_0 - 21.6964285714279*G22_9_16_1 + 21.6964285714285*G22_9_17_0 + 43.3928571428569*G22_9_17_1 + 4.62772181686333e-14*G22_9_18_0 + 43.3928571428572*G22_9_18_1 - 43.392857142857*G22_9_19_0 - 173.571428571428*G22_9_19_1 - 3.61607142857141*G23_10_11_0 + 2.62072575252402e-14*G23_10_11_1 + 4.82142857142853*G23_10_12_1 + 2.81249999999998*G23_10_13_0 - 5.62500000000001*G23_10_13_1 + 14.8660714285713*G23_10_14_0 + 14.8660714285713*G23_10_14_1 + 4.41964285714284*G23_10_15_0 + 2.41071428571424*G23_10_15_1 - 14.8660714285713*G23_10_16_0 - 7.23214285714273*G23_10_16_1 - 2.41071428571428*G23_10_17_0 - 0.401785714285736*G23_10_17_1 + 6.02678571428569*G23_10_18_0 + 5.625*G23_10_18_1 - 7.23214285714281*G23_10_19_0 - 14.4642857142856*G23_10_19_1 + 2.81249999999995*G23_11_10_0 + 2.81249999999999*G23_11_10_1 - 12.0535714285713*G23_11_11_0 + 3.74610151985569e-14*G23_11_11_1 + 5.22321428571425*G23_11_12_1 - 10.0446428571428*G23_11_13_0 - 24.1071428571428*G23_11_13_1 + 15.2678571428571*G23_11_14_0 + 12.0535714285714*G23_11_14_1 + 0.401785714285727*G23_11_15_0 - 0.401785714285777*G23_11_15_1 - 15.2678571428571*G23_11_16_0 - 7.6339285714285*G23_11_16_1 - 12.8571428571427*G23_11_17_0 - 12.0535714285713*G23_11_17_1 + 22.0982142857141*G23_11_18_0 + 24.1071428571427*G23_11_18_1 + 9.6428571428571*G23_11_19_0 + 1.97064586870965e-14*G23_11_19_1 - 4.68750000000002*G23_12_10_0 - 4.68749999999999*G23_12_10_1 + 0.669642857142854*G23_12_11_0 + 3.85629135203417e-14*G23_12_11_1 + 26.7857142857141*G23_12_12_1 - 24.1071428571427*G23_12_13_0 - 10.0446428571429*G23_12_13_1 + 48.2142857142855*G23_12_14_0 + 8.0357142857143*G23_12_14_1 + 24.1071428571428*G23_12_15_0 + 22.0982142857141*G23_12_15_1 - 48.2142857142855*G23_12_16_0 - 44.1964285714283*G23_12_16_1 + 2.0089285714286*G23_12_17_0 + 4.01785714285716*G23_12_17_1 + 2.00892857142856*G23_12_18_0 + 10.0446428571428*G23_12_18_1 - 2.8421709430404e-14*G23_12_19_0 - 12.0535714285714*G23_12_19_1 + 2.81249999999995*G23_13_10_0 + 2.81250000000007*G23_13_10_1 - 28.1249999999998*G23_13_11_0 - 4.37026712106702e-14*G23_13_11_1 - 28.1249999999999*G23_13_12_1 - 10.8482142857143*G23_13_13_0 - 54.2410714285712*G23_13_13_1 - 54.2410714285711*G23_13_14_0 - 10.848214285714*G23_13_14_1 - 10.8482142857143*G23_13_15_0 - 3.61607142857158*G23_13_15_1 + 54.2410714285712*G23_13_16_0 + 28.928571428571*G23_13_16_1 - 3.61607142857127*G23_13_17_0 - 10.8482142857139*G23_13_17_1 + 28.9285714285712*G23_13_18_0 + 54.2410714285708*G23_13_18_1 + 21.6964285714286*G23_13_19_0 + 21.6964285714288*G23_13_19_1 - 29.7321428571427*G23_14_10_0 - 29.7321428571429*G23_14_10_1 - 6.42857142857147*G23_14_11_0 + 2.95750098354277e-13*G23_14_11_1 + 80.3571428571424*G23_14_12_1 + 108.482142857142*G23_14_13_0 + 21.6964285714282*G23_14_13_1 + 216.964285714285*G23_14_14_0 + 216.964285714284*G23_14_14_1 + 108.482142857142*G23_14_15_0 + 94.0178571428566*G23_14_15_1 - 216.964285714285*G23_14_16_0 - 144.642857142855*G23_14_16_1 + 28.9285714285711*G23_14_17_0 + 43.3928571428562*G23_14_17_1 + 7.23214285714306*G23_14_18_0 - 21.6964285714276*G23_14_18_1 - 216.964285714285*G23_14_19_0 - 260.357142857142*G23_14_19_1 + 5.62500000000002*G23_15_10_0 + 5.62500000000005*G23_15_10_1 + 5.22321428571426*G23_15_11_0 - 9.04842325156415e-14*G23_15_11_1 - 20.0892857142856*G23_15_12_1 - 10.8482142857142*G23_15_13_0 + 7.23214285714292*G23_15_13_1 - 54.2410714285712*G23_15_14_0 - 47.0089285714283*G23_15_14_1 - 10.8482142857142*G23_15_15_0 - 14.4642857142857*G23_15_15_1 + 54.2410714285712*G23_15_16_0 + 28.928571428571*G23_15_16_1 - 4.46240266960274e-14*G23_15_17_0 + 3.61607142857155*G23_15_17_1 - 10.8482142857142*G23_15_18_0 - 7.23214285714301*G23_15_18_1 + 21.6964285714285*G23_15_19_0 + 43.3928571428571*G23_15_19_1 - 0.401785714285763*G23_16_10_0 - 0.401785714285836*G23_16_10_1 + 0.40178571428571*G23_16_11_0 + 1.85004665469257e-13*G23_16_11_1 + 40.1785714285712*G23_16_12_1 - 2.35089725464377e-14*G23_16_13_0 - 3.61607142857161*G23_16_13_1 + 108.482142857142*G23_16_14_0 + 72.321428571428*G23_16_14_1 + 3.82471831983366e-14*G23_16_15_0 - 3.61607142857137*G23_16_15_1 - 108.482142857142*G23_16_16_0 - 36.1607142857136*G23_16_16_1 - 10.8482142857142*G23_16_17_0 - 7.23214285714311*G23_16_17_1 + 10.8482142857143*G23_16_18_0 + 3.61607142857178*G23_16_18_1 + 1.16850973341798e-14*G23_16_19_0 - 65.0892857142857*G23_16_19_1 + 4.41964285714288*G23_17_10_0 + 4.41964285714288*G23_17_10_1 + 13.6607142857142*G23_17_11_0 - 4.87310832596425e-14*G23_17_11_1 - 4.41964285714285*G23_17_12_1 - 3.61607142857137*G23_17_13_0 + 21.6964285714285*G23_17_13_1 - 14.4642857142857*G23_17_14_0 - 21.6964285714284*G23_17_14_1 + 3.61607142857142*G23_17_15_0 - 10.8482142857142*G23_17_15_1 + 14.4642857142857*G23_17_16_0 + 10.8482142857141*G23_17_16_1 + 7.23214285714272*G23_17_17_0 + 21.6964285714285*G23_17_17_1 - 25.3124999999998*G23_17_18_0 - 21.6964285714285*G23_17_18_1 - 4.97969721013902e-14*G23_17_19_0 + 4.21902096592319e-14*G23_17_19_1 - 5.22321428571432*G23_18_10_0 - 5.2232142857142*G23_18_10_1 - 20.0892857142856*G23_18_11_0 - 5.62500000000006*G23_18_12_1 - 25.3125*G23_18_13_0 - 54.2410714285713*G23_18_13_1 - 3.61607142857146*G23_18_14_0 + 10.8482142857144*G23_18_14_1 + 3.61607142857138*G23_18_15_0 + 10.848214285714*G23_18_15_1 + 3.61607142857147*G23_18_16_0 - 6.51041720534096e-14*G23_18_16_1 + 18.0803571428572*G23_18_17_0 + 10.8482142857145*G23_18_17_1 + 7.2321428571427*G23_18_18_0 + 54.2410714285709*G23_18_18_1 + 21.6964285714286*G23_18_19_0 - 21.6964285714282*G23_18_19_1 - 2.41071428571435*G23_19_10_0 - 2.41071428571433*G23_19_10_1 - 19.2857142857142*G23_19_11_0 + 1.96889461695947e-13*G23_19_11_1 + 24.1071428571426*G23_19_12_1 + 21.6964285714284*G23_19_13_0 - 43.3928571428574*G23_19_13_1 + 108.482142857142*G23_19_14_0 + 130.178571428571*G23_19_14_1 + 21.6964285714286*G23_19_15_0 - 1.54903867510825e-13*G23_19_15_1 - 108.482142857142*G23_19_16_0 - 21.6964285714279*G23_19_16_1 + 21.6964285714285*G23_19_17_0 + 43.3928571428569*G23_19_17_1 + 4.62772181686333e-14*G23_19_18_0 + 43.3928571428572*G23_19_18_1 - 43.392857142857*G23_19_19_0 - 173.571428571428*G23_19_19_1 + 1.8080357142857*G26_0_11_0 - 1.31036287626201e-14*G26_0_11_1 - 2.41071428571427*G26_0_12_1 - 1.40624999999999*G26_0_13_0 + 2.8125*G26_0_13_1 - 7.43303571428567*G26_0_14_0 - 7.43303571428567*G26_0_14_1 - 2.20982142857142*G26_0_15_0 - 1.20535714285712*G26_0_15_1 + 7.43303571428567*G26_0_16_0 + 3.61607142857137*G26_0_16_1 + 1.20535714285714*G26_0_17_0 + 0.200892857142868*G26_0_17_1 - 3.01339285714285*G26_0_18_0 - 2.8125*G26_0_18_1 + 3.61607142857141*G26_0_19_0 + 7.23214285714282*G26_0_19_1 - 1.40624999999998*G26_1_10_0 - 1.40624999999999*G26_1_10_1 + 6.02678571428567*G26_1_11_0 - 1.87305075992784e-14*G26_1_11_1 - 2.61160714285713*G26_1_12_1 + 5.02232142857141*G26_1_13_0 + 12.0535714285714*G26_1_13_1 - 7.63392857142854*G26_1_14_0 - 6.0267857142857*G26_1_14_1 - 0.200892857142864*G26_1_15_0 + 0.200892857142888*G26_1_15_1 + 7.63392857142854*G26_1_16_0 + 3.81696428571425*G26_1_16_1 + 6.42857142857136*G26_1_17_0 + 6.02678571428565*G26_1_17_1 - 11.0491071428571*G26_1_18_0 - 12.0535714285713*G26_1_18_1 - 4.82142857142855*G26_1_19_0 + 2.34375000000001*G26_2_10_0 + 2.34375*G26_2_10_1 - 0.334821428571427*G26_2_11_0 - 1.92814567601709e-14*G26_2_11_1 - 13.3928571428571*G26_2_12_1 + 12.0535714285714*G26_2_13_0 + 5.02232142857145*G26_2_13_1 - 24.1071428571427*G26_2_14_0 - 4.01785714285715*G26_2_14_1 - 12.0535714285714*G26_2_15_0 - 11.0491071428571*G26_2_15_1 + 24.1071428571427*G26_2_16_0 + 22.0982142857141*G26_2_16_1 - 1.0044642857143*G26_2_17_0 - 2.00892857142858*G26_2_17_1 - 1.00446428571428*G26_2_18_0 - 5.02232142857142*G26_2_18_1 + 1.4210854715202e-14*G26_2_19_0 + 6.02678571428571*G26_2_19_1 - 1.40624999999998*G26_3_10_0 - 1.40625000000003*G26_3_10_1 + 14.0624999999999*G26_3_11_0 + 2.18513356053351e-14*G26_3_11_1 + 14.0625*G26_3_12_1 + 5.42410714285717*G26_3_13_0 + 27.1205357142856*G26_3_13_1 + 27.1205357142856*G26_3_14_0 + 5.42410714285702*G26_3_14_1 + 5.42410714285713*G26_3_15_0 + 1.80803571428579*G26_3_15_1 - 27.1205357142856*G26_3_16_0 - 14.4642857142855*G26_3_16_1 + 1.80803571428563*G26_3_17_0 + 5.42410714285694*G26_3_17_1 - 14.4642857142856*G26_3_18_0 - 27.1205357142854*G26_3_18_1 - 10.8482142857143*G26_3_19_0 - 10.8482142857144*G26_3_19_1 + 14.8660714285714*G26_4_10_0 + 14.8660714285715*G26_4_10_1 + 3.21428571428573*G26_4_11_0 - 1.47875049177138e-13*G26_4_11_1 - 40.1785714285712*G26_4_12_1 - 54.2410714285712*G26_4_13_0 - 10.8482142857141*G26_4_13_1 - 108.482142857142*G26_4_14_0 - 108.482142857142*G26_4_14_1 - 54.2410714285712*G26_4_15_0 - 47.0089285714283*G26_4_15_1 + 108.482142857142*G26_4_16_0 + 72.3214285714276*G26_4_16_1 - 14.4642857142855*G26_4_17_0 - 21.6964285714281*G26_4_17_1 - 3.61607142857153*G26_4_18_0 + 10.8482142857138*G26_4_18_1 + 108.482142857142*G26_4_19_0 + 130.178571428571*G26_4_19_1 - 2.81250000000001*G26_5_10_0 - 2.81250000000002*G26_5_10_1 - 2.61160714285713*G26_5_11_0 + 4.52421162578208e-14*G26_5_11_1 + 10.0446428571428*G26_5_12_1 + 5.42410714285712*G26_5_13_0 - 3.61607142857146*G26_5_13_1 + 27.1205357142856*G26_5_14_0 + 23.5044642857141*G26_5_14_1 + 5.42410714285712*G26_5_15_0 + 7.23214285714283*G26_5_15_1 - 27.1205357142856*G26_5_16_0 - 14.4642857142855*G26_5_16_1 + 2.23120133480137e-14*G26_5_17_0 - 1.80803571428577*G26_5_17_1 + 5.42410714285712*G26_5_18_0 + 3.61607142857151*G26_5_18_1 - 10.8482142857142*G26_5_19_0 - 21.6964285714286*G26_5_19_1 + 0.200892857142881*G26_6_10_0 + 0.200892857142918*G26_6_10_1 - 0.200892857142855*G26_6_11_0 - 9.25023327346287e-14*G26_6_11_1 - 20.0892857142856*G26_6_12_1 + 1.17544862732188e-14*G26_6_13_0 + 1.8080357142858*G26_6_13_1 - 54.2410714285712*G26_6_14_0 - 36.160714285714*G26_6_14_1 - 1.91235915991683e-14*G26_6_15_0 + 1.80803571428569*G26_6_15_1 + 54.2410714285712*G26_6_16_0 + 18.0803571428568*G26_6_16_1 + 5.42410714285711*G26_6_17_0 + 3.61607142857156*G26_6_17_1 - 5.42410714285713*G26_6_18_0 - 1.80803571428589*G26_6_18_1 + 32.5446428571428*G26_6_19_1 - 2.20982142857144*G26_7_10_0 - 2.20982142857144*G26_7_10_1 - 6.83035714285711*G26_7_11_0 + 2.43655416298213e-14*G26_7_11_1 + 2.20982142857143*G26_7_12_1 + 1.80803571428568*G26_7_13_0 - 10.8482142857143*G26_7_13_1 + 7.23214285714284*G26_7_14_0 + 10.8482142857142*G26_7_14_1 - 1.80803571428571*G26_7_15_0 + 5.42410714285712*G26_7_15_1 - 7.23214285714284*G26_7_16_0 - 5.42410714285707*G26_7_16_1 - 3.61607142857136*G26_7_17_0 - 10.8482142857142*G26_7_17_1 + 12.6562499999999*G26_7_18_0 + 10.8482142857143*G26_7_18_1 + 2.48984860506951e-14*G26_7_19_0 - 2.1095104829616e-14*G26_7_19_1 + 2.61160714285716*G26_8_10_0 + 2.6116071428571*G26_8_10_1 + 10.0446428571428*G26_8_11_0 + 2.81250000000003*G26_8_12_1 + 12.65625*G26_8_13_0 + 27.1205357142856*G26_8_13_1 + 1.80803571428573*G26_8_14_0 - 5.42410714285719*G26_8_14_1 - 1.80803571428569*G26_8_15_0 - 5.42410714285701*G26_8_15_1 - 1.80803571428574*G26_8_16_0 + 3.25520860267048e-14*G26_8_16_1 - 9.0401785714286*G26_8_17_0 - 5.42410714285727*G26_8_17_1 - 3.61607142857135*G26_8_18_0 - 27.1205357142854*G26_8_18_1 - 10.8482142857143*G26_8_19_0 + 10.8482142857141*G26_8_19_1 + 1.20535714285717*G26_9_10_0 + 1.20535714285717*G26_9_10_1 + 9.64285714285711*G26_9_11_0 - 9.84447308479733e-14*G26_9_11_1 - 12.0535714285713*G26_9_12_1 - 10.8482142857142*G26_9_13_0 + 21.6964285714287*G26_9_13_1 - 54.2410714285712*G26_9_14_0 - 65.0892857142855*G26_9_14_1 - 10.8482142857143*G26_9_15_0 + 7.74519337554125e-14*G26_9_15_1 + 54.2410714285712*G26_9_16_0 + 10.848214285714*G26_9_16_1 - 10.8482142857142*G26_9_17_0 - 21.6964285714285*G26_9_17_1 - 2.31386090843166e-14*G26_9_18_0 - 21.6964285714286*G26_9_18_1 + 21.6964285714285*G26_9_19_0 + 86.785714285714*G26_9_19_1 + 1.8080357142857*G27_10_11_0 - 1.31036287626201e-14*G27_10_11_1 - 2.41071428571427*G27_10_12_1 - 1.40624999999999*G27_10_13_0 + 2.8125*G27_10_13_1 - 7.43303571428567*G27_10_14_0 - 7.43303571428567*G27_10_14_1 - 2.20982142857142*G27_10_15_0 - 1.20535714285712*G27_10_15_1 + 7.43303571428567*G27_10_16_0 + 3.61607142857137*G27_10_16_1 + 1.20535714285714*G27_10_17_0 + 0.200892857142868*G27_10_17_1 - 3.01339285714285*G27_10_18_0 - 2.8125*G27_10_18_1 + 3.61607142857141*G27_10_19_0 + 7.23214285714282*G27_10_19_1 - 1.40624999999998*G27_11_10_0 - 1.40624999999999*G27_11_10_1 + 6.02678571428567*G27_11_11_0 - 1.87305075992784e-14*G27_11_11_1 - 2.61160714285713*G27_11_12_1 + 5.02232142857141*G27_11_13_0 + 12.0535714285714*G27_11_13_1 - 7.63392857142854*G27_11_14_0 - 6.0267857142857*G27_11_14_1 - 0.200892857142864*G27_11_15_0 + 0.200892857142888*G27_11_15_1 + 7.63392857142854*G27_11_16_0 + 3.81696428571425*G27_11_16_1 + 6.42857142857136*G27_11_17_0 + 6.02678571428565*G27_11_17_1 - 11.0491071428571*G27_11_18_0 - 12.0535714285713*G27_11_18_1 - 4.82142857142855*G27_11_19_0 + 2.34375000000001*G27_12_10_0 + 2.34375*G27_12_10_1 - 0.334821428571427*G27_12_11_0 - 1.92814567601709e-14*G27_12_11_1 - 13.3928571428571*G27_12_12_1 + 12.0535714285714*G27_12_13_0 + 5.02232142857145*G27_12_13_1 - 24.1071428571427*G27_12_14_0 - 4.01785714285715*G27_12_14_1 - 12.0535714285714*G27_12_15_0 - 11.0491071428571*G27_12_15_1 + 24.1071428571427*G27_12_16_0 + 22.0982142857141*G27_12_16_1 - 1.0044642857143*G27_12_17_0 - 2.00892857142858*G27_12_17_1 - 1.00446428571428*G27_12_18_0 - 5.02232142857142*G27_12_18_1 + 1.4210854715202e-14*G27_12_19_0 + 6.02678571428571*G27_12_19_1 - 1.40624999999998*G27_13_10_0 - 1.40625000000003*G27_13_10_1 + 14.0624999999999*G27_13_11_0 + 2.18513356053351e-14*G27_13_11_1 + 14.0625*G27_13_12_1 + 5.42410714285717*G27_13_13_0 + 27.1205357142856*G27_13_13_1 + 27.1205357142856*G27_13_14_0 + 5.42410714285702*G27_13_14_1 + 5.42410714285713*G27_13_15_0 + 1.80803571428579*G27_13_15_1 - 27.1205357142856*G27_13_16_0 - 14.4642857142855*G27_13_16_1 + 1.80803571428563*G27_13_17_0 + 5.42410714285694*G27_13_17_1 - 14.4642857142856*G27_13_18_0 - 27.1205357142854*G27_13_18_1 - 10.8482142857143*G27_13_19_0 - 10.8482142857144*G27_13_19_1 + 14.8660714285714*G27_14_10_0 + 14.8660714285715*G27_14_10_1 + 3.21428571428573*G27_14_11_0 - 1.47875049177138e-13*G27_14_11_1 - 40.1785714285712*G27_14_12_1 - 54.2410714285712*G27_14_13_0 - 10.8482142857141*G27_14_13_1 - 108.482142857142*G27_14_14_0 - 108.482142857142*G27_14_14_1 - 54.2410714285712*G27_14_15_0 - 47.0089285714283*G27_14_15_1 + 108.482142857142*G27_14_16_0 + 72.3214285714276*G27_14_16_1 - 14.4642857142855*G27_14_17_0 - 21.6964285714281*G27_14_17_1 - 3.61607142857153*G27_14_18_0 + 10.8482142857138*G27_14_18_1 + 108.482142857142*G27_14_19_0 + 130.178571428571*G27_14_19_1 - 2.81250000000001*G27_15_10_0 - 2.81250000000002*G27_15_10_1 - 2.61160714285713*G27_15_11_0 + 4.52421162578208e-14*G27_15_11_1 + 10.0446428571428*G27_15_12_1 + 5.42410714285712*G27_15_13_0 - 3.61607142857146*G27_15_13_1 + 27.1205357142856*G27_15_14_0 + 23.5044642857141*G27_15_14_1 + 5.42410714285712*G27_15_15_0 + 7.23214285714283*G27_15_15_1 - 27.1205357142856*G27_15_16_0 - 14.4642857142855*G27_15_16_1 + 2.23120133480137e-14*G27_15_17_0 - 1.80803571428577*G27_15_17_1 + 5.42410714285712*G27_15_18_0 + 3.61607142857151*G27_15_18_1 - 10.8482142857142*G27_15_19_0 - 21.6964285714286*G27_15_19_1 + 0.200892857142881*G27_16_10_0 + 0.200892857142918*G27_16_10_1 - 0.200892857142855*G27_16_11_0 - 9.25023327346287e-14*G27_16_11_1 - 20.0892857142856*G27_16_12_1 + 1.17544862732188e-14*G27_16_13_0 + 1.8080357142858*G27_16_13_1 - 54.2410714285712*G27_16_14_0 - 36.160714285714*G27_16_14_1 - 1.91235915991683e-14*G27_16_15_0 + 1.80803571428569*G27_16_15_1 + 54.2410714285712*G27_16_16_0 + 18.0803571428568*G27_16_16_1 + 5.42410714285711*G27_16_17_0 + 3.61607142857156*G27_16_17_1 - 5.42410714285713*G27_16_18_0 - 1.80803571428589*G27_16_18_1 + 32.5446428571428*G27_16_19_1 - 2.20982142857144*G27_17_10_0 - 2.20982142857144*G27_17_10_1 - 6.83035714285711*G27_17_11_0 + 2.43655416298213e-14*G27_17_11_1 + 2.20982142857143*G27_17_12_1 + 1.80803571428568*G27_17_13_0 - 10.8482142857143*G27_17_13_1 + 7.23214285714284*G27_17_14_0 + 10.8482142857142*G27_17_14_1 - 1.80803571428571*G27_17_15_0 + 5.42410714285712*G27_17_15_1 - 7.23214285714284*G27_17_16_0 - 5.42410714285707*G27_17_16_1 - 3.61607142857136*G27_17_17_0 - 10.8482142857142*G27_17_17_1 + 12.6562499999999*G27_17_18_0 + 10.8482142857143*G27_17_18_1 + 2.48984860506951e-14*G27_17_19_0 - 2.1095104829616e-14*G27_17_19_1 + 2.61160714285716*G27_18_10_0 + 2.6116071428571*G27_18_10_1 + 10.0446428571428*G27_18_11_0 + 2.81250000000003*G27_18_12_1 + 12.65625*G27_18_13_0 + 27.1205357142856*G27_18_13_1 + 1.80803571428573*G27_18_14_0 - 5.42410714285719*G27_18_14_1 - 1.80803571428569*G27_18_15_0 - 5.42410714285701*G27_18_15_1 - 1.80803571428574*G27_18_16_0 + 3.25520860267048e-14*G27_18_16_1 - 9.0401785714286*G27_18_17_0 - 5.42410714285727*G27_18_17_1 - 3.61607142857135*G27_18_18_0 - 27.1205357142854*G27_18_18_1 - 10.8482142857143*G27_18_19_0 + 10.8482142857141*G27_18_19_1 + 1.20535714285717*G27_19_10_0 + 1.20535714285717*G27_19_10_1 + 9.64285714285711*G27_19_11_0 - 9.84447308479733e-14*G27_19_11_1 - 12.0535714285713*G27_19_12_1 - 10.8482142857142*G27_19_13_0 + 21.6964285714287*G27_19_13_1 - 54.2410714285712*G27_19_14_0 - 65.0892857142855*G27_19_14_1 - 10.8482142857143*G27_19_15_0 + 7.74519337554125e-14*G27_19_15_1 + 54.2410714285712*G27_19_16_0 + 10.848214285714*G27_19_16_1 - 10.8482142857142*G27_19_17_0 - 21.6964285714285*G27_19_17_1 - 2.31386090843166e-14*G27_19_18_0 - 21.6964285714286*G27_19_18_1 + 21.6964285714285*G27_19_19_0 + 86.785714285714*G27_19_19_1;
    A[15] = 0.0750000000000018*G0_0_0_0 + 0.0750000000000038*G0_0_0_1 - 0.0750000000000011*G0_0_1_0 + 0.599999999999996*G0_0_2_1 + 0.675000000000001*G0_0_3_0 + 0.337499999999999*G0_0_3_1 + 0.674999999999999*G0_0_4_0 + 0.337500000000006*G0_0_4_1 + 3.37499999999999*G0_0_5_0 + 1.68749999999999*G0_0_5_1 - 0.674999999999999*G0_0_6_0 - 2.36249999999999*G0_0_6_1 + 1.68749999999999*G0_0_7_1 - 0.337500000000002*G0_0_8_1 - 4.04999999999999*G0_0_9_0 - 2.02499999999999*G0_0_9_1 - 1.35*G0_1_0_0 - 1.35*G0_1_0_1 + 0.674999999999999*G0_1_2_1 + 0.337500000000003*G0_1_3_0 + 1.7278713182467e-14*G0_1_3_1 + 0.337499999999997*G0_1_4_0 + 1.68749999999999*G0_1_5_0 + 3.37499999999998*G0_1_5_1 - 0.337499999999997*G0_1_6_0 - 2.69999999999999*G0_1_6_1 + 1.68749999999999*G0_1_7_0 - 0.337500000000004*G0_1_8_0 - 1.25255708582905e-14*G0_1_8_1 - 2.02499999999999*G0_1_9_0 + 1.00058850094342e-14*G0_1_9_1 + 0.0750000000000018*G1_0_10_0 + 0.0750000000000038*G1_0_10_1 - 0.0750000000000011*G1_0_11_0 + 0.599999999999996*G1_0_12_1 + 0.675000000000001*G1_0_13_0 + 0.337499999999999*G1_0_13_1 + 0.674999999999999*G1_0_14_0 + 0.337500000000006*G1_0_14_1 + 3.37499999999999*G1_0_15_0 + 1.68749999999999*G1_0_15_1 - 0.674999999999999*G1_0_16_0 - 2.36249999999999*G1_0_16_1 + 1.68749999999999*G1_0_17_1 - 0.337500000000002*G1_0_18_1 - 4.04999999999999*G1_0_19_0 - 2.02499999999999*G1_0_19_1 - 1.35*G1_1_10_0 - 1.35*G1_1_10_1 + 0.674999999999999*G1_1_12_1 + 0.337500000000003*G1_1_13_0 + 1.7278713182467e-14*G1_1_13_1 + 0.337499999999997*G1_1_14_0 + 1.68749999999999*G1_1_15_0 + 3.37499999999998*G1_1_15_1 - 0.337499999999997*G1_1_16_0 - 2.69999999999999*G1_1_16_1 + 1.68749999999999*G1_1_17_0 - 0.337500000000004*G1_1_18_0 - 1.25255708582905e-14*G1_1_18_1 - 2.02499999999999*G1_1_19_0 + 1.00058850094342e-14*G1_1_19_1 - 0.0375000000000009*G2_0_0_0 - 0.0375000000000019*G2_0_0_1 + 0.0375000000000006*G2_0_1_0 - 0.299999999999998*G2_0_2_1 - 0.3375*G2_0_3_0 - 0.168749999999999*G2_0_3_1 - 0.337499999999999*G2_0_4_0 - 0.168750000000003*G2_0_4_1 - 1.68749999999999*G2_0_5_0 - 0.843749999999994*G2_0_5_1 + 0.3375*G2_0_6_0 + 1.18125*G2_0_6_1 - 0.843749999999997*G2_0_7_1 + 0.168750000000001*G2_0_8_1 + 2.02499999999999*G2_0_9_0 + 1.01249999999999*G2_0_9_1 + 0.674999999999998*G2_1_0_0 + 0.674999999999998*G2_1_0_1 - 0.3375*G2_1_2_1 - 0.168750000000002*G2_1_3_0 - 0.168749999999998*G2_1_4_0 - 0.843749999999994*G2_1_5_0 - 1.68749999999999*G2_1_5_1 + 0.168749999999999*G2_1_6_0 + 1.34999999999999*G2_1_6_1 - 0.843749999999997*G2_1_7_0 + 0.168750000000002*G2_1_8_0 + 1.01249999999999*G2_1_9_0 - 0.0375000000000009*G3_0_10_0 - 0.0375000000000019*G3_0_10_1 + 0.0375000000000006*G3_0_11_0 - 0.299999999999998*G3_0_12_1 - 0.3375*G3_0_13_0 - 0.168749999999999*G3_0_13_1 - 0.337499999999999*G3_0_14_0 - 0.168750000000003*G3_0_14_1 - 1.68749999999999*G3_0_15_0 - 0.843749999999994*G3_0_15_1 + 0.3375*G3_0_16_0 + 1.18125*G3_0_16_1 - 0.843749999999997*G3_0_17_1 + 0.168750000000001*G3_0_18_1 + 2.02499999999999*G3_0_19_0 + 1.01249999999999*G3_0_19_1 + 0.674999999999998*G3_1_10_0 + 0.674999999999998*G3_1_10_1 - 0.3375*G3_1_12_1 - 0.168750000000002*G3_1_13_0 - 0.168749999999998*G3_1_14_0 - 0.843749999999994*G3_1_15_0 - 1.68749999999999*G3_1_15_1 + 0.168749999999999*G3_1_16_0 + 1.34999999999999*G3_1_16_1 - 0.843749999999997*G3_1_17_0 + 0.168750000000002*G3_1_18_0 + 1.01249999999999*G3_1_19_0 + 0.0750000000000018*G14_0_10_0 + 0.0750000000000038*G14_0_10_1 - 0.0750000000000011*G14_0_11_0 + 0.599999999999996*G14_0_12_1 + 0.675000000000001*G14_0_13_0 + 0.337499999999999*G14_0_13_1 + 0.674999999999999*G14_0_14_0 + 0.337500000000006*G14_0_14_1 + 3.37499999999999*G14_0_15_0 + 1.68749999999999*G14_0_15_1 - 0.674999999999999*G14_0_16_0 - 2.36249999999999*G14_0_16_1 + 1.68749999999999*G14_0_17_1 - 0.337500000000002*G14_0_18_1 - 4.04999999999999*G14_0_19_0 - 2.02499999999999*G14_0_19_1 - 1.35*G14_1_10_0 - 1.35*G14_1_10_1 + 0.674999999999999*G14_1_12_1 + 0.337500000000003*G14_1_13_0 + 1.7278713182467e-14*G14_1_13_1 + 0.337499999999997*G14_1_14_0 + 1.68749999999999*G14_1_15_0 + 3.37499999999998*G14_1_15_1 - 0.337499999999997*G14_1_16_0 - 2.69999999999999*G14_1_16_1 + 1.68749999999999*G14_1_17_0 - 0.337500000000004*G14_1_18_0 - 1.25255708582905e-14*G14_1_18_1 - 2.02499999999999*G14_1_19_0 + 1.00058850094342e-14*G14_1_19_1 + 0.0750000000000018*G15_0_10_0 + 0.0750000000000038*G15_0_10_1 - 0.0750000000000011*G15_0_11_0 + 0.599999999999996*G15_0_12_1 + 0.675000000000001*G15_0_13_0 + 0.337499999999999*G15_0_13_1 + 0.674999999999999*G15_0_14_0 + 0.337500000000006*G15_0_14_1 + 3.37499999999999*G15_0_15_0 + 1.68749999999999*G15_0_15_1 - 0.674999999999999*G15_0_16_0 - 2.36249999999999*G15_0_16_1 + 1.68749999999999*G15_0_17_1 - 0.337500000000002*G15_0_18_1 - 4.04999999999999*G15_0_19_0 - 2.02499999999999*G15_0_19_1 - 1.35*G15_1_10_0 - 1.35*G15_1_10_1 + 0.674999999999999*G15_1_12_1 + 0.337500000000003*G15_1_13_0 + 1.7278713182467e-14*G15_1_13_1 + 0.337499999999997*G15_1_14_0 + 1.68749999999999*G15_1_15_0 + 3.37499999999998*G15_1_15_1 - 0.337499999999997*G15_1_16_0 - 2.69999999999999*G15_1_16_1 + 1.68749999999999*G15_1_17_0 - 0.337500000000004*G15_1_18_0 - 1.25255708582905e-14*G15_1_18_1 - 2.02499999999999*G15_1_19_0 + 1.00058850094342e-14*G15_1_19_1 + 0.0749999999999997*G16_0_20 - 0.0749999999999997*G16_0_21 - 0.15*G16_0_22 + 0.599999999999997*G16_0_24 + 0.299999999999999*G16_0_25 - 0.224999999999999*G16_1_20 - 0.0749999999999992*G16_1_22 + 0.299999999999997*G16_1_24 - 0.0375000000000009*G17_0_10_0 - 0.0375000000000019*G17_0_10_1 + 0.0375000000000006*G17_0_11_0 - 0.299999999999998*G17_0_12_1 - 0.3375*G17_0_13_0 - 0.168749999999999*G17_0_13_1 - 0.337499999999999*G17_0_14_0 - 0.168750000000003*G17_0_14_1 - 1.68749999999999*G17_0_15_0 - 0.843749999999994*G17_0_15_1 + 0.3375*G17_0_16_0 + 1.18125*G17_0_16_1 - 0.843749999999997*G17_0_17_1 + 0.168750000000001*G17_0_18_1 + 2.02499999999999*G17_0_19_0 + 1.01249999999999*G17_0_19_1 + 0.674999999999998*G17_1_10_0 + 0.674999999999998*G17_1_10_1 - 0.3375*G17_1_12_1 - 0.168750000000002*G17_1_13_0 - 0.168749999999998*G17_1_14_0 - 0.843749999999994*G17_1_15_0 - 1.68749999999999*G17_1_15_1 + 0.168749999999999*G17_1_16_0 + 1.34999999999999*G17_1_16_1 - 0.843749999999997*G17_1_17_0 + 0.168750000000002*G17_1_18_0 + 1.01249999999999*G17_1_19_0 - 0.0375000000000009*G18_0_10_0 - 0.0375000000000019*G18_0_10_1 + 0.0375000000000006*G18_0_11_0 - 0.299999999999998*G18_0_12_1 - 0.3375*G18_0_13_0 - 0.168749999999999*G18_0_13_1 - 0.337499999999999*G18_0_14_0 - 0.168750000000003*G18_0_14_1 - 1.68749999999999*G18_0_15_0 - 0.843749999999994*G18_0_15_1 + 0.3375*G18_0_16_0 + 1.18125*G18_0_16_1 - 0.843749999999997*G18_0_17_1 + 0.168750000000001*G18_0_18_1 + 2.02499999999999*G18_0_19_0 + 1.01249999999999*G18_0_19_1 + 0.674999999999998*G18_1_10_0 + 0.674999999999998*G18_1_10_1 - 0.3375*G18_1_12_1 - 0.168750000000002*G18_1_13_0 - 0.168749999999998*G18_1_14_0 - 0.843749999999994*G18_1_15_0 - 1.68749999999999*G18_1_15_1 + 0.168749999999999*G18_1_16_0 + 1.34999999999999*G18_1_16_1 - 0.843749999999997*G18_1_17_0 + 0.168750000000002*G18_1_18_0 + 1.01249999999999*G18_1_19_0 - 0.0374999999999998*G19_0_20 + 0.0374999999999998*G19_0_21 + 0.0749999999999998*G19_0_22 - 0.299999999999999*G19_0_24 - 0.149999999999999*G19_0_25 + 0.1125*G19_1_20 + 0.0374999999999996*G19_1_22 - 0.149999999999999*G19_1_24 - 26.7857142857142*G22_0_10_0 - 26.7857142857141*G22_0_10_1 + 4.6875*G22_0_11_0 - 1.96327547755179e-14*G22_0_11_1 + 0.669642857142897*G22_0_12_1 - 4.01785714285713*G22_0_13_0 - 2.00892857142845*G22_0_13_1 - 10.0446428571428*G22_0_14_0 - 8.03571428571436*G22_0_14_1 - 8.0357142857142*G22_0_15_0 + 40.1785714285712*G22_0_15_1 + 10.0446428571428*G22_0_16_0 - 14.0625*G22_0_16_1 + 44.1964285714284*G22_0_17_0 - 4.01785714285706*G22_0_17_1 - 22.0982142857143*G22_0_18_0 + 2.00892857142852*G22_0_18_1 + 12.0535714285713*G22_0_19_0 + 12.0535714285713*G22_0_19_1 - 4.82142857142856*G22_1_10_0 - 4.82142857142857*G22_1_10_1 + 1.12440438904127e-14*G22_1_11_0 - 3.6160714285714*G22_1_12_1 + 0.401785714285697*G22_1_13_0 - 2.00892857142854*G22_1_13_1 - 5.62499999999998*G22_1_14_0 + 0.401785714285664*G22_1_14_1 - 14.8660714285714*G22_1_15_0 + 1.71494762835067e-14*G22_1_15_1 + 5.62499999999998*G22_1_16_0 + 8.43749999999999*G22_1_16_1 + 7.23214285714288*G22_1_17_0 - 7.63392857142854*G22_1_17_1 - 2.41071428571433*G22_1_18_0 + 2.00892857142857*G22_1_18_1 + 14.4642857142857*G22_1_19_0 + 7.2321428571428*G22_1_19_1 - 5.22321428571427*G22_2_10_0 - 5.22321428571427*G22_2_10_1 - 2.81249999999998*G22_2_11_0 - 1.72996054515353e-14*G22_2_11_1 - 12.0535714285714*G22_2_12_1 + 12.0535714285714*G22_2_13_0 - 0.803571428571365*G22_2_13_1 - 24.1071428571427*G22_2_14_0 - 2.00892857142862*G22_2_14_1 - 12.0535714285714*G22_2_15_0 + 3.21428571428571*G22_2_15_1 + 24.1071428571427*G22_2_16_0 + 14.0624999999999*G22_2_16_1 + 7.63392857142858*G22_2_17_0 - 7.63392857142855*G22_2_17_1 + 0.401785714285668*G22_2_18_0 + 0.803571428571407*G22_2_18_1 + 7.04436509124662e-14*G22_2_19_0 + 9.64285714285713*G22_2_19_1 + 4.41964285714282*G22_3_10_0 + 4.41964285714286*G22_3_10_1 - 4.41964285714283*G22_3_11_0 + 13.6607142857142*G22_3_12_1 - 21.6964285714285*G22_3_13_0 - 14.4642857142857*G22_3_13_1 + 21.6964285714285*G22_3_14_0 - 3.61607142857131*G22_3_14_1 + 21.6964285714284*G22_3_15_0 + 7.23214285714274*G22_3_15_1 - 21.6964285714285*G22_3_16_0 - 25.3124999999999*G22_3_16_1 - 10.8482142857142*G22_3_17_0 + 3.61607142857148*G22_3_17_1 + 10.8482142857142*G22_3_18_0 + 14.4642857142856*G22_3_18_1 + 5.31172328344098e-14*G22_3_19_0 + 9.18987108633473e-14*G22_3_19_1 + 5.62500000000002*G22_4_10_0 + 5.62500000000005*G22_4_10_1 + 5.22321428571426*G22_4_11_0 - 9.04842325156415e-14*G22_4_11_1 - 20.0892857142856*G22_4_12_1 - 10.8482142857142*G22_4_13_0 + 7.23214285714292*G22_4_13_1 - 54.2410714285712*G22_4_14_0 - 47.0089285714283*G22_4_14_1 - 10.8482142857142*G22_4_15_0 - 14.4642857142857*G22_4_15_1 + 54.2410714285712*G22_4_16_0 + 28.928571428571*G22_4_16_1 - 4.46274961429793e-14*G22_4_17_0 + 3.61607142857155*G22_4_17_1 - 10.8482142857142*G22_4_18_0 - 7.23214285714301*G22_4_18_1 + 21.6964285714285*G22_4_19_0 + 43.3928571428571*G22_4_19_1 - 80.3571428571428*G22_5_10_0 - 80.3571428571429*G22_5_10_1 + 29.7321428571428*G22_5_11_0 + 2.53992908467142e-13*G22_5_11_1 - 6.4285714285712*G22_5_12_1 - 43.3928571428573*G22_5_13_0 - 14.4642857142857*G22_5_13_1 + 21.6964285714285*G22_5_14_0 + 28.9285714285706*G22_5_14_1 - 216.964285714285*G22_5_15_0 + 4.46444964330439e-13*G22_5_15_1 - 21.6964285714285*G22_5_16_0 + 86.7857142857144*G22_5_16_1 + 144.642857142857*G22_5_17_0 - 72.3214285714285*G22_5_17_1 - 94.0178571428572*G22_5_18_0 + 14.4642857142862*G22_5_18_1 + 260.357142857142*G22_5_19_0 + 43.3928571428565*G22_5_19_1 + 28.125*G22_6_10_0 + 28.125*G22_6_10_1 - 2.81250000000001*G22_6_11_0 - 9.28580036242362e-14*G22_6_11_1 - 28.1249999999999*G22_6_12_1 + 10.8482142857143*G22_6_13_0 + 7.23214285714284*G22_6_13_1 - 54.2410714285712*G22_6_14_0 - 25.3124999999996*G22_6_14_1 + 10.8482142857143*G22_6_15_0 - 43.392857142857*G22_6_15_1 + 54.2410714285712*G22_6_16_0 + 43.3928571428567*G22_6_16_1 - 28.9285714285715*G22_6_17_0 + 25.3125*G22_6_17_1 + 3.61607142857154*G22_6_18_0 - 7.23214285714303*G22_6_18_1 - 21.6964285714286*G22_6_19_0 + 1.6050702433823e-13*G22_6_19_1 - 40.1785714285713*G22_7_10_0 - 40.1785714285714*G22_7_10_1 + 0.401785714285776*G22_7_11_0 + 8.24652219353823e-14*G22_7_11_1 + 0.401785714285856*G22_7_12_1 + 7.23214285714274*G22_7_13_0 - 3.61607142857123*G22_7_13_1 - 3.6160714285714*G22_7_14_0 + 7.23214285714232*G22_7_14_1 - 72.3214285714283*G22_7_15_0 + 36.1607142857144*G22_7_15_1 + 3.61607142857141*G22_7_16_0 + 3.61607142857161*G22_7_16_1 + 36.1607142857145*G22_7_17_0 - 72.3214285714284*G22_7_17_1 + 3.61607142857111*G22_7_18_0 + 3.61607142857163*G22_7_18_1 + 65.0892857142855*G22_7_19_0 + 65.0892857142852*G22_7_19_1 + 20.0892857142857*G22_8_10_0 + 20.0892857142858*G22_8_10_1 - 5.625*G22_8_11_0 - 3.98999081119768e-14*G22_8_11_1 + 5.22321428571421*G22_8_12_1 - 3.61607142857133*G22_8_13_0 - 3.61607142857145*G22_8_13_1 + 7.23214285714284*G22_8_14_0 - 3.61607142857118*G22_8_14_1 + 47.0089285714285*G22_8_15_0 - 7.23214285714296*G22_8_15_1 - 7.23214285714285*G22_8_16_0 - 18.0803571428572*G22_8_16_1 - 28.9285714285715*G22_8_17_0 + 25.3125*G22_8_17_1 + 14.4642857142858*G22_8_18_0 + 3.61607142857126*G22_8_18_1 - 43.3928571428571*G22_8_19_0 - 21.6964285714284*G22_8_19_1 - 24.107142857143*G22_9_10_0 - 24.107142857143*G22_9_10_1 + 2.41071428571437*G22_9_11_0 + 6.45874451709362e-14*G22_9_11_1 - 19.2857142857141*G22_9_12_1 - 43.3928571428571*G22_9_13_0 - 21.6964285714284*G22_9_13_1 - 43.392857142857*G22_9_14_0 - 43.3928571428573*G22_9_14_1 - 130.178571428571*G22_9_15_0 - 21.6964285714282*G22_9_15_1 + 43.392857142857*G22_9_16_0 + 65.0892857142855*G22_9_16_1 + 21.696428571429*G22_9_17_0 - 86.7857142857139*G22_9_17_1 - 4.29566565695108e-13*G22_9_18_0 + 21.6964285714285*G22_9_18_1 + 173.571428571428*G22_9_19_0 + 130.178571428571*G22_9_19_1 - 26.7857142857142*G23_10_10_0 - 26.7857142857141*G23_10_10_1 + 4.6875*G23_10_11_0 - 1.96327547755179e-14*G23_10_11_1 + 0.669642857142897*G23_10_12_1 - 4.01785714285713*G23_10_13_0 - 2.00892857142845*G23_10_13_1 - 10.0446428571428*G23_10_14_0 - 8.03571428571436*G23_10_14_1 - 8.0357142857142*G23_10_15_0 + 40.1785714285712*G23_10_15_1 + 10.0446428571428*G23_10_16_0 - 14.0625*G23_10_16_1 + 44.1964285714284*G23_10_17_0 - 4.01785714285706*G23_10_17_1 - 22.0982142857143*G23_10_18_0 + 2.00892857142852*G23_10_18_1 + 12.0535714285713*G23_10_19_0 + 12.0535714285713*G23_10_19_1 - 4.82142857142856*G23_11_10_0 - 4.82142857142857*G23_11_10_1 + 1.12440438904127e-14*G23_11_11_0 - 3.6160714285714*G23_11_12_1 + 0.401785714285697*G23_11_13_0 - 2.00892857142854*G23_11_13_1 - 5.62499999999998*G23_11_14_0 + 0.401785714285664*G23_11_14_1 - 14.8660714285714*G23_11_15_0 + 1.71494762835067e-14*G23_11_15_1 + 5.62499999999998*G23_11_16_0 + 8.43749999999999*G23_11_16_1 + 7.23214285714288*G23_11_17_0 - 7.63392857142854*G23_11_17_1 - 2.41071428571433*G23_11_18_0 + 2.00892857142857*G23_11_18_1 + 14.4642857142857*G23_11_19_0 + 7.2321428571428*G23_11_19_1 - 5.22321428571427*G23_12_10_0 - 5.22321428571427*G23_12_10_1 - 2.81249999999998*G23_12_11_0 - 1.72996054515353e-14*G23_12_11_1 - 12.0535714285714*G23_12_12_1 + 12.0535714285714*G23_12_13_0 - 0.803571428571365*G23_12_13_1 - 24.1071428571427*G23_12_14_0 - 2.00892857142862*G23_12_14_1 - 12.0535714285714*G23_12_15_0 + 3.21428571428571*G23_12_15_1 + 24.1071428571427*G23_12_16_0 + 14.0624999999999*G23_12_16_1 + 7.63392857142858*G23_12_17_0 - 7.63392857142855*G23_12_17_1 + 0.401785714285668*G23_12_18_0 + 0.803571428571407*G23_12_18_1 + 7.04436509124662e-14*G23_12_19_0 + 9.64285714285713*G23_12_19_1 + 4.41964285714282*G23_13_10_0 + 4.41964285714286*G23_13_10_1 - 4.41964285714283*G23_13_11_0 + 13.6607142857142*G23_13_12_1 - 21.6964285714285*G23_13_13_0 - 14.4642857142857*G23_13_13_1 + 21.6964285714285*G23_13_14_0 - 3.61607142857131*G23_13_14_1 + 21.6964285714284*G23_13_15_0 + 7.23214285714274*G23_13_15_1 - 21.6964285714285*G23_13_16_0 - 25.3124999999999*G23_13_16_1 - 10.8482142857142*G23_13_17_0 + 3.61607142857148*G23_13_17_1 + 10.8482142857142*G23_13_18_0 + 14.4642857142856*G23_13_18_1 + 5.31172328344098e-14*G23_13_19_0 + 9.18987108633473e-14*G23_13_19_1 + 5.62500000000002*G23_14_10_0 + 5.62500000000005*G23_14_10_1 + 5.22321428571426*G23_14_11_0 - 9.04842325156415e-14*G23_14_11_1 - 20.0892857142856*G23_14_12_1 - 10.8482142857142*G23_14_13_0 + 7.23214285714292*G23_14_13_1 - 54.2410714285712*G23_14_14_0 - 47.0089285714283*G23_14_14_1 - 10.8482142857142*G23_14_15_0 - 14.4642857142857*G23_14_15_1 + 54.2410714285712*G23_14_16_0 + 28.928571428571*G23_14_16_1 - 4.46274961429793e-14*G23_14_17_0 + 3.61607142857155*G23_14_17_1 - 10.8482142857142*G23_14_18_0 - 7.23214285714301*G23_14_18_1 + 21.6964285714285*G23_14_19_0 + 43.3928571428571*G23_14_19_1 - 80.3571428571428*G23_15_10_0 - 80.3571428571429*G23_15_10_1 + 29.7321428571428*G23_15_11_0 + 2.53992908467142e-13*G23_15_11_1 - 6.4285714285712*G23_15_12_1 - 43.3928571428573*G23_15_13_0 - 14.4642857142857*G23_15_13_1 + 21.6964285714285*G23_15_14_0 + 28.9285714285706*G23_15_14_1 - 216.964285714285*G23_15_15_0 + 4.46444964330439e-13*G23_15_15_1 - 21.6964285714285*G23_15_16_0 + 86.7857142857144*G23_15_16_1 + 144.642857142857*G23_15_17_0 - 72.3214285714285*G23_15_17_1 - 94.0178571428572*G23_15_18_0 + 14.4642857142862*G23_15_18_1 + 260.357142857142*G23_15_19_0 + 43.3928571428565*G23_15_19_1 + 28.125*G23_16_10_0 + 28.125*G23_16_10_1 - 2.81250000000001*G23_16_11_0 - 9.28580036242362e-14*G23_16_11_1 - 28.1249999999999*G23_16_12_1 + 10.8482142857143*G23_16_13_0 + 7.23214285714284*G23_16_13_1 - 54.2410714285712*G23_16_14_0 - 25.3124999999996*G23_16_14_1 + 10.8482142857143*G23_16_15_0 - 43.392857142857*G23_16_15_1 + 54.2410714285712*G23_16_16_0 + 43.3928571428567*G23_16_16_1 - 28.9285714285715*G23_16_17_0 + 25.3125*G23_16_17_1 + 3.61607142857154*G23_16_18_0 - 7.23214285714303*G23_16_18_1 - 21.6964285714286*G23_16_19_0 + 1.6050702433823e-13*G23_16_19_1 - 40.1785714285713*G23_17_10_0 - 40.1785714285714*G23_17_10_1 + 0.401785714285776*G23_17_11_0 + 8.24652219353823e-14*G23_17_11_1 + 0.401785714285856*G23_17_12_1 + 7.23214285714274*G23_17_13_0 - 3.61607142857123*G23_17_13_1 - 3.6160714285714*G23_17_14_0 + 7.23214285714232*G23_17_14_1 - 72.3214285714283*G23_17_15_0 + 36.1607142857144*G23_17_15_1 + 3.61607142857141*G23_17_16_0 + 3.61607142857161*G23_17_16_1 + 36.1607142857145*G23_17_17_0 - 72.3214285714284*G23_17_17_1 + 3.61607142857111*G23_17_18_0 + 3.61607142857163*G23_17_18_1 + 65.0892857142855*G23_17_19_0 + 65.0892857142852*G23_17_19_1 + 20.0892857142857*G23_18_10_0 + 20.0892857142858*G23_18_10_1 - 5.625*G23_18_11_0 - 3.98999081119768e-14*G23_18_11_1 + 5.22321428571421*G23_18_12_1 - 3.61607142857133*G23_18_13_0 - 3.61607142857145*G23_18_13_1 + 7.23214285714284*G23_18_14_0 - 3.61607142857118*G23_18_14_1 + 47.0089285714285*G23_18_15_0 - 7.23214285714296*G23_18_15_1 - 7.23214285714285*G23_18_16_0 - 18.0803571428572*G23_18_16_1 - 28.9285714285715*G23_18_17_0 + 25.3125*G23_18_17_1 + 14.4642857142858*G23_18_18_0 + 3.61607142857126*G23_18_18_1 - 43.3928571428571*G23_18_19_0 - 21.6964285714284*G23_18_19_1 - 24.107142857143*G23_19_10_0 - 24.107142857143*G23_19_10_1 + 2.41071428571437*G23_19_11_0 + 6.45874451709362e-14*G23_19_11_1 - 19.2857142857141*G23_19_12_1 - 43.3928571428571*G23_19_13_0 - 21.6964285714284*G23_19_13_1 - 43.392857142857*G23_19_14_0 - 43.3928571428573*G23_19_14_1 - 130.178571428571*G23_19_15_0 - 21.6964285714282*G23_19_15_1 + 43.392857142857*G23_19_16_0 + 65.0892857142855*G23_19_16_1 + 21.696428571429*G23_19_17_0 - 86.7857142857139*G23_19_17_1 - 4.29566565695108e-13*G23_19_18_0 + 21.6964285714285*G23_19_18_1 + 173.571428571428*G23_19_19_0 + 130.178571428571*G23_19_19_1 + 13.3928571428571*G26_0_10_0 + 13.3928571428571*G26_0_10_1 - 2.34375*G26_0_11_0 - 0.334821428571448*G26_0_12_1 + 2.00892857142857*G26_0_13_0 + 1.00446428571422*G26_0_13_1 + 5.0223214285714*G26_0_14_0 + 4.01785714285718*G26_0_14_1 + 4.0178571428571*G26_0_15_0 - 20.0892857142856*G26_0_15_1 - 5.02232142857141*G26_0_16_0 + 7.03124999999999*G26_0_16_1 - 22.0982142857142*G26_0_17_0 + 2.00892857142853*G26_0_17_1 + 11.0491071428571*G26_0_18_0 - 1.00446428571426*G26_0_18_1 - 6.02678571428566*G26_0_19_0 - 6.02678571428567*G26_0_19_1 + 2.41071428571428*G26_1_10_0 + 2.41071428571429*G26_1_10_1 + 1.8080357142857*G26_1_12_1 - 0.200892857142849*G26_1_13_0 + 1.00446428571427*G26_1_13_1 + 2.81249999999999*G26_1_14_0 - 0.200892857142832*G26_1_14_1 + 7.43303571428569*G26_1_15_0 - 2.81249999999999*G26_1_16_0 - 4.21875*G26_1_16_1 - 3.61607142857144*G26_1_17_0 + 3.81696428571427*G26_1_17_1 + 1.20535714285716*G26_1_18_0 - 1.00446428571429*G26_1_18_1 - 7.23214285714284*G26_1_19_0 - 3.6160714285714*G26_1_19_1 + 2.61160714285713*G26_2_10_0 + 2.61160714285714*G26_2_10_1 + 1.40624999999999*G26_2_11_0 + 6.02678571428568*G26_2_12_1 - 6.02678571428568*G26_2_13_0 + 0.401785714285682*G26_2_13_1 + 12.0535714285714*G26_2_14_0 + 1.00446428571431*G26_2_14_1 + 6.02678571428572*G26_2_15_0 - 1.60714285714286*G26_2_15_1 - 12.0535714285714*G26_2_16_0 - 7.03124999999996*G26_2_16_1 - 3.81696428571429*G26_2_17_0 + 3.81696428571427*G26_2_17_1 - 0.200892857142834*G26_2_18_0 - 0.401785714285704*G26_2_18_1 - 3.52218254562331e-14*G26_2_19_0 - 4.82142857142857*G26_2_19_1 - 2.20982142857141*G26_3_10_0 - 2.20982142857143*G26_3_10_1 + 2.20982142857142*G26_3_11_0 - 6.83035714285709*G26_3_12_1 + 10.8482142857142*G26_3_13_0 + 7.23214285714286*G26_3_13_1 - 10.8482142857142*G26_3_14_0 + 1.80803571428566*G26_3_14_1 - 10.8482142857142*G26_3_15_0 - 3.61607142857137*G26_3_15_1 + 10.8482142857142*G26_3_16_0 + 12.6562499999999*G26_3_16_1 + 5.42410714285712*G26_3_17_0 - 1.80803571428574*G26_3_17_1 - 5.42410714285712*G26_3_18_0 - 7.23214285714279*G26_3_18_1 - 2.65586164172049e-14*G26_3_19_0 - 4.59493554316737e-14*G26_3_19_1 - 2.81250000000001*G26_4_10_0 - 2.81250000000002*G26_4_10_1 - 2.61160714285713*G26_4_11_0 + 4.52421162578208e-14*G26_4_11_1 + 10.0446428571428*G26_4_12_1 + 5.42410714285712*G26_4_13_0 - 3.61607142857146*G26_4_13_1 + 27.1205357142856*G26_4_14_0 + 23.5044642857141*G26_4_14_1 + 5.42410714285712*G26_4_15_0 + 7.23214285714283*G26_4_15_1 - 27.1205357142856*G26_4_16_0 - 14.4642857142855*G26_4_16_1 + 2.23137480714897e-14*G26_4_17_0 - 1.80803571428577*G26_4_17_1 + 5.42410714285711*G26_4_18_0 + 3.61607142857151*G26_4_18_1 - 10.8482142857142*G26_4_19_0 - 21.6964285714286*G26_4_19_1 + 40.1785714285714*G26_5_10_0 + 40.1785714285714*G26_5_10_1 - 14.8660714285714*G26_5_11_0 - 1.26996454233571e-13*G26_5_11_1 + 3.2142857142856*G26_5_12_1 + 21.6964285714286*G26_5_13_0 + 7.23214285714285*G26_5_13_1 - 10.8482142857143*G26_5_14_0 - 14.4642857142853*G26_5_14_1 + 108.482142857142*G26_5_15_0 - 2.2322248216522e-13*G26_5_15_1 + 10.8482142857142*G26_5_16_0 - 43.3928571428572*G26_5_16_1 - 72.3214285714286*G26_5_17_0 + 36.1607142857143*G26_5_17_1 + 47.0089285714286*G26_5_18_0 - 7.2321428571431*G26_5_18_1 - 130.178571428571*G26_5_19_0 - 21.6964285714282*G26_5_19_1 - 14.0625*G26_6_10_0 - 14.0625*G26_6_10_1 + 1.40625000000001*G26_6_11_0 + 4.64290018121181e-14*G26_6_11_1 + 14.0625*G26_6_12_1 - 5.42410714285715*G26_6_13_0 - 3.61607142857142*G26_6_13_1 + 27.1205357142856*G26_6_14_0 + 12.6562499999998*G26_6_14_1 - 5.42410714285714*G26_6_15_0 + 21.6964285714285*G26_6_15_1 - 27.1205357142856*G26_6_16_0 - 21.6964285714283*G26_6_16_1 + 14.4642857142857*G26_6_17_0 - 12.65625*G26_6_17_1 - 1.80803571428577*G26_6_18_0 + 3.61607142857152*G26_6_18_1 + 10.8482142857143*G26_6_19_0 - 8.0253512169115e-14*G26_6_19_1 + 20.0892857142857*G26_7_10_0 + 20.0892857142857*G26_7_10_1 - 0.200892857142888*G26_7_11_0 - 4.12326109676912e-14*G26_7_11_1 - 0.200892857142928*G26_7_12_1 - 3.61607142857137*G26_7_13_0 + 1.80803571428562*G26_7_13_1 + 1.8080357142857*G26_7_14_0 - 3.61607142857116*G26_7_14_1 + 36.1607142857141*G26_7_15_0 - 18.0803571428572*G26_7_15_1 - 1.80803571428571*G26_7_16_0 - 1.80803571428581*G26_7_16_1 - 18.0803571428572*G26_7_17_0 + 36.1607142857142*G26_7_17_1 - 1.80803571428556*G26_7_18_0 - 1.80803571428582*G26_7_18_1 - 32.5446428571428*G26_7_19_0 - 32.5446428571426*G26_7_19_1 - 10.0446428571429*G26_8_10_0 - 10.0446428571429*G26_8_10_1 + 2.8125*G26_8_11_0 + 1.99499540559884e-14*G26_8_11_1 - 2.61160714285711*G26_8_12_1 + 1.80803571428567*G26_8_13_0 + 1.80803571428573*G26_8_13_1 - 3.61607142857142*G26_8_14_0 + 1.80803571428559*G26_8_14_1 - 23.5044642857142*G26_8_15_0 + 3.61607142857148*G26_8_15_1 + 3.61607142857142*G26_8_16_0 + 9.0401785714286*G26_8_16_1 + 14.4642857142858*G26_8_17_0 - 12.65625*G26_8_17_1 - 7.23214285714291*G26_8_18_0 - 1.80803571428563*G26_8_18_1 + 21.6964285714286*G26_8_19_0 + 10.8482142857142*G26_8_19_1 + 12.0535714285715*G26_9_10_0 + 12.0535714285715*G26_9_10_1 - 1.20535714285719*G26_9_11_0 - 3.22937225854681e-14*G26_9_11_1 + 9.64285714285704*G26_9_12_1 + 21.6964285714286*G26_9_13_0 + 10.8482142857142*G26_9_13_1 + 21.6964285714285*G26_9_14_0 + 21.6964285714286*G26_9_14_1 + 65.0892857142855*G26_9_15_0 + 10.8482142857141*G26_9_15_1 - 21.6964285714285*G26_9_16_0 - 32.5446428571427*G26_9_16_1 - 10.8482142857145*G26_9_17_0 + 43.3928571428569*G26_9_17_1 + 2.14783282847554e-13*G26_9_18_0 - 10.8482142857143*G26_9_18_1 - 86.7857142857141*G26_9_19_0 - 65.0892857142854*G26_9_19_1 + 13.3928571428571*G27_10_10_0 + 13.3928571428571*G27_10_10_1 - 2.34375*G27_10_11_0 - 0.334821428571448*G27_10_12_1 + 2.00892857142857*G27_10_13_0 + 1.00446428571422*G27_10_13_1 + 5.0223214285714*G27_10_14_0 + 4.01785714285718*G27_10_14_1 + 4.0178571428571*G27_10_15_0 - 20.0892857142856*G27_10_15_1 - 5.02232142857141*G27_10_16_0 + 7.03124999999999*G27_10_16_1 - 22.0982142857142*G27_10_17_0 + 2.00892857142853*G27_10_17_1 + 11.0491071428571*G27_10_18_0 - 1.00446428571426*G27_10_18_1 - 6.02678571428566*G27_10_19_0 - 6.02678571428567*G27_10_19_1 + 2.41071428571428*G27_11_10_0 + 2.41071428571429*G27_11_10_1 + 1.8080357142857*G27_11_12_1 - 0.200892857142849*G27_11_13_0 + 1.00446428571427*G27_11_13_1 + 2.81249999999999*G27_11_14_0 - 0.200892857142832*G27_11_14_1 + 7.43303571428569*G27_11_15_0 - 2.81249999999999*G27_11_16_0 - 4.21875*G27_11_16_1 - 3.61607142857144*G27_11_17_0 + 3.81696428571427*G27_11_17_1 + 1.20535714285716*G27_11_18_0 - 1.00446428571429*G27_11_18_1 - 7.23214285714284*G27_11_19_0 - 3.6160714285714*G27_11_19_1 + 2.61160714285713*G27_12_10_0 + 2.61160714285714*G27_12_10_1 + 1.40624999999999*G27_12_11_0 + 6.02678571428568*G27_12_12_1 - 6.02678571428568*G27_12_13_0 + 0.401785714285682*G27_12_13_1 + 12.0535714285714*G27_12_14_0 + 1.00446428571431*G27_12_14_1 + 6.02678571428572*G27_12_15_0 - 1.60714285714286*G27_12_15_1 - 12.0535714285714*G27_12_16_0 - 7.03124999999996*G27_12_16_1 - 3.81696428571429*G27_12_17_0 + 3.81696428571427*G27_12_17_1 - 0.200892857142834*G27_12_18_0 - 0.401785714285704*G27_12_18_1 - 3.52218254562331e-14*G27_12_19_0 - 4.82142857142857*G27_12_19_1 - 2.20982142857141*G27_13_10_0 - 2.20982142857143*G27_13_10_1 + 2.20982142857142*G27_13_11_0 - 6.83035714285709*G27_13_12_1 + 10.8482142857142*G27_13_13_0 + 7.23214285714286*G27_13_13_1 - 10.8482142857142*G27_13_14_0 + 1.80803571428566*G27_13_14_1 - 10.8482142857142*G27_13_15_0 - 3.61607142857137*G27_13_15_1 + 10.8482142857142*G27_13_16_0 + 12.6562499999999*G27_13_16_1 + 5.42410714285712*G27_13_17_0 - 1.80803571428574*G27_13_17_1 - 5.42410714285712*G27_13_18_0 - 7.23214285714279*G27_13_18_1 - 2.65586164172049e-14*G27_13_19_0 - 4.59493554316737e-14*G27_13_19_1 - 2.81250000000001*G27_14_10_0 - 2.81250000000002*G27_14_10_1 - 2.61160714285713*G27_14_11_0 + 4.52421162578208e-14*G27_14_11_1 + 10.0446428571428*G27_14_12_1 + 5.42410714285712*G27_14_13_0 - 3.61607142857146*G27_14_13_1 + 27.1205357142856*G27_14_14_0 + 23.5044642857141*G27_14_14_1 + 5.42410714285712*G27_14_15_0 + 7.23214285714283*G27_14_15_1 - 27.1205357142856*G27_14_16_0 - 14.4642857142855*G27_14_16_1 + 2.23137480714897e-14*G27_14_17_0 - 1.80803571428577*G27_14_17_1 + 5.42410714285711*G27_14_18_0 + 3.61607142857151*G27_14_18_1 - 10.8482142857142*G27_14_19_0 - 21.6964285714286*G27_14_19_1 + 40.1785714285714*G27_15_10_0 + 40.1785714285714*G27_15_10_1 - 14.8660714285714*G27_15_11_0 - 1.26996454233571e-13*G27_15_11_1 + 3.2142857142856*G27_15_12_1 + 21.6964285714286*G27_15_13_0 + 7.23214285714285*G27_15_13_1 - 10.8482142857143*G27_15_14_0 - 14.4642857142853*G27_15_14_1 + 108.482142857142*G27_15_15_0 - 2.2322248216522e-13*G27_15_15_1 + 10.8482142857142*G27_15_16_0 - 43.3928571428572*G27_15_16_1 - 72.3214285714286*G27_15_17_0 + 36.1607142857143*G27_15_17_1 + 47.0089285714286*G27_15_18_0 - 7.2321428571431*G27_15_18_1 - 130.178571428571*G27_15_19_0 - 21.6964285714282*G27_15_19_1 - 14.0625*G27_16_10_0 - 14.0625*G27_16_10_1 + 1.40625000000001*G27_16_11_0 + 4.64290018121181e-14*G27_16_11_1 + 14.0625*G27_16_12_1 - 5.42410714285715*G27_16_13_0 - 3.61607142857142*G27_16_13_1 + 27.1205357142856*G27_16_14_0 + 12.6562499999998*G27_16_14_1 - 5.42410714285714*G27_16_15_0 + 21.6964285714285*G27_16_15_1 - 27.1205357142856*G27_16_16_0 - 21.6964285714283*G27_16_16_1 + 14.4642857142857*G27_16_17_0 - 12.65625*G27_16_17_1 - 1.80803571428577*G27_16_18_0 + 3.61607142857152*G27_16_18_1 + 10.8482142857143*G27_16_19_0 - 8.0253512169115e-14*G27_16_19_1 + 20.0892857142857*G27_17_10_0 + 20.0892857142857*G27_17_10_1 - 0.200892857142888*G27_17_11_0 - 4.12326109676912e-14*G27_17_11_1 - 0.200892857142928*G27_17_12_1 - 3.61607142857137*G27_17_13_0 + 1.80803571428562*G27_17_13_1 + 1.8080357142857*G27_17_14_0 - 3.61607142857116*G27_17_14_1 + 36.1607142857141*G27_17_15_0 - 18.0803571428572*G27_17_15_1 - 1.80803571428571*G27_17_16_0 - 1.80803571428581*G27_17_16_1 - 18.0803571428572*G27_17_17_0 + 36.1607142857142*G27_17_17_1 - 1.80803571428556*G27_17_18_0 - 1.80803571428582*G27_17_18_1 - 32.5446428571428*G27_17_19_0 - 32.5446428571426*G27_17_19_1 - 10.0446428571429*G27_18_10_0 - 10.0446428571429*G27_18_10_1 + 2.8125*G27_18_11_0 + 1.99499540559884e-14*G27_18_11_1 - 2.61160714285711*G27_18_12_1 + 1.80803571428567*G27_18_13_0 + 1.80803571428573*G27_18_13_1 - 3.61607142857142*G27_18_14_0 + 1.80803571428559*G27_18_14_1 - 23.5044642857142*G27_18_15_0 + 3.61607142857148*G27_18_15_1 + 3.61607142857142*G27_18_16_0 + 9.0401785714286*G27_18_16_1 + 14.4642857142858*G27_18_17_0 - 12.65625*G27_18_17_1 - 7.23214285714291*G27_18_18_0 - 1.80803571428563*G27_18_18_1 + 21.6964285714286*G27_18_19_0 + 10.8482142857142*G27_18_19_1 + 12.0535714285715*G27_19_10_0 + 12.0535714285715*G27_19_10_1 - 1.20535714285719*G27_19_11_0 - 3.22937225854681e-14*G27_19_11_1 + 9.64285714285704*G27_19_12_1 + 21.6964285714286*G27_19_13_0 + 10.8482142857142*G27_19_13_1 + 21.6964285714285*G27_19_14_0 + 21.6964285714286*G27_19_14_1 + 65.0892857142855*G27_19_15_0 + 10.8482142857141*G27_19_15_1 - 21.6964285714285*G27_19_16_0 - 32.5446428571427*G27_19_16_1 - 10.8482142857145*G27_19_17_0 + 43.3928571428569*G27_19_17_1 + 2.14783282847554e-13*G27_19_18_0 - 10.8482142857143*G27_19_18_1 - 86.7857142857141*G27_19_19_0 - 65.0892857142854*G27_19_19_1;
    A[16] = 0.0750000000000015*G0_0_0_0 + 0.0750000000000019*G0_0_0_1 - 0.0749999999999998*G0_0_1_0 - 1.42499999999999*G0_0_2_1 + 0.674999999999998*G0_0_3_0 + 0.337500000000005*G0_0_3_1 - 3.37499999999999*G0_0_4_0 - 1.68749999999999*G0_0_4_1 - 0.674999999999999*G0_0_5_0 - 0.337499999999997*G0_0_5_1 + 3.37499999999999*G0_0_6_0 + 1.68749999999998*G0_0_6_1 - 0.337499999999995*G0_0_7_1 - 0.337500000000005*G0_0_8_1 + 2.025*G0_0_9_1 + 0.674999999999996*G0_1_0_0 + 0.674999999999996*G0_1_0_1 - 1.34999999999999*G0_1_2_1 + 0.337500000000005*G0_1_3_0 - 1.68749999999998*G0_1_4_0 + 1.67782454596477e-14*G0_1_4_1 - 2.36249999999999*G0_1_5_0 - 2.69999999999999*G0_1_5_1 + 1.68749999999998*G0_1_6_0 + 3.37499999999998*G0_1_6_1 - 0.337499999999997*G0_1_7_0 - 0.337499999999998*G0_1_8_0 + 2.02499999999999*G0_1_9_0 - 1.25802146477838e-14*G0_1_9_1 + 0.0750000000000015*G1_0_10_0 + 0.0750000000000019*G1_0_10_1 - 0.0749999999999998*G1_0_11_0 - 1.42499999999999*G1_0_12_1 + 0.674999999999998*G1_0_13_0 + 0.337500000000005*G1_0_13_1 - 3.37499999999999*G1_0_14_0 - 1.68749999999999*G1_0_14_1 - 0.674999999999999*G1_0_15_0 - 0.337499999999997*G1_0_15_1 + 3.37499999999999*G1_0_16_0 + 1.68749999999998*G1_0_16_1 - 0.337499999999995*G1_0_17_1 - 0.337500000000005*G1_0_18_1 + 2.025*G1_0_19_1 + 0.674999999999996*G1_1_10_0 + 0.674999999999996*G1_1_10_1 - 1.34999999999999*G1_1_12_1 + 0.337500000000005*G1_1_13_0 - 1.68749999999998*G1_1_14_0 + 1.67782454596477e-14*G1_1_14_1 - 2.36249999999999*G1_1_15_0 - 2.69999999999999*G1_1_15_1 + 1.68749999999998*G1_1_16_0 + 3.37499999999998*G1_1_16_1 - 0.337499999999997*G1_1_17_0 - 0.337499999999998*G1_1_18_0 + 2.02499999999999*G1_1_19_0 - 1.25802146477838e-14*G1_1_19_1 - 0.0375000000000007*G2_0_0_0 - 0.0375000000000009*G2_0_0_1 + 0.0374999999999999*G2_0_1_0 + 0.712499999999997*G2_0_2_1 - 0.337499999999999*G2_0_3_0 - 0.168750000000003*G2_0_3_1 + 1.68749999999999*G2_0_4_0 + 0.843749999999996*G2_0_4_1 + 0.3375*G2_0_5_0 + 0.168749999999999*G2_0_5_1 - 1.68749999999999*G2_0_6_0 - 0.843749999999991*G2_0_6_1 + 0.168749999999998*G2_0_7_1 + 0.168750000000003*G2_0_8_1 - 1.0125*G2_0_9_1 - 0.337499999999998*G2_1_0_0 - 0.337499999999998*G2_1_0_1 + 0.674999999999996*G2_1_2_1 - 0.168750000000003*G2_1_3_0 + 0.84374999999999*G2_1_4_0 + 1.18125*G2_1_5_0 + 1.34999999999999*G2_1_5_1 - 0.843749999999991*G2_1_6_0 - 1.68749999999999*G2_1_6_1 + 0.168749999999999*G2_1_7_0 + 0.168749999999999*G2_1_8_0 - 1.01249999999999*G2_1_9_0 - 0.0375000000000007*G3_0_10_0 - 0.0375000000000009*G3_0_10_1 + 0.0374999999999999*G3_0_11_0 + 0.712499999999997*G3_0_12_1 - 0.337499999999999*G3_0_13_0 - 0.168750000000003*G3_0_13_1 + 1.68749999999999*G3_0_14_0 + 0.843749999999996*G3_0_14_1 + 0.3375*G3_0_15_0 + 0.168749999999999*G3_0_15_1 - 1.68749999999999*G3_0_16_0 - 0.843749999999991*G3_0_16_1 + 0.168749999999998*G3_0_17_1 + 0.168750000000003*G3_0_18_1 - 1.0125*G3_0_19_1 - 0.337499999999998*G3_1_10_0 - 0.337499999999998*G3_1_10_1 + 0.674999999999996*G3_1_12_1 - 0.168750000000003*G3_1_13_0 + 0.84374999999999*G3_1_14_0 + 1.18125*G3_1_15_0 + 1.34999999999999*G3_1_15_1 - 0.843749999999991*G3_1_16_0 - 1.68749999999999*G3_1_16_1 + 0.168749999999999*G3_1_17_0 + 0.168749999999999*G3_1_18_0 - 1.01249999999999*G3_1_19_0 + 0.0750000000000015*G14_0_10_0 + 0.0750000000000019*G14_0_10_1 - 0.0749999999999998*G14_0_11_0 - 1.42499999999999*G14_0_12_1 + 0.674999999999998*G14_0_13_0 + 0.337500000000005*G14_0_13_1 - 3.37499999999999*G14_0_14_0 - 1.68749999999999*G14_0_14_1 - 0.674999999999999*G14_0_15_0 - 0.337499999999997*G14_0_15_1 + 3.37499999999999*G14_0_16_0 + 1.68749999999998*G14_0_16_1 - 0.337499999999995*G14_0_17_1 - 0.337500000000005*G14_0_18_1 + 2.025*G14_0_19_1 + 0.674999999999996*G14_1_10_0 + 0.674999999999996*G14_1_10_1 - 1.34999999999999*G14_1_12_1 + 0.337500000000005*G14_1_13_0 - 1.68749999999998*G14_1_14_0 + 1.67782454596477e-14*G14_1_14_1 - 2.36249999999999*G14_1_15_0 - 2.69999999999999*G14_1_15_1 + 1.68749999999998*G14_1_16_0 + 3.37499999999998*G14_1_16_1 - 0.337499999999997*G14_1_17_0 - 0.337499999999998*G14_1_18_0 + 2.02499999999999*G14_1_19_0 - 1.25802146477838e-14*G14_1_19_1 + 0.0750000000000015*G15_0_10_0 + 0.0750000000000019*G15_0_10_1 - 0.0749999999999998*G15_0_11_0 - 1.42499999999999*G15_0_12_1 + 0.674999999999998*G15_0_13_0 + 0.337500000000005*G15_0_13_1 - 3.37499999999999*G15_0_14_0 - 1.68749999999999*G15_0_14_1 - 0.674999999999999*G15_0_15_0 - 0.337499999999997*G15_0_15_1 + 3.37499999999999*G15_0_16_0 + 1.68749999999998*G15_0_16_1 - 0.337499999999995*G15_0_17_1 - 0.337500000000005*G15_0_18_1 + 2.025*G15_0_19_1 + 0.674999999999996*G15_1_10_0 + 0.674999999999996*G15_1_10_1 - 1.34999999999999*G15_1_12_1 + 0.337500000000005*G15_1_13_0 - 1.68749999999998*G15_1_14_0 + 1.67782454596477e-14*G15_1_14_1 - 2.36249999999999*G15_1_15_0 - 2.69999999999999*G15_1_15_1 + 1.68749999999998*G15_1_16_0 + 3.37499999999998*G15_1_16_1 - 0.337499999999997*G15_1_17_0 - 0.337499999999998*G15_1_18_0 + 2.02499999999999*G15_1_19_0 - 1.25802146477838e-14*G15_1_19_1 - 0.0749999999999997*G16_0_20 - 0.0749999999999997*G16_0_21 + 0.299999999999999*G16_0_22 + 0.299999999999999*G16_0_23 + 0.299999999999999*G16_0_24 + 0.0750000000000001*G16_1_20 + 0.224999999999998*G16_1_22 - 0.300000000000002*G16_1_24 - 0.0375000000000007*G17_0_10_0 - 0.0375000000000009*G17_0_10_1 + 0.0374999999999999*G17_0_11_0 + 0.712499999999997*G17_0_12_1 - 0.337499999999999*G17_0_13_0 - 0.168750000000003*G17_0_13_1 + 1.68749999999999*G17_0_14_0 + 0.843749999999996*G17_0_14_1 + 0.3375*G17_0_15_0 + 0.168749999999999*G17_0_15_1 - 1.68749999999999*G17_0_16_0 - 0.843749999999991*G17_0_16_1 + 0.168749999999998*G17_0_17_1 + 0.168750000000003*G17_0_18_1 - 1.0125*G17_0_19_1 - 0.337499999999998*G17_1_10_0 - 0.337499999999998*G17_1_10_1 + 0.674999999999996*G17_1_12_1 - 0.168750000000003*G17_1_13_0 + 0.84374999999999*G17_1_14_0 + 1.18125*G17_1_15_0 + 1.34999999999999*G17_1_15_1 - 0.843749999999991*G17_1_16_0 - 1.68749999999999*G17_1_16_1 + 0.168749999999999*G17_1_17_0 + 0.168749999999999*G17_1_18_0 - 1.01249999999999*G17_1_19_0 - 0.0375000000000007*G18_0_10_0 - 0.0375000000000009*G18_0_10_1 + 0.0374999999999999*G18_0_11_0 + 0.712499999999997*G18_0_12_1 - 0.337499999999999*G18_0_13_0 - 0.168750000000003*G18_0_13_1 + 1.68749999999999*G18_0_14_0 + 0.843749999999996*G18_0_14_1 + 0.3375*G18_0_15_0 + 0.168749999999999*G18_0_15_1 - 1.68749999999999*G18_0_16_0 - 0.843749999999991*G18_0_16_1 + 0.168749999999998*G18_0_17_1 + 0.168750000000003*G18_0_18_1 - 1.0125*G18_0_19_1 - 0.337499999999998*G18_1_10_0 - 0.337499999999998*G18_1_10_1 + 0.674999999999996*G18_1_12_1 - 0.168750000000003*G18_1_13_0 + 0.84374999999999*G18_1_14_0 + 1.18125*G18_1_15_0 + 1.34999999999999*G18_1_15_1 - 0.843749999999991*G18_1_16_0 - 1.68749999999999*G18_1_16_1 + 0.168749999999999*G18_1_17_0 + 0.168749999999999*G18_1_18_0 - 1.01249999999999*G18_1_19_0 + 0.0374999999999999*G19_0_20 + 0.0374999999999998*G19_0_21 - 0.149999999999999*G19_0_22 - 0.149999999999999*G19_0_23 - 0.149999999999999*G19_0_24 - 0.0375*G19_1_20 - 0.112499999999999*G19_1_22 + 0.150000000000001*G19_1_24 + 12.0535714285714*G22_0_10_0 + 12.0535714285714*G22_0_10_1 - 2.8125*G22_0_11_0 + 1.86427266398022e-14*G22_0_11_1 + 5.22321428571423*G22_0_12_1 - 0.401785714285704*G22_0_13_0 - 0.803571428571496*G22_0_13_1 + 15.2678571428571*G22_0_14_0 + 7.63392857142858*G22_0_14_1 + 10.0446428571428*G22_0_15_0 - 14.0624999999999*G22_0_15_1 - 15.2678571428571*G22_0_16_0 - 3.21428571428565*G22_0_16_1 - 22.0982142857142*G22_0_17_0 + 2.00892857142852*G22_0_17_1 + 12.8571428571429*G22_0_18_0 + 0.803571428571458*G22_0_18_1 - 9.6428571428571*G22_0_19_0 - 9.64285714285707*G22_0_19_1 + 3.61607142857141*G22_1_10_0 + 3.61607142857141*G22_1_10_1 - 1.5595814570335e-14*G22_1_11_0 + 2.75526576712318e-14*G22_1_11_1 + 4.82142857142855*G22_1_12_1 - 4.41964285714285*G22_1_13_0 - 2.00892857142864*G22_1_13_1 + 14.8660714285714*G22_1_14_0 + 7.63392857142855*G22_1_14_1 - 2.81249999999999*G22_1_15_0 - 8.43749999999997*G22_1_15_1 - 14.8660714285714*G22_1_16_0 + 5.8043847506184e-14*G22_1_16_1 - 6.02678571428571*G22_1_17_0 - 0.401785714285759*G22_1_17_1 + 2.41071428571431*G22_1_18_0 + 2.00892857142863*G22_1_18_1 + 7.23214285714284*G22_1_19_0 - 7.23214285714285*G22_1_19_1 - 0.66964285714287*G22_2_10_0 - 0.669642857142857*G22_2_10_1 + 4.68749999999997*G22_2_11_0 + 3.40450677932774e-14*G22_2_11_1 + 26.7857142857141*G22_2_12_1 - 24.1071428571427*G22_2_13_0 - 2.00892857142865*G22_2_13_1 + 48.2142857142855*G22_2_14_0 + 4.01785714285718*G22_2_14_1 + 24.1071428571428*G22_2_15_0 + 14.0624999999999*G22_2_15_1 - 48.2142857142855*G22_2_16_0 - 40.1785714285711*G22_2_16_1 - 2.00892857142857*G22_2_17_0 + 8.03571428571426*G22_2_17_1 - 2.00892857142853*G22_2_18_0 + 2.00892857142861*G22_2_18_1 - 4.41591208044656e-14*G22_2_19_0 - 12.0535714285714*G22_2_19_1 - 5.22321428571423*G22_3_10_0 - 5.22321428571419*G22_3_10_1 - 5.62499999999999*G22_3_11_0 - 9.45204329536158e-14*G22_3_11_1 - 20.0892857142856*G22_3_12_1 + 10.8482142857141*G22_3_13_0 - 3.61607142857139*G22_3_13_1 - 54.2410714285711*G22_3_14_0 - 25.3124999999998*G22_3_14_1 + 10.8482142857142*G22_3_15_0 + 18.080357142857*G22_3_15_1 + 54.2410714285711*G22_3_16_0 + 7.23214285714258*G22_3_16_1 + 10.8482142857142*G22_3_17_0 + 3.61607142857152*G22_3_17_1 + 2.25670176989823e-14*G22_3_18_0 + 3.61607142857131*G22_3_18_1 - 21.6964285714283*G22_3_19_0 + 21.6964285714287*G22_3_19_1 - 0.401785714285763*G22_4_10_0 - 0.401785714285836*G22_4_10_1 + 0.401785714285711*G22_4_11_0 + 1.85004665469257e-13*G22_4_11_1 + 40.1785714285712*G22_4_12_1 - 2.34812169708221e-14*G22_4_13_0 - 3.61607142857161*G22_4_13_1 + 108.482142857142*G22_4_14_0 + 72.321428571428*G22_4_14_1 + 3.81916720471054e-14*G22_4_15_0 - 3.61607142857137*G22_4_15_1 - 108.482142857142*G22_4_16_0 - 36.1607142857136*G22_4_16_1 - 10.8482142857142*G22_4_17_0 - 7.23214285714311*G22_4_17_1 + 10.8482142857143*G22_4_18_0 + 3.61607142857178*G22_4_18_1 - 65.0892857142857*G22_4_19_1 + 28.125*G22_5_10_0 + 28.125*G22_5_10_1 - 2.81250000000001*G22_5_11_0 - 9.28580036242362e-14*G22_5_11_1 - 28.1249999999999*G22_5_12_1 + 10.8482142857143*G22_5_13_0 + 7.23214285714284*G22_5_13_1 - 54.2410714285712*G22_5_14_0 - 25.3124999999996*G22_5_14_1 + 10.8482142857143*G22_5_15_0 - 43.392857142857*G22_5_15_1 + 54.2410714285712*G22_5_16_0 + 43.3928571428567*G22_5_16_1 - 28.9285714285715*G22_5_17_0 + 25.3125*G22_5_17_1 + 3.61607142857154*G22_5_18_0 - 7.23214285714304*G22_5_18_1 - 21.6964285714286*G22_5_19_0 + 1.53400729618891e-13*G22_5_19_1 + 6.42857142857123*G22_6_10_0 + 6.4285714285711*G22_6_10_1 + 29.7321428571428*G22_6_11_0 + 4.24200165781186e-13*G22_6_11_1 + 80.3571428571425*G22_6_12_1 - 108.482142857143*G22_6_13_0 - 14.4642857142863*G22_6_13_1 + 216.964285714285*G22_6_14_0 + 72.3214285714279*G22_6_14_1 - 108.482142857142*G22_6_15_0 - 86.7857142857137*G22_6_15_1 - 216.964285714285*G22_6_16_0 + 8.57449528046672e-13*G22_6_16_1 - 7.23214285714259*G22_6_17_0 - 28.9285714285717*G22_6_17_1 - 28.9285714285714*G22_6_18_0 + 14.4642857142864*G22_6_18_1 + 216.964285714285*G22_6_19_0 - 43.3928571428574*G22_6_19_1 + 20.0892857142857*G22_7_10_0 + 20.0892857142857*G22_7_10_1 + 5.22321428571423*G22_7_11_0 - 4.25653138234058e-14*G22_7_11_1 - 5.62500000000006*G22_7_12_1 - 3.61607142857133*G22_7_13_0 + 7.23214285714275*G22_7_13_1 - 3.61607142857144*G22_7_14_0 - 3.61607142857114*G22_7_14_1 + 25.3125*G22_7_15_0 - 28.9285714285714*G22_7_15_1 + 3.61607142857144*G22_7_16_0 + 14.4642857142855*G22_7_16_1 - 7.23214285714301*G22_7_17_0 + 47.0089285714285*G22_7_17_1 - 18.0803571428569*G22_7_18_0 - 7.23214285714295*G22_7_18_1 - 21.6964285714286*G22_7_19_0 - 43.3928571428569*G22_7_19_1 - 13.6607142857143*G22_8_10_0 - 13.6607142857142*G22_8_10_1 - 4.41964285714284*G22_8_11_0 - 2.65814518476759e-14*G22_8_11_1 - 4.41964285714286*G22_8_12_1 - 3.61607142857145*G22_8_13_0 - 14.4642857142857*G22_8_13_1 - 14.4642857142857*G22_8_14_0 - 3.61607142857139*G22_8_14_1 + 3.61607142857138*G22_8_15_0 + 25.3124999999999*G22_8_15_1 + 14.4642857142857*G22_8_16_0 - 7.23214285714289*G22_8_16_1 + 25.3125*G22_8_17_0 + 3.61607142857153*G22_8_17_1 - 7.23214285714289*G22_8_18_0 + 14.4642857142856*G22_8_18_1 + 7.21541424698879e-14*G22_8_19_0 + 8.43033867541088e-14*G22_8_19_1 + 19.2857142857142*G22_9_10_0 + 19.2857142857142*G22_9_10_1 + 2.41071428571426*G22_9_11_0 + 2.04961862571895e-13*G22_9_11_1 + 24.1071428571427*G22_9_12_1 - 21.6964285714287*G22_9_13_0 - 21.696428571429*G22_9_13_1 + 108.482142857142*G22_9_14_0 + 86.7857142857139*G22_9_14_1 - 21.6964285714283*G22_9_15_0 - 65.0892857142855*G22_9_15_1 - 108.482142857142*G22_9_16_0 + 21.6964285714289*G22_9_16_1 - 2.07804693591607e-14*G22_9_17_0 + 43.3928571428569*G22_9_17_1 - 21.6964285714284*G22_9_18_0 + 21.6964285714288*G22_9_18_1 + 43.392857142857*G22_9_19_0 - 130.178571428571*G22_9_19_1 + 12.0535714285714*G23_10_10_0 + 12.0535714285714*G23_10_10_1 - 2.8125*G23_10_11_0 + 1.86427266398022e-14*G23_10_11_1 + 5.22321428571423*G23_10_12_1 - 0.401785714285704*G23_10_13_0 - 0.803571428571496*G23_10_13_1 + 15.2678571428571*G23_10_14_0 + 7.63392857142858*G23_10_14_1 + 10.0446428571428*G23_10_15_0 - 14.0624999999999*G23_10_15_1 - 15.2678571428571*G23_10_16_0 - 3.21428571428565*G23_10_16_1 - 22.0982142857142*G23_10_17_0 + 2.00892857142852*G23_10_17_1 + 12.8571428571429*G23_10_18_0 + 0.803571428571458*G23_10_18_1 - 9.6428571428571*G23_10_19_0 - 9.64285714285707*G23_10_19_1 + 3.61607142857141*G23_11_10_0 + 3.61607142857141*G23_11_10_1 - 1.5595814570335e-14*G23_11_11_0 + 2.75526576712318e-14*G23_11_11_1 + 4.82142857142855*G23_11_12_1 - 4.41964285714285*G23_11_13_0 - 2.00892857142864*G23_11_13_1 + 14.8660714285714*G23_11_14_0 + 7.63392857142855*G23_11_14_1 - 2.81249999999999*G23_11_15_0 - 8.43749999999997*G23_11_15_1 - 14.8660714285714*G23_11_16_0 + 5.8043847506184e-14*G23_11_16_1 - 6.02678571428571*G23_11_17_0 - 0.401785714285759*G23_11_17_1 + 2.41071428571431*G23_11_18_0 + 2.00892857142863*G23_11_18_1 + 7.23214285714284*G23_11_19_0 - 7.23214285714285*G23_11_19_1 - 0.66964285714287*G23_12_10_0 - 0.669642857142857*G23_12_10_1 + 4.68749999999997*G23_12_11_0 + 3.40450677932774e-14*G23_12_11_1 + 26.7857142857141*G23_12_12_1 - 24.1071428571427*G23_12_13_0 - 2.00892857142865*G23_12_13_1 + 48.2142857142855*G23_12_14_0 + 4.01785714285718*G23_12_14_1 + 24.1071428571428*G23_12_15_0 + 14.0624999999999*G23_12_15_1 - 48.2142857142855*G23_12_16_0 - 40.1785714285711*G23_12_16_1 - 2.00892857142857*G23_12_17_0 + 8.03571428571426*G23_12_17_1 - 2.00892857142853*G23_12_18_0 + 2.00892857142861*G23_12_18_1 - 4.41591208044656e-14*G23_12_19_0 - 12.0535714285714*G23_12_19_1 - 5.22321428571423*G23_13_10_0 - 5.22321428571419*G23_13_10_1 - 5.62499999999999*G23_13_11_0 - 9.45204329536158e-14*G23_13_11_1 - 20.0892857142856*G23_13_12_1 + 10.8482142857141*G23_13_13_0 - 3.61607142857139*G23_13_13_1 - 54.2410714285711*G23_13_14_0 - 25.3124999999998*G23_13_14_1 + 10.8482142857142*G23_13_15_0 + 18.080357142857*G23_13_15_1 + 54.2410714285711*G23_13_16_0 + 7.23214285714258*G23_13_16_1 + 10.8482142857142*G23_13_17_0 + 3.61607142857152*G23_13_17_1 + 2.25670176989823e-14*G23_13_18_0 + 3.61607142857131*G23_13_18_1 - 21.6964285714283*G23_13_19_0 + 21.6964285714287*G23_13_19_1 - 0.401785714285763*G23_14_10_0 - 0.401785714285836*G23_14_10_1 + 0.401785714285711*G23_14_11_0 + 1.85004665469257e-13*G23_14_11_1 + 40.1785714285712*G23_14_12_1 - 2.34812169708221e-14*G23_14_13_0 - 3.61607142857161*G23_14_13_1 + 108.482142857142*G23_14_14_0 + 72.321428571428*G23_14_14_1 + 3.81916720471054e-14*G23_14_15_0 - 3.61607142857137*G23_14_15_1 - 108.482142857142*G23_14_16_0 - 36.1607142857136*G23_14_16_1 - 10.8482142857142*G23_14_17_0 - 7.23214285714311*G23_14_17_1 + 10.8482142857143*G23_14_18_0 + 3.61607142857178*G23_14_18_1 - 65.0892857142857*G23_14_19_1 + 28.125*G23_15_10_0 + 28.125*G23_15_10_1 - 2.81250000000001*G23_15_11_0 - 9.28580036242362e-14*G23_15_11_1 - 28.1249999999999*G23_15_12_1 + 10.8482142857143*G23_15_13_0 + 7.23214285714284*G23_15_13_1 - 54.2410714285712*G23_15_14_0 - 25.3124999999996*G23_15_14_1 + 10.8482142857143*G23_15_15_0 - 43.392857142857*G23_15_15_1 + 54.2410714285712*G23_15_16_0 + 43.3928571428567*G23_15_16_1 - 28.9285714285715*G23_15_17_0 + 25.3125*G23_15_17_1 + 3.61607142857154*G23_15_18_0 - 7.23214285714304*G23_15_18_1 - 21.6964285714286*G23_15_19_0 + 1.53400729618891e-13*G23_15_19_1 + 6.42857142857123*G23_16_10_0 + 6.4285714285711*G23_16_10_1 + 29.7321428571428*G23_16_11_0 + 4.24200165781186e-13*G23_16_11_1 + 80.3571428571425*G23_16_12_1 - 108.482142857143*G23_16_13_0 - 14.4642857142863*G23_16_13_1 + 216.964285714285*G23_16_14_0 + 72.3214285714279*G23_16_14_1 - 108.482142857142*G23_16_15_0 - 86.7857142857137*G23_16_15_1 - 216.964285714285*G23_16_16_0 + 8.57449528046672e-13*G23_16_16_1 - 7.23214285714259*G23_16_17_0 - 28.9285714285717*G23_16_17_1 - 28.9285714285714*G23_16_18_0 + 14.4642857142864*G23_16_18_1 + 216.964285714285*G23_16_19_0 - 43.3928571428574*G23_16_19_1 + 20.0892857142857*G23_17_10_0 + 20.0892857142857*G23_17_10_1 + 5.22321428571423*G23_17_11_0 - 4.25653138234058e-14*G23_17_11_1 - 5.62500000000006*G23_17_12_1 - 3.61607142857133*G23_17_13_0 + 7.23214285714275*G23_17_13_1 - 3.61607142857144*G23_17_14_0 - 3.61607142857114*G23_17_14_1 + 25.3125*G23_17_15_0 - 28.9285714285714*G23_17_15_1 + 3.61607142857144*G23_17_16_0 + 14.4642857142855*G23_17_16_1 - 7.23214285714301*G23_17_17_0 + 47.0089285714285*G23_17_17_1 - 18.0803571428569*G23_17_18_0 - 7.23214285714295*G23_17_18_1 - 21.6964285714286*G23_17_19_0 - 43.3928571428569*G23_17_19_1 - 13.6607142857143*G23_18_10_0 - 13.6607142857142*G23_18_10_1 - 4.41964285714284*G23_18_11_0 - 2.65814518476759e-14*G23_18_11_1 - 4.41964285714286*G23_18_12_1 - 3.61607142857145*G23_18_13_0 - 14.4642857142857*G23_18_13_1 - 14.4642857142857*G23_18_14_0 - 3.61607142857139*G23_18_14_1 + 3.61607142857138*G23_18_15_0 + 25.3124999999999*G23_18_15_1 + 14.4642857142857*G23_18_16_0 - 7.23214285714289*G23_18_16_1 + 25.3125*G23_18_17_0 + 3.61607142857153*G23_18_17_1 - 7.23214285714289*G23_18_18_0 + 14.4642857142856*G23_18_18_1 + 7.21541424698879e-14*G23_18_19_0 + 8.43033867541088e-14*G23_18_19_1 + 19.2857142857142*G23_19_10_0 + 19.2857142857142*G23_19_10_1 + 2.41071428571426*G23_19_11_0 + 2.04961862571895e-13*G23_19_11_1 + 24.1071428571427*G23_19_12_1 - 21.6964285714287*G23_19_13_0 - 21.696428571429*G23_19_13_1 + 108.482142857142*G23_19_14_0 + 86.7857142857139*G23_19_14_1 - 21.6964285714283*G23_19_15_0 - 65.0892857142855*G23_19_15_1 - 108.482142857142*G23_19_16_0 + 21.6964285714289*G23_19_16_1 - 2.07804693591607e-14*G23_19_17_0 + 43.3928571428569*G23_19_17_1 - 21.6964285714284*G23_19_18_0 + 21.6964285714288*G23_19_18_1 + 43.392857142857*G23_19_19_0 - 130.178571428571*G23_19_19_1 - 6.02678571428569*G26_0_10_0 - 6.02678571428569*G26_0_10_1 + 1.40625*G26_0_11_0 - 2.61160714285712*G26_0_12_1 + 0.200892857142852*G26_0_13_0 + 0.401785714285748*G26_0_13_1 - 7.63392857142853*G26_0_14_0 - 3.81696428571429*G26_0_14_1 - 5.02232142857141*G26_0_15_0 + 7.03124999999997*G26_0_15_1 + 7.63392857142853*G26_0_16_0 + 1.60714285714283*G26_0_16_1 + 11.0491071428571*G26_0_17_0 - 1.00446428571426*G26_0_17_1 - 6.42857142857143*G26_0_18_0 - 0.401785714285729*G26_0_18_1 + 4.82142857142855*G26_0_19_0 + 4.82142857142854*G26_0_19_1 - 1.80803571428571*G26_1_10_0 - 1.8080357142857*G26_1_10_1 - 1.37763288356159e-14*G26_1_11_1 - 2.41071428571427*G26_1_12_1 + 2.20982142857143*G26_1_13_0 + 1.00446428571432*G26_1_13_1 - 7.43303571428569*G26_1_14_0 - 3.81696428571428*G26_1_14_1 + 1.40624999999999*G26_1_15_0 + 4.21874999999999*G26_1_15_1 + 7.43303571428569*G26_1_16_0 - 2.9021923753092e-14*G26_1_16_1 + 3.01339285714286*G26_1_17_0 + 0.200892857142879*G26_1_17_1 - 1.20535714285716*G26_1_18_0 - 1.00446428571431*G26_1_18_1 - 3.61607142857142*G26_1_19_0 + 3.61607142857142*G26_1_19_1 + 0.334821428571435*G26_2_10_0 + 0.334821428571429*G26_2_10_1 - 2.34374999999998*G26_2_11_0 - 1.70225338966387e-14*G26_2_11_1 - 13.3928571428571*G26_2_12_1 + 12.0535714285714*G26_2_13_0 + 1.00446428571433*G26_2_13_1 - 24.1071428571427*G26_2_14_0 - 2.00892857142859*G26_2_14_1 - 12.0535714285714*G26_2_15_0 - 7.03124999999994*G26_2_15_1 + 24.1071428571427*G26_2_16_0 + 20.0892857142856*G26_2_16_1 + 1.00446428571429*G26_2_17_0 - 4.01785714285713*G26_2_17_1 + 1.00446428571427*G26_2_18_0 - 1.0044642857143*G26_2_18_1 + 2.20795604022328e-14*G26_2_19_0 + 6.02678571428572*G26_2_19_1 + 2.61160714285711*G26_3_10_0 + 2.61160714285709*G26_3_10_1 + 2.8125*G26_3_11_0 + 4.72602164768079e-14*G26_3_11_1 + 10.0446428571428*G26_3_12_1 - 5.42410714285707*G26_3_13_0 + 1.80803571428569*G26_3_13_1 + 27.1205357142856*G26_3_14_0 + 12.6562499999999*G26_3_14_1 - 5.42410714285708*G26_3_15_0 - 9.04017857142849*G26_3_15_1 - 27.1205357142856*G26_3_16_0 - 3.61607142857129*G26_3_16_1 - 5.4241071428571*G26_3_17_0 - 1.80803571428576*G26_3_17_1 - 1.12835088494911e-14*G26_3_18_0 - 1.80803571428565*G26_3_18_1 + 10.8482142857142*G26_3_19_0 - 10.8482142857143*G26_3_19_1 + 0.200892857142881*G26_4_10_0 + 0.200892857142918*G26_4_10_1 - 0.200892857142856*G26_4_11_0 - 9.25023327346287e-14*G26_4_11_1 - 20.0892857142856*G26_4_12_1 + 1.1740608485411e-14*G26_4_13_0 + 1.8080357142858*G26_4_13_1 - 54.2410714285712*G26_4_14_0 - 36.160714285714*G26_4_14_1 - 1.90958360235527e-14*G26_4_15_0 + 1.80803571428569*G26_4_15_1 + 54.2410714285712*G26_4_16_0 + 18.0803571428568*G26_4_16_1 + 5.42410714285711*G26_4_17_0 + 3.61607142857156*G26_4_17_1 - 5.42410714285713*G26_4_18_0 - 1.80803571428589*G26_4_18_1 + 32.5446428571428*G26_4_19_1 - 14.0625*G26_5_10_0 - 14.0625*G26_5_10_1 + 1.40625000000001*G26_5_11_0 + 4.64290018121181e-14*G26_5_11_1 + 14.0625*G26_5_12_1 - 5.42410714285715*G26_5_13_0 - 3.61607142857142*G26_5_13_1 + 27.1205357142856*G26_5_14_0 + 12.6562499999998*G26_5_14_1 - 5.42410714285715*G26_5_15_0 + 21.6964285714285*G26_5_15_1 - 27.1205357142856*G26_5_16_0 - 21.6964285714283*G26_5_16_1 + 14.4642857142857*G26_5_17_0 - 12.65625*G26_5_17_1 - 1.80803571428577*G26_5_18_0 + 3.61607142857152*G26_5_18_1 + 10.8482142857143*G26_5_19_0 - 7.67003648094455e-14*G26_5_19_1 - 3.21428571428561*G26_6_10_0 - 3.21428571428555*G26_6_10_1 - 14.8660714285714*G26_6_11_0 - 2.12100082890593e-13*G26_6_11_1 - 40.1785714285712*G26_6_12_1 + 54.2410714285713*G26_6_13_0 + 7.23214285714313*G26_6_13_1 - 108.482142857142*G26_6_14_0 - 36.1607142857139*G26_6_14_1 + 54.2410714285712*G26_6_15_0 + 43.3928571428569*G26_6_15_1 + 108.482142857142*G26_6_16_0 - 4.28724764023336e-13*G26_6_16_1 + 3.6160714285713*G26_6_17_0 + 14.4642857142859*G26_6_17_1 + 14.4642857142857*G26_6_18_0 - 7.23214285714319*G26_6_18_1 - 108.482142857142*G26_6_19_0 + 21.6964285714287*G26_6_19_1 - 10.0446428571428*G26_7_10_0 - 10.0446428571429*G26_7_10_1 - 2.61160714285711*G26_7_11_0 + 2.12826569117029e-14*G26_7_11_1 + 2.81250000000003*G26_7_12_1 + 1.80803571428566*G26_7_13_0 - 3.61607142857138*G26_7_13_1 + 1.80803571428572*G26_7_14_0 + 1.80803571428557*G26_7_14_1 - 12.65625*G26_7_15_0 + 14.4642857142857*G26_7_15_1 - 1.80803571428572*G26_7_16_0 - 7.23214285714277*G26_7_16_1 + 3.6160714285715*G26_7_17_0 - 23.5044642857142*G26_7_17_1 + 9.04017857142845*G26_7_18_0 + 3.61607142857148*G26_7_18_1 + 10.8482142857143*G26_7_19_0 + 21.6964285714284*G26_7_19_1 + 6.83035714285713*G26_8_10_0 + 6.83035714285711*G26_8_10_1 + 2.20982142857142*G26_8_11_0 + 1.32907259238379e-14*G26_8_11_1 + 2.20982142857143*G26_8_12_1 + 1.80803571428573*G26_8_13_0 + 7.23214285714283*G26_8_13_1 + 7.23214285714284*G26_8_14_0 + 1.8080357142857*G26_8_14_1 - 1.80803571428569*G26_8_15_0 - 12.6562499999999*G26_8_15_1 - 7.23214285714285*G26_8_16_0 + 3.61607142857145*G26_8_16_1 - 12.65625*G26_8_17_0 - 1.80803571428576*G26_8_17_1 + 3.61607142857144*G26_8_18_0 - 7.23214285714279*G26_8_18_1 - 3.6077071234944e-14*G26_8_19_0 - 4.21516933770544e-14*G26_8_19_1 - 9.64285714285709*G26_9_10_0 - 9.64285714285708*G26_9_10_1 - 1.20535714285713*G26_9_11_0 - 1.02480931285948e-13*G26_9_11_1 - 12.0535714285713*G26_9_12_1 + 10.8482142857144*G26_9_13_0 + 10.8482142857145*G26_9_13_1 - 54.2410714285712*G26_9_14_0 - 43.3928571428569*G26_9_14_1 + 10.8482142857142*G26_9_15_0 + 32.5446428571428*G26_9_15_1 + 54.2410714285712*G26_9_16_0 - 10.8482142857144*G26_9_16_1 + 1.03902346795803e-14*G26_9_17_0 - 21.6964285714285*G26_9_17_1 + 10.8482142857142*G26_9_18_0 - 10.8482142857144*G26_9_18_1 - 21.6964285714285*G26_9_19_0 + 65.0892857142855*G26_9_19_1 - 6.02678571428569*G27_10_10_0 - 6.02678571428569*G27_10_10_1 + 1.40625*G27_10_11_0 - 2.61160714285712*G27_10_12_1 + 0.200892857142852*G27_10_13_0 + 0.401785714285748*G27_10_13_1 - 7.63392857142853*G27_10_14_0 - 3.81696428571429*G27_10_14_1 - 5.02232142857141*G27_10_15_0 + 7.03124999999997*G27_10_15_1 + 7.63392857142853*G27_10_16_0 + 1.60714285714283*G27_10_16_1 + 11.0491071428571*G27_10_17_0 - 1.00446428571426*G27_10_17_1 - 6.42857142857143*G27_10_18_0 - 0.401785714285729*G27_10_18_1 + 4.82142857142855*G27_10_19_0 + 4.82142857142854*G27_10_19_1 - 1.80803571428571*G27_11_10_0 - 1.8080357142857*G27_11_10_1 - 1.37763288356159e-14*G27_11_11_1 - 2.41071428571427*G27_11_12_1 + 2.20982142857143*G27_11_13_0 + 1.00446428571432*G27_11_13_1 - 7.43303571428569*G27_11_14_0 - 3.81696428571428*G27_11_14_1 + 1.40624999999999*G27_11_15_0 + 4.21874999999999*G27_11_15_1 + 7.43303571428569*G27_11_16_0 - 2.9021923753092e-14*G27_11_16_1 + 3.01339285714286*G27_11_17_0 + 0.200892857142879*G27_11_17_1 - 1.20535714285716*G27_11_18_0 - 1.00446428571431*G27_11_18_1 - 3.61607142857142*G27_11_19_0 + 3.61607142857142*G27_11_19_1 + 0.334821428571435*G27_12_10_0 + 0.334821428571429*G27_12_10_1 - 2.34374999999998*G27_12_11_0 - 1.70225338966387e-14*G27_12_11_1 - 13.3928571428571*G27_12_12_1 + 12.0535714285714*G27_12_13_0 + 1.00446428571433*G27_12_13_1 - 24.1071428571427*G27_12_14_0 - 2.00892857142859*G27_12_14_1 - 12.0535714285714*G27_12_15_0 - 7.03124999999994*G27_12_15_1 + 24.1071428571427*G27_12_16_0 + 20.0892857142856*G27_12_16_1 + 1.00446428571429*G27_12_17_0 - 4.01785714285713*G27_12_17_1 + 1.00446428571427*G27_12_18_0 - 1.0044642857143*G27_12_18_1 + 2.20795604022328e-14*G27_12_19_0 + 6.02678571428572*G27_12_19_1 + 2.61160714285711*G27_13_10_0 + 2.61160714285709*G27_13_10_1 + 2.8125*G27_13_11_0 + 4.72602164768079e-14*G27_13_11_1 + 10.0446428571428*G27_13_12_1 - 5.42410714285707*G27_13_13_0 + 1.80803571428569*G27_13_13_1 + 27.1205357142856*G27_13_14_0 + 12.6562499999999*G27_13_14_1 - 5.42410714285708*G27_13_15_0 - 9.04017857142849*G27_13_15_1 - 27.1205357142856*G27_13_16_0 - 3.61607142857129*G27_13_16_1 - 5.4241071428571*G27_13_17_0 - 1.80803571428576*G27_13_17_1 - 1.12835088494911e-14*G27_13_18_0 - 1.80803571428565*G27_13_18_1 + 10.8482142857142*G27_13_19_0 - 10.8482142857143*G27_13_19_1 + 0.200892857142881*G27_14_10_0 + 0.200892857142918*G27_14_10_1 - 0.200892857142856*G27_14_11_0 - 9.25023327346287e-14*G27_14_11_1 - 20.0892857142856*G27_14_12_1 + 1.1740608485411e-14*G27_14_13_0 + 1.8080357142858*G27_14_13_1 - 54.2410714285712*G27_14_14_0 - 36.160714285714*G27_14_14_1 - 1.90958360235527e-14*G27_14_15_0 + 1.80803571428569*G27_14_15_1 + 54.2410714285712*G27_14_16_0 + 18.0803571428568*G27_14_16_1 + 5.42410714285711*G27_14_17_0 + 3.61607142857156*G27_14_17_1 - 5.42410714285713*G27_14_18_0 - 1.80803571428589*G27_14_18_1 + 32.5446428571428*G27_14_19_1 - 14.0625*G27_15_10_0 - 14.0625*G27_15_10_1 + 1.40625000000001*G27_15_11_0 + 4.64290018121181e-14*G27_15_11_1 + 14.0625*G27_15_12_1 - 5.42410714285715*G27_15_13_0 - 3.61607142857142*G27_15_13_1 + 27.1205357142856*G27_15_14_0 + 12.6562499999998*G27_15_14_1 - 5.42410714285715*G27_15_15_0 + 21.6964285714285*G27_15_15_1 - 27.1205357142856*G27_15_16_0 - 21.6964285714283*G27_15_16_1 + 14.4642857142857*G27_15_17_0 - 12.65625*G27_15_17_1 - 1.80803571428577*G27_15_18_0 + 3.61607142857152*G27_15_18_1 + 10.8482142857143*G27_15_19_0 - 7.67003648094455e-14*G27_15_19_1 - 3.21428571428561*G27_16_10_0 - 3.21428571428555*G27_16_10_1 - 14.8660714285714*G27_16_11_0 - 2.12100082890593e-13*G27_16_11_1 - 40.1785714285712*G27_16_12_1 + 54.2410714285713*G27_16_13_0 + 7.23214285714313*G27_16_13_1 - 108.482142857142*G27_16_14_0 - 36.1607142857139*G27_16_14_1 + 54.2410714285712*G27_16_15_0 + 43.3928571428569*G27_16_15_1 + 108.482142857142*G27_16_16_0 - 4.28724764023336e-13*G27_16_16_1 + 3.6160714285713*G27_16_17_0 + 14.4642857142859*G27_16_17_1 + 14.4642857142857*G27_16_18_0 - 7.23214285714319*G27_16_18_1 - 108.482142857142*G27_16_19_0 + 21.6964285714287*G27_16_19_1 - 10.0446428571428*G27_17_10_0 - 10.0446428571429*G27_17_10_1 - 2.61160714285711*G27_17_11_0 + 2.12826569117029e-14*G27_17_11_1 + 2.81250000000003*G27_17_12_1 + 1.80803571428566*G27_17_13_0 - 3.61607142857138*G27_17_13_1 + 1.80803571428572*G27_17_14_0 + 1.80803571428557*G27_17_14_1 - 12.65625*G27_17_15_0 + 14.4642857142857*G27_17_15_1 - 1.80803571428572*G27_17_16_0 - 7.23214285714277*G27_17_16_1 + 3.6160714285715*G27_17_17_0 - 23.5044642857142*G27_17_17_1 + 9.04017857142845*G27_17_18_0 + 3.61607142857148*G27_17_18_1 + 10.8482142857143*G27_17_19_0 + 21.6964285714284*G27_17_19_1 + 6.83035714285713*G27_18_10_0 + 6.83035714285711*G27_18_10_1 + 2.20982142857142*G27_18_11_0 + 1.32907259238379e-14*G27_18_11_1 + 2.20982142857143*G27_18_12_1 + 1.80803571428573*G27_18_13_0 + 7.23214285714283*G27_18_13_1 + 7.23214285714284*G27_18_14_0 + 1.8080357142857*G27_18_14_1 - 1.80803571428569*G27_18_15_0 - 12.6562499999999*G27_18_15_1 - 7.23214285714285*G27_18_16_0 + 3.61607142857145*G27_18_16_1 - 12.65625*G27_18_17_0 - 1.80803571428576*G27_18_17_1 + 3.61607142857144*G27_18_18_0 - 7.23214285714279*G27_18_18_1 - 3.6077071234944e-14*G27_18_19_0 - 4.21516933770544e-14*G27_18_19_1 - 9.64285714285709*G27_19_10_0 - 9.64285714285708*G27_19_10_1 - 1.20535714285713*G27_19_11_0 - 1.02480931285948e-13*G27_19_11_1 - 12.0535714285713*G27_19_12_1 + 10.8482142857144*G27_19_13_0 + 10.8482142857145*G27_19_13_1 - 54.2410714285712*G27_19_14_0 - 43.3928571428569*G27_19_14_1 + 10.8482142857142*G27_19_15_0 + 32.5446428571428*G27_19_15_1 + 54.2410714285712*G27_19_16_0 - 10.8482142857144*G27_19_16_1 + 1.03902346795803e-14*G27_19_17_0 - 21.6964285714285*G27_19_17_1 + 10.8482142857142*G27_19_18_0 - 10.8482142857144*G27_19_18_1 - 21.6964285714285*G27_19_19_0 + 65.0892857142855*G27_19_19_1;
    A[17] = -1.35*G0_0_0_0 - 1.35*G0_0_0_1 + 0.674999999999993*G0_0_1_0 + 0.33749999999999*G0_0_3_1 + 0.337499999999997*G0_0_4_1 + 1.68749999999999*G0_0_5_1 - 0.337499999999997*G0_0_6_1 + 3.37499999999999*G0_0_7_0 + 1.68749999999998*G0_0_7_1 - 2.69999999999998*G0_0_8_0 - 0.337499999999988*G0_0_8_1 + 1.64412754244392e-14*G0_0_9_0 - 2.02499999999998*G0_0_9_1 + 0.0750000000000024*G0_1_0_0 + 0.075000000000004*G0_1_0_1 + 0.599999999999989*G0_1_1_0 - 0.075000000000005*G0_1_2_1 + 0.337499999999988*G0_1_3_0 + 0.674999999999976*G0_1_3_1 + 0.337499999999995*G0_1_4_0 + 0.675000000000003*G0_1_4_1 + 1.68749999999999*G0_1_5_0 - 0.337499999999995*G0_1_6_0 + 1.68749999999998*G0_1_7_0 + 3.37499999999999*G0_1_7_1 - 2.36249999999998*G0_1_8_0 - 0.674999999999982*G0_1_8_1 - 2.02499999999998*G0_1_9_0 - 4.04999999999998*G0_1_9_1 - 1.35*G1_0_10_0 - 1.35*G1_0_10_1 + 0.674999999999993*G1_0_11_0 + 0.33749999999999*G1_0_13_1 + 0.337499999999997*G1_0_14_1 + 1.68749999999999*G1_0_15_1 - 0.337499999999997*G1_0_16_1 + 3.37499999999999*G1_0_17_0 + 1.68749999999998*G1_0_17_1 - 2.69999999999998*G1_0_18_0 - 0.337499999999988*G1_0_18_1 + 1.64412754244392e-14*G1_0_19_0 - 2.02499999999998*G1_0_19_1 + 0.0750000000000024*G1_1_10_0 + 0.075000000000004*G1_1_10_1 + 0.599999999999989*G1_1_11_0 - 0.075000000000005*G1_1_12_1 + 0.337499999999988*G1_1_13_0 + 0.674999999999976*G1_1_13_1 + 0.337499999999995*G1_1_14_0 + 0.675000000000003*G1_1_14_1 + 1.68749999999999*G1_1_15_0 - 0.337499999999995*G1_1_16_0 + 1.68749999999998*G1_1_17_0 + 3.37499999999999*G1_1_17_1 - 2.36249999999998*G1_1_18_0 - 0.674999999999982*G1_1_18_1 - 2.02499999999998*G1_1_19_0 - 4.04999999999998*G1_1_19_1 + 0.674999999999998*G2_0_0_0 + 0.674999999999998*G2_0_0_1 - 0.337499999999997*G2_0_1_0 - 0.168749999999995*G2_0_3_1 - 0.168749999999998*G2_0_4_1 - 0.843749999999997*G2_0_5_1 + 0.168749999999999*G2_0_6_1 - 1.68749999999999*G2_0_7_0 - 0.843749999999992*G2_0_7_1 + 1.34999999999999*G2_0_8_0 + 0.168749999999994*G2_0_8_1 + 1.01249999999999*G2_0_9_1 - 0.0375000000000012*G2_1_0_0 - 0.037500000000002*G2_1_0_1 - 0.299999999999995*G2_1_1_0 + 0.0375000000000025*G2_1_2_1 - 0.168749999999994*G2_1_3_0 - 0.337499999999988*G2_1_3_1 - 0.168749999999997*G2_1_4_0 - 0.337500000000002*G2_1_4_1 - 0.843749999999997*G2_1_5_0 + 0.168749999999998*G2_1_6_0 - 0.843749999999992*G2_1_7_0 - 1.68749999999999*G2_1_7_1 + 1.18124999999999*G2_1_8_0 + 0.337499999999991*G2_1_8_1 + 1.01249999999999*G2_1_9_0 + 2.02499999999999*G2_1_9_1 + 0.674999999999998*G3_0_10_0 + 0.674999999999998*G3_0_10_1 - 0.337499999999997*G3_0_11_0 - 0.168749999999995*G3_0_13_1 - 0.168749999999998*G3_0_14_1 - 0.843749999999997*G3_0_15_1 + 0.168749999999999*G3_0_16_1 - 1.68749999999999*G3_0_17_0 - 0.843749999999992*G3_0_17_1 + 1.34999999999999*G3_0_18_0 + 0.168749999999994*G3_0_18_1 + 1.01249999999999*G3_0_19_1 - 0.0375000000000012*G3_1_10_0 - 0.037500000000002*G3_1_10_1 - 0.299999999999995*G3_1_11_0 + 0.0375000000000025*G3_1_12_1 - 0.168749999999994*G3_1_13_0 - 0.337499999999988*G3_1_13_1 - 0.168749999999997*G3_1_14_0 - 0.337500000000002*G3_1_14_1 - 0.843749999999997*G3_1_15_0 + 0.168749999999998*G3_1_16_0 - 0.843749999999992*G3_1_17_0 - 1.68749999999999*G3_1_17_1 + 1.18124999999999*G3_1_18_0 + 0.337499999999991*G3_1_18_1 + 1.01249999999999*G3_1_19_0 + 2.02499999999999*G3_1_19_1 - 1.35*G14_0_10_0 - 1.35*G14_0_10_1 + 0.674999999999993*G14_0_11_0 + 0.33749999999999*G14_0_13_1 + 0.337499999999997*G14_0_14_1 + 1.68749999999999*G14_0_15_1 - 0.337499999999997*G14_0_16_1 + 3.37499999999999*G14_0_17_0 + 1.68749999999998*G14_0_17_1 - 2.69999999999998*G14_0_18_0 - 0.337499999999988*G14_0_18_1 + 1.64412754244392e-14*G14_0_19_0 - 2.02499999999998*G14_0_19_1 + 0.0750000000000024*G14_1_10_0 + 0.075000000000004*G14_1_10_1 + 0.599999999999989*G14_1_11_0 - 0.075000000000005*G14_1_12_1 + 0.337499999999988*G14_1_13_0 + 0.674999999999976*G14_1_13_1 + 0.337499999999995*G14_1_14_0 + 0.675000000000003*G14_1_14_1 + 1.68749999999999*G14_1_15_0 - 0.337499999999995*G14_1_16_0 + 1.68749999999998*G14_1_17_0 + 3.37499999999999*G14_1_17_1 - 2.36249999999998*G14_1_18_0 - 0.674999999999982*G14_1_18_1 - 2.02499999999998*G14_1_19_0 - 4.04999999999998*G14_1_19_1 - 1.35*G15_0_10_0 - 1.35*G15_0_10_1 + 0.674999999999993*G15_0_11_0 + 0.33749999999999*G15_0_13_1 + 0.337499999999997*G15_0_14_1 + 1.68749999999999*G15_0_15_1 - 0.337499999999997*G15_0_16_1 + 3.37499999999999*G15_0_17_0 + 1.68749999999998*G15_0_17_1 - 2.69999999999998*G15_0_18_0 - 0.337499999999988*G15_0_18_1 + 1.64412754244392e-14*G15_0_19_0 - 2.02499999999998*G15_0_19_1 + 0.0750000000000024*G15_1_10_0 + 0.075000000000004*G15_1_10_1 + 0.599999999999989*G15_1_11_0 - 0.075000000000005*G15_1_12_1 + 0.337499999999988*G15_1_13_0 + 0.674999999999976*G15_1_13_1 + 0.337499999999995*G15_1_14_0 + 0.675000000000003*G15_1_14_1 + 1.68749999999999*G15_1_15_0 - 0.337499999999995*G15_1_16_0 + 1.68749999999998*G15_1_17_0 + 3.37499999999999*G15_1_17_1 - 2.36249999999998*G15_1_18_0 - 0.674999999999982*G15_1_18_1 - 2.02499999999998*G15_1_19_0 - 4.04999999999998*G15_1_19_1 - 0.225*G16_0_20 - 0.0749999999999986*G16_0_21 + 0.299999999999998*G16_0_25 + 0.074999999999999*G16_1_20 - 0.149999999999998*G16_1_21 - 0.0749999999999999*G16_1_22 + 0.3*G16_1_24 + 0.6*G16_1_25 + 0.674999999999998*G17_0_10_0 + 0.674999999999998*G17_0_10_1 - 0.337499999999997*G17_0_11_0 - 0.168749999999995*G17_0_13_1 - 0.168749999999998*G17_0_14_1 - 0.843749999999997*G17_0_15_1 + 0.168749999999999*G17_0_16_1 - 1.68749999999999*G17_0_17_0 - 0.843749999999992*G17_0_17_1 + 1.34999999999999*G17_0_18_0 + 0.168749999999994*G17_0_18_1 + 1.01249999999999*G17_0_19_1 - 0.0375000000000012*G17_1_10_0 - 0.037500000000002*G17_1_10_1 - 0.299999999999995*G17_1_11_0 + 0.0375000000000025*G17_1_12_1 - 0.168749999999994*G17_1_13_0 - 0.337499999999988*G17_1_13_1 - 0.168749999999997*G17_1_14_0 - 0.337500000000002*G17_1_14_1 - 0.843749999999997*G17_1_15_0 + 0.168749999999998*G17_1_16_0 - 0.843749999999992*G17_1_17_0 - 1.68749999999999*G17_1_17_1 + 1.18124999999999*G17_1_18_0 + 0.337499999999991*G17_1_18_1 + 1.01249999999999*G17_1_19_0 + 2.02499999999999*G17_1_19_1 + 0.674999999999998*G18_0_10_0 + 0.674999999999998*G18_0_10_1 - 0.337499999999997*G18_0_11_0 - 0.168749999999995*G18_0_13_1 - 0.168749999999998*G18_0_14_1 - 0.843749999999997*G18_0_15_1 + 0.168749999999999*G18_0_16_1 - 1.68749999999999*G18_0_17_0 - 0.843749999999992*G18_0_17_1 + 1.34999999999999*G18_0_18_0 + 0.168749999999994*G18_0_18_1 + 1.01249999999999*G18_0_19_1 - 0.0375000000000012*G18_1_10_0 - 0.037500000000002*G18_1_10_1 - 0.299999999999995*G18_1_11_0 + 0.0375000000000025*G18_1_12_1 - 0.168749999999994*G18_1_13_0 - 0.337499999999988*G18_1_13_1 - 0.168749999999997*G18_1_14_0 - 0.337500000000002*G18_1_14_1 - 0.843749999999997*G18_1_15_0 + 0.168749999999998*G18_1_16_0 - 0.843749999999992*G18_1_17_0 - 1.68749999999999*G18_1_17_1 + 1.18124999999999*G18_1_18_0 + 0.337499999999991*G18_1_18_1 + 1.01249999999999*G18_1_19_0 + 2.02499999999999*G18_1_19_1 + 0.1125*G19_0_20 + 0.0374999999999993*G19_0_21 - 0.149999999999999*G19_0_25 - 0.0374999999999995*G19_1_20 + 0.0749999999999992*G19_1_21 + 0.0375*G19_1_22 - 0.15*G19_1_24 - 0.3*G19_1_25 - 26.7857142857142*G22_0_10_0 - 26.7857142857142*G22_0_10_1 + 0.66964285714289*G22_0_11_0 + 4.68750000000001*G22_0_12_1 - 8.03571428571428*G22_0_13_0 - 10.0446428571427*G22_0_13_1 - 2.00892857142856*G22_0_14_0 - 4.01785714285724*G22_0_14_1 - 4.0178571428571*G22_0_15_0 + 44.1964285714283*G22_0_15_1 + 2.00892857142857*G22_0_16_0 - 22.0982142857142*G22_0_16_1 + 40.1785714285713*G22_0_17_0 - 8.03571428571415*G22_0_17_1 - 14.0625*G22_0_18_0 + 10.0446428571427*G22_0_18_1 + 12.0535714285714*G22_0_19_0 + 12.0535714285713*G22_0_19_1 - 5.22321428571429*G22_1_10_0 - 5.22321428571425*G22_1_10_1 - 12.0535714285713*G22_1_11_0 + 2.4160292946111e-14*G22_1_11_1 - 2.8125*G22_1_12_1 - 2.00892857142858*G22_1_13_0 - 24.1071428571428*G22_1_13_1 - 0.80357142857143*G22_1_14_0 + 12.0535714285714*G22_1_14_1 - 7.63392857142853*G22_1_15_0 + 7.63392857142846*G22_1_15_1 + 0.803571428571433*G22_1_16_0 + 0.40178571428575*G22_1_16_1 + 3.2142857142858*G22_1_17_0 - 12.0535714285713*G22_1_17_1 + 14.0624999999998*G22_1_18_0 + 24.1071428571427*G22_1_18_1 + 9.64285714285711*G22_1_19_0 + 1.08408291024653e-14*G22_1_19_1 - 4.82142857142857*G22_2_10_0 - 4.82142857142857*G22_2_10_1 - 3.6160714285714*G22_2_11_0 + 1.02342846278283e-14*G22_2_11_1 + 1.24969479209369e-14*G22_2_12_1 + 0.401785714285687*G22_2_13_0 - 5.62499999999996*G22_2_13_1 - 2.00892857142857*G22_2_14_0 + 0.401785714285643*G22_2_14_1 - 7.63392857142856*G22_2_15_0 + 7.23214285714284*G22_2_15_1 + 2.00892857142857*G22_2_16_0 - 2.41071428571425*G22_2_16_1 + 6.23672120891872e-14*G22_2_17_0 - 14.8660714285714*G22_2_17_1 + 8.43749999999991*G22_2_18_0 + 5.62499999999999*G22_2_18_1 + 7.23214285714287*G22_2_19_0 + 14.4642857142856*G22_2_19_1 + 5.62499999999991*G22_3_10_0 + 5.62500000000002*G22_3_10_1 - 20.0892857142856*G22_3_11_0 + 1.12750864801972e-14*G22_3_11_1 + 5.22321428571421*G22_3_12_1 - 47.0089285714285*G22_3_13_0 - 54.2410714285714*G22_3_13_1 + 7.23214285714284*G22_3_14_0 - 10.848214285714*G22_3_14_1 + 3.61607142857139*G22_3_15_0 - 1.63314674284099e-13*G22_3_15_1 - 7.23214285714283*G22_3_16_0 - 10.8482142857144*G22_3_16_1 - 14.4642857142855*G22_3_17_0 - 10.848214285714*G22_3_17_1 + 28.9285714285713*G22_3_18_0 + 54.241071428571*G22_3_18_1 + 43.3928571428571*G22_3_19_0 + 21.6964285714287*G22_3_19_1 + 4.41964285714288*G22_4_10_0 + 4.41964285714288*G22_4_10_1 + 13.6607142857142*G22_4_11_0 - 4.87310832596425e-14*G22_4_11_1 - 4.41964285714285*G22_4_12_1 - 3.61607142857137*G22_4_13_0 + 21.6964285714285*G22_4_13_1 - 14.4642857142857*G22_4_14_0 - 21.6964285714284*G22_4_14_1 + 3.61607142857142*G22_4_15_0 - 10.8482142857142*G22_4_15_1 + 14.4642857142857*G22_4_16_0 + 10.8482142857141*G22_4_16_1 + 7.23214285714272*G22_4_17_0 + 21.6964285714285*G22_4_17_1 - 25.3124999999998*G22_4_18_0 - 21.6964285714285*G22_4_18_1 - 4.89087936816901e-14*G22_4_19_0 + 4.21902096592319e-14*G22_4_19_1 - 40.1785714285713*G22_5_10_0 - 40.1785714285714*G22_5_10_1 + 0.401785714285775*G22_5_11_0 + 8.24652219353824e-14*G22_5_11_1 + 0.401785714285854*G22_5_12_1 + 7.23214285714274*G22_5_13_0 - 3.61607142857123*G22_5_13_1 - 3.6160714285714*G22_5_14_0 + 7.23214285714232*G22_5_14_1 - 72.3214285714283*G22_5_15_0 + 36.1607142857144*G22_5_15_1 + 3.61607142857141*G22_5_16_0 + 3.61607142857162*G22_5_16_1 + 36.1607142857145*G22_5_17_0 - 72.3214285714284*G22_5_17_1 + 3.61607142857112*G22_5_18_0 + 3.61607142857163*G22_5_18_1 + 65.0892857142855*G22_5_19_0 + 65.0892857142852*G22_5_19_1 + 20.0892857142857*G22_6_10_0 + 20.0892857142857*G22_6_10_1 + 5.22321428571423*G22_6_11_0 - 4.25653138234058e-14*G22_6_11_1 - 5.62500000000006*G22_6_12_1 - 3.61607142857132*G22_6_13_0 + 7.23214285714275*G22_6_13_1 - 3.61607142857144*G22_6_14_0 - 3.61607142857114*G22_6_14_1 + 25.3125*G22_6_15_0 - 28.9285714285714*G22_6_15_1 + 3.61607142857144*G22_6_16_0 + 14.4642857142855*G22_6_16_1 - 7.23214285714301*G22_6_17_0 + 47.0089285714285*G22_6_17_1 - 18.0803571428569*G22_6_18_0 - 7.23214285714295*G22_6_18_1 - 21.6964285714286*G22_6_19_0 - 43.3928571428569*G22_6_19_1 - 80.3571428571425*G22_7_10_0 - 80.3571428571428*G22_7_10_1 - 6.42857142857121*G22_7_11_0 + 6.67296303193701e-14*G22_7_11_1 + 29.7321428571431*G22_7_12_1 + 28.9285714285712*G22_7_13_0 + 21.6964285714293*G22_7_13_1 - 14.4642857142856*G22_7_14_0 - 43.3928571428582*G22_7_14_1 - 72.3214285714283*G22_7_15_0 + 144.642857142857*G22_7_15_1 + 14.4642857142856*G22_7_16_0 - 94.0178571428565*G22_7_16_1 + 6.37262499409254e-13*G22_7_17_0 - 216.964285714285*G22_7_17_1 + 86.7857142857131*G22_7_18_0 - 21.6964285714281*G22_7_18_1 + 43.392857142857*G22_7_19_0 + 260.357142857141*G22_7_19_1 + 28.1249999999999*G22_8_10_0 + 28.125*G22_8_10_1 - 28.1249999999998*G22_8_11_0 + 1.29762121219297e-14*G22_8_11_1 - 2.81250000000009*G22_8_12_1 - 25.3124999999999*G22_8_13_0 - 54.2410714285714*G22_8_13_1 + 7.23214285714284*G22_8_14_0 + 10.8482142857146*G22_8_14_1 + 25.3124999999999*G22_8_15_0 - 28.9285714285716*G22_8_15_1 - 7.23214285714283*G22_8_16_0 + 3.61607142857128*G22_8_16_1 - 43.3928571428569*G22_8_17_0 + 10.8482142857146*G22_8_17_1 + 43.3928571428569*G22_8_18_0 + 54.2410714285709*G22_8_18_1 - 1.20686609577508e-14*G22_8_19_0 - 21.6964285714283*G22_8_19_1 - 24.1071428571429*G22_9_10_0 - 24.107142857143*G22_9_10_1 - 19.2857142857141*G22_9_11_0 + 6.9918256593794e-14*G22_9_11_1 + 2.41071428571442*G22_9_12_1 - 43.3928571428572*G22_9_13_0 - 43.3928571428568*G22_9_13_1 - 21.6964285714285*G22_9_14_0 - 43.3928571428574*G22_9_14_1 - 86.7857142857139*G22_9_15_0 + 21.6964285714288*G22_9_15_1 + 21.6964285714285*G22_9_16_0 - 7.13165420815343e-14*G22_9_16_1 - 21.6964285714279*G22_9_17_0 - 130.178571428571*G22_9_17_1 + 65.0892857142849*G22_9_18_0 + 43.392857142857*G22_9_18_1 + 130.178571428571*G22_9_19_0 + 173.571428571428*G22_9_19_1 - 26.7857142857142*G23_10_10_0 - 26.7857142857142*G23_10_10_1 + 0.66964285714289*G23_10_11_0 + 4.68750000000001*G23_10_12_1 - 8.03571428571428*G23_10_13_0 - 10.0446428571427*G23_10_13_1 - 2.00892857142856*G23_10_14_0 - 4.01785714285724*G23_10_14_1 - 4.0178571428571*G23_10_15_0 + 44.1964285714283*G23_10_15_1 + 2.00892857142857*G23_10_16_0 - 22.0982142857142*G23_10_16_1 + 40.1785714285713*G23_10_17_0 - 8.03571428571415*G23_10_17_1 - 14.0625*G23_10_18_0 + 10.0446428571427*G23_10_18_1 + 12.0535714285714*G23_10_19_0 + 12.0535714285713*G23_10_19_1 - 5.22321428571429*G23_11_10_0 - 5.22321428571425*G23_11_10_1 - 12.0535714285713*G23_11_11_0 + 2.4160292946111e-14*G23_11_11_1 - 2.8125*G23_11_12_1 - 2.00892857142858*G23_11_13_0 - 24.1071428571428*G23_11_13_1 - 0.80357142857143*G23_11_14_0 + 12.0535714285714*G23_11_14_1 - 7.63392857142853*G23_11_15_0 + 7.63392857142846*G23_11_15_1 + 0.803571428571433*G23_11_16_0 + 0.40178571428575*G23_11_16_1 + 3.2142857142858*G23_11_17_0 - 12.0535714285713*G23_11_17_1 + 14.0624999999998*G23_11_18_0 + 24.1071428571427*G23_11_18_1 + 9.64285714285711*G23_11_19_0 + 1.08408291024653e-14*G23_11_19_1 - 4.82142857142857*G23_12_10_0 - 4.82142857142857*G23_12_10_1 - 3.6160714285714*G23_12_11_0 + 1.02342846278283e-14*G23_12_11_1 + 1.24969479209369e-14*G23_12_12_1 + 0.401785714285687*G23_12_13_0 - 5.62499999999996*G23_12_13_1 - 2.00892857142857*G23_12_14_0 + 0.401785714285643*G23_12_14_1 - 7.63392857142856*G23_12_15_0 + 7.23214285714284*G23_12_15_1 + 2.00892857142857*G23_12_16_0 - 2.41071428571425*G23_12_16_1 + 6.23672120891872e-14*G23_12_17_0 - 14.8660714285714*G23_12_17_1 + 8.43749999999991*G23_12_18_0 + 5.62499999999999*G23_12_18_1 + 7.23214285714287*G23_12_19_0 + 14.4642857142856*G23_12_19_1 + 5.62499999999991*G23_13_10_0 + 5.62500000000002*G23_13_10_1 - 20.0892857142856*G23_13_11_0 + 1.12750864801972e-14*G23_13_11_1 + 5.22321428571421*G23_13_12_1 - 47.0089285714285*G23_13_13_0 - 54.2410714285714*G23_13_13_1 + 7.23214285714284*G23_13_14_0 - 10.848214285714*G23_13_14_1 + 3.61607142857139*G23_13_15_0 - 1.63314674284099e-13*G23_13_15_1 - 7.23214285714283*G23_13_16_0 - 10.8482142857144*G23_13_16_1 - 14.4642857142855*G23_13_17_0 - 10.848214285714*G23_13_17_1 + 28.9285714285713*G23_13_18_0 + 54.241071428571*G23_13_18_1 + 43.3928571428571*G23_13_19_0 + 21.6964285714287*G23_13_19_1 + 4.41964285714288*G23_14_10_0 + 4.41964285714288*G23_14_10_1 + 13.6607142857142*G23_14_11_0 - 4.87310832596425e-14*G23_14_11_1 - 4.41964285714285*G23_14_12_1 - 3.61607142857137*G23_14_13_0 + 21.6964285714285*G23_14_13_1 - 14.4642857142857*G23_14_14_0 - 21.6964285714284*G23_14_14_1 + 3.61607142857142*G23_14_15_0 - 10.8482142857142*G23_14_15_1 + 14.4642857142857*G23_14_16_0 + 10.8482142857141*G23_14_16_1 + 7.23214285714272*G23_14_17_0 + 21.6964285714285*G23_14_17_1 - 25.3124999999998*G23_14_18_0 - 21.6964285714285*G23_14_18_1 - 4.89087936816901e-14*G23_14_19_0 + 4.21902096592319e-14*G23_14_19_1 - 40.1785714285713*G23_15_10_0 - 40.1785714285714*G23_15_10_1 + 0.401785714285775*G23_15_11_0 + 8.24652219353824e-14*G23_15_11_1 + 0.401785714285854*G23_15_12_1 + 7.23214285714274*G23_15_13_0 - 3.61607142857123*G23_15_13_1 - 3.6160714285714*G23_15_14_0 + 7.23214285714232*G23_15_14_1 - 72.3214285714283*G23_15_15_0 + 36.1607142857144*G23_15_15_1 + 3.61607142857141*G23_15_16_0 + 3.61607142857162*G23_15_16_1 + 36.1607142857145*G23_15_17_0 - 72.3214285714284*G23_15_17_1 + 3.61607142857112*G23_15_18_0 + 3.61607142857163*G23_15_18_1 + 65.0892857142855*G23_15_19_0 + 65.0892857142852*G23_15_19_1 + 20.0892857142857*G23_16_10_0 + 20.0892857142857*G23_16_10_1 + 5.22321428571423*G23_16_11_0 - 4.25653138234058e-14*G23_16_11_1 - 5.62500000000006*G23_16_12_1 - 3.61607142857132*G23_16_13_0 + 7.23214285714275*G23_16_13_1 - 3.61607142857144*G23_16_14_0 - 3.61607142857114*G23_16_14_1 + 25.3125*G23_16_15_0 - 28.9285714285714*G23_16_15_1 + 3.61607142857144*G23_16_16_0 + 14.4642857142855*G23_16_16_1 - 7.23214285714301*G23_16_17_0 + 47.0089285714285*G23_16_17_1 - 18.0803571428569*G23_16_18_0 - 7.23214285714295*G23_16_18_1 - 21.6964285714286*G23_16_19_0 - 43.3928571428569*G23_16_19_1 - 80.3571428571425*G23_17_10_0 - 80.3571428571428*G23_17_10_1 - 6.42857142857121*G23_17_11_0 + 6.67296303193701e-14*G23_17_11_1 + 29.7321428571431*G23_17_12_1 + 28.9285714285712*G23_17_13_0 + 21.6964285714293*G23_17_13_1 - 14.4642857142856*G23_17_14_0 - 43.3928571428582*G23_17_14_1 - 72.3214285714283*G23_17_15_0 + 144.642857142857*G23_17_15_1 + 14.4642857142856*G23_17_16_0 - 94.0178571428565*G23_17_16_1 + 6.37262499409254e-13*G23_17_17_0 - 216.964285714285*G23_17_17_1 + 86.7857142857131*G23_17_18_0 - 21.6964285714281*G23_17_18_1 + 43.392857142857*G23_17_19_0 + 260.357142857141*G23_17_19_1 + 28.1249999999999*G23_18_10_0 + 28.125*G23_18_10_1 - 28.1249999999998*G23_18_11_0 + 1.29762121219297e-14*G23_18_11_1 - 2.81250000000009*G23_18_12_1 - 25.3124999999999*G23_18_13_0 - 54.2410714285714*G23_18_13_1 + 7.23214285714284*G23_18_14_0 + 10.8482142857146*G23_18_14_1 + 25.3124999999999*G23_18_15_0 - 28.9285714285716*G23_18_15_1 - 7.23214285714283*G23_18_16_0 + 3.61607142857128*G23_18_16_1 - 43.3928571428569*G23_18_17_0 + 10.8482142857146*G23_18_17_1 + 43.3928571428569*G23_18_18_0 + 54.2410714285709*G23_18_18_1 - 1.20686609577508e-14*G23_18_19_0 - 21.6964285714283*G23_18_19_1 - 24.1071428571429*G23_19_10_0 - 24.107142857143*G23_19_10_1 - 19.2857142857141*G23_19_11_0 + 6.9918256593794e-14*G23_19_11_1 + 2.41071428571442*G23_19_12_1 - 43.3928571428572*G23_19_13_0 - 43.3928571428568*G23_19_13_1 - 21.6964285714285*G23_19_14_0 - 43.3928571428574*G23_19_14_1 - 86.7857142857139*G23_19_15_0 + 21.6964285714288*G23_19_15_1 + 21.6964285714285*G23_19_16_0 - 7.13165420815343e-14*G23_19_16_1 - 21.6964285714279*G23_19_17_0 - 130.178571428571*G23_19_17_1 + 65.0892857142849*G23_19_18_0 + 43.392857142857*G23_19_18_1 + 130.178571428571*G23_19_19_0 + 173.571428571428*G23_19_19_1 + 13.3928571428571*G26_0_10_0 + 13.3928571428571*G26_0_10_1 - 0.334821428571445*G26_0_11_0 - 2.34375*G26_0_12_1 + 4.01785714285714*G26_0_13_0 + 5.02232142857135*G26_0_13_1 + 1.00446428571428*G26_0_14_0 + 2.00892857142862*G26_0_14_1 + 2.00892857142855*G26_0_15_0 - 22.0982142857142*G26_0_15_1 - 1.00446428571428*G26_0_16_0 + 11.0491071428571*G26_0_16_1 - 20.0892857142857*G26_0_17_0 + 4.01785714285708*G26_0_17_1 + 7.03125000000002*G26_0_18_0 - 5.02232142857137*G26_0_18_1 - 6.02678571428569*G26_0_19_0 - 6.02678571428567*G26_0_19_1 + 2.61160714285714*G26_1_10_0 + 2.61160714285713*G26_1_10_1 + 6.02678571428567*G26_1_11_0 - 1.20801464730555e-14*G26_1_11_1 + 1.40625*G26_1_12_1 + 1.00446428571429*G26_1_13_0 + 12.0535714285714*G26_1_13_1 + 0.401785714285715*G26_1_14_0 - 6.02678571428569*G26_1_14_1 + 3.81696428571426*G26_1_15_0 - 3.81696428571423*G26_1_15_1 - 0.401785714285716*G26_1_16_0 - 0.200892857142875*G26_1_16_1 - 1.6071428571429*G26_1_17_0 + 6.02678571428563*G26_1_17_1 - 7.03124999999992*G26_1_18_0 - 12.0535714285713*G26_1_18_1 - 4.82142857142856*G26_1_19_0 + 2.41071428571428*G26_2_10_0 + 2.41071428571429*G26_2_10_1 + 1.8080357142857*G26_2_11_0 - 0.200892857142844*G26_2_13_0 + 2.81249999999998*G26_2_13_1 + 1.00446428571428*G26_2_14_0 - 0.200892857142822*G26_2_14_1 + 3.81696428571428*G26_2_15_0 - 3.61607142857142*G26_2_15_1 - 1.00446428571429*G26_2_16_0 + 1.20535714285712*G26_2_16_1 - 3.11836060445936e-14*G26_2_17_0 + 7.43303571428568*G26_2_17_1 - 4.21874999999995*G26_2_18_0 - 2.8125*G26_2_18_1 - 3.61607142857143*G26_2_19_0 - 7.23214285714282*G26_2_19_1 - 2.81249999999996*G26_3_10_0 - 2.81250000000001*G26_3_10_1 + 10.0446428571428*G26_3_11_0 - 2.61160714285711*G26_3_12_1 + 23.5044642857143*G26_3_13_0 + 27.1205357142857*G26_3_13_1 - 3.61607142857142*G26_3_14_0 + 5.42410714285702*G26_3_14_1 - 1.8080357142857*G26_3_15_0 + 8.16573371420493e-14*G26_3_15_1 + 3.61607142857142*G26_3_16_0 + 5.4241071428572*G26_3_16_1 + 7.23214285714277*G26_3_17_0 + 5.42410714285699*G26_3_17_1 - 14.4642857142856*G26_3_18_0 - 27.1205357142855*G26_3_18_1 - 21.6964285714286*G26_3_19_0 - 10.8482142857144*G26_3_19_1 - 2.20982142857144*G26_4_10_0 - 2.20982142857144*G26_4_10_1 - 6.83035714285711*G26_4_11_0 + 2.43655416298213e-14*G26_4_11_1 + 2.20982142857143*G26_4_12_1 + 1.80803571428568*G26_4_13_0 - 10.8482142857143*G26_4_13_1 + 7.23214285714284*G26_4_14_0 + 10.8482142857142*G26_4_14_1 - 1.80803571428571*G26_4_15_0 + 5.42410714285712*G26_4_15_1 - 7.23214285714284*G26_4_16_0 - 5.42410714285707*G26_4_16_1 - 3.61607142857136*G26_4_17_0 - 10.8482142857142*G26_4_17_1 + 12.6562499999999*G26_4_18_0 + 10.8482142857143*G26_4_18_1 + 2.4454396840845e-14*G26_4_19_0 - 2.1095104829616e-14*G26_4_19_1 + 20.0892857142857*G26_5_10_0 + 20.0892857142857*G26_5_10_1 - 0.200892857142887*G26_5_11_0 - 4.12326109676912e-14*G26_5_11_1 - 0.200892857142927*G26_5_12_1 - 3.61607142857137*G26_5_13_0 + 1.80803571428562*G26_5_13_1 + 1.8080357142857*G26_5_14_0 - 3.61607142857116*G26_5_14_1 + 36.1607142857142*G26_5_15_0 - 18.0803571428572*G26_5_15_1 - 1.80803571428571*G26_5_16_0 - 1.80803571428581*G26_5_16_1 - 18.0803571428572*G26_5_17_0 + 36.1607142857142*G26_5_17_1 - 1.80803571428556*G26_5_18_0 - 1.80803571428582*G26_5_18_1 - 32.5446428571428*G26_5_19_0 - 32.5446428571426*G26_5_19_1 - 10.0446428571428*G26_6_10_0 - 10.0446428571429*G26_6_10_1 - 2.61160714285711*G26_6_11_0 + 2.12826569117029e-14*G26_6_11_1 + 2.81250000000003*G26_6_12_1 + 1.80803571428566*G26_6_13_0 - 3.61607142857138*G26_6_13_1 + 1.80803571428572*G26_6_14_0 + 1.80803571428557*G26_6_14_1 - 12.65625*G26_6_15_0 + 14.4642857142857*G26_6_15_1 - 1.80803571428572*G26_6_16_0 - 7.23214285714277*G26_6_16_1 + 3.6160714285715*G26_6_17_0 - 23.5044642857142*G26_6_17_1 + 9.04017857142845*G26_6_18_0 + 3.61607142857148*G26_6_18_1 + 10.8482142857143*G26_6_19_0 + 21.6964285714284*G26_6_19_1 + 40.1785714285713*G26_7_10_0 + 40.1785714285714*G26_7_10_1 + 3.21428571428561*G26_7_11_0 - 3.33648151596851e-14*G26_7_11_1 - 14.8660714285716*G26_7_12_1 - 14.4642857142856*G26_7_13_0 - 10.8482142857146*G26_7_13_1 + 7.23214285714281*G26_7_14_0 + 21.6964285714291*G26_7_14_1 + 36.1607142857141*G26_7_15_0 - 72.3214285714285*G26_7_15_1 - 7.23214285714282*G26_7_16_0 + 47.0089285714282*G26_7_16_1 - 3.18631249704627e-13*G26_7_17_0 + 108.482142857142*G26_7_17_1 - 43.3928571428566*G26_7_18_0 + 10.8482142857141*G26_7_18_1 - 21.6964285714285*G26_7_19_0 - 130.178571428571*G26_7_19_1 - 14.0624999999999*G26_8_10_0 - 14.0625*G26_8_10_1 + 14.0624999999999*G26_8_11_0 + 1.40625000000005*G26_8_12_1 + 12.65625*G26_8_13_0 + 27.1205357142857*G26_8_13_1 - 3.61607142857142*G26_8_14_0 - 5.4241071428573*G26_8_14_1 - 12.65625*G26_8_15_0 + 14.4642857142858*G26_8_15_1 + 3.61607142857142*G26_8_16_0 - 1.80803571428564*G26_8_16_1 + 21.6964285714285*G26_8_17_0 - 5.4241071428573*G26_8_17_1 - 21.6964285714285*G26_8_18_0 - 27.1205357142854*G26_8_18_1 + 10.8482142857141*G26_8_19_1 + 12.0535714285715*G26_9_10_0 + 12.0535714285715*G26_9_10_1 + 9.64285714285705*G26_9_11_0 - 3.4959128296897e-14*G26_9_11_1 - 1.20535714285721*G26_9_12_1 + 21.6964285714286*G26_9_13_0 + 21.6964285714284*G26_9_13_1 + 10.8482142857142*G26_9_14_0 + 21.6964285714287*G26_9_14_1 + 43.392857142857*G26_9_15_0 - 10.8482142857144*G26_9_15_1 - 10.8482142857143*G26_9_16_0 + 3.56582710407671e-14*G26_9_16_1 + 10.8482142857139*G26_9_17_0 + 65.0892857142854*G26_9_17_1 - 32.5446428571425*G26_9_18_0 - 21.6964285714285*G26_9_18_1 - 65.0892857142855*G26_9_19_0 - 86.7857142857139*G26_9_19_1 + 13.3928571428571*G27_10_10_0 + 13.3928571428571*G27_10_10_1 - 0.334821428571445*G27_10_11_0 - 2.34375*G27_10_12_1 + 4.01785714285714*G27_10_13_0 + 5.02232142857135*G27_10_13_1 + 1.00446428571428*G27_10_14_0 + 2.00892857142862*G27_10_14_1 + 2.00892857142855*G27_10_15_0 - 22.0982142857142*G27_10_15_1 - 1.00446428571428*G27_10_16_0 + 11.0491071428571*G27_10_16_1 - 20.0892857142857*G27_10_17_0 + 4.01785714285708*G27_10_17_1 + 7.03125000000002*G27_10_18_0 - 5.02232142857137*G27_10_18_1 - 6.02678571428569*G27_10_19_0 - 6.02678571428567*G27_10_19_1 + 2.61160714285714*G27_11_10_0 + 2.61160714285713*G27_11_10_1 + 6.02678571428567*G27_11_11_0 - 1.20801464730555e-14*G27_11_11_1 + 1.40625*G27_11_12_1 + 1.00446428571429*G27_11_13_0 + 12.0535714285714*G27_11_13_1 + 0.401785714285715*G27_11_14_0 - 6.02678571428569*G27_11_14_1 + 3.81696428571426*G27_11_15_0 - 3.81696428571423*G27_11_15_1 - 0.401785714285716*G27_11_16_0 - 0.200892857142875*G27_11_16_1 - 1.6071428571429*G27_11_17_0 + 6.02678571428563*G27_11_17_1 - 7.03124999999992*G27_11_18_0 - 12.0535714285713*G27_11_18_1 - 4.82142857142856*G27_11_19_0 + 2.41071428571428*G27_12_10_0 + 2.41071428571429*G27_12_10_1 + 1.8080357142857*G27_12_11_0 - 0.200892857142844*G27_12_13_0 + 2.81249999999998*G27_12_13_1 + 1.00446428571428*G27_12_14_0 - 0.200892857142822*G27_12_14_1 + 3.81696428571428*G27_12_15_0 - 3.61607142857142*G27_12_15_1 - 1.00446428571429*G27_12_16_0 + 1.20535714285712*G27_12_16_1 - 3.11836060445936e-14*G27_12_17_0 + 7.43303571428568*G27_12_17_1 - 4.21874999999995*G27_12_18_0 - 2.8125*G27_12_18_1 - 3.61607142857143*G27_12_19_0 - 7.23214285714282*G27_12_19_1 - 2.81249999999996*G27_13_10_0 - 2.81250000000001*G27_13_10_1 + 10.0446428571428*G27_13_11_0 - 2.61160714285711*G27_13_12_1 + 23.5044642857143*G27_13_13_0 + 27.1205357142857*G27_13_13_1 - 3.61607142857142*G27_13_14_0 + 5.42410714285702*G27_13_14_1 - 1.8080357142857*G27_13_15_0 + 8.16573371420493e-14*G27_13_15_1 + 3.61607142857142*G27_13_16_0 + 5.4241071428572*G27_13_16_1 + 7.23214285714277*G27_13_17_0 + 5.42410714285699*G27_13_17_1 - 14.4642857142856*G27_13_18_0 - 27.1205357142855*G27_13_18_1 - 21.6964285714286*G27_13_19_0 - 10.8482142857144*G27_13_19_1 - 2.20982142857144*G27_14_10_0 - 2.20982142857144*G27_14_10_1 - 6.83035714285711*G27_14_11_0 + 2.43655416298213e-14*G27_14_11_1 + 2.20982142857143*G27_14_12_1 + 1.80803571428568*G27_14_13_0 - 10.8482142857143*G27_14_13_1 + 7.23214285714284*G27_14_14_0 + 10.8482142857142*G27_14_14_1 - 1.80803571428571*G27_14_15_0 + 5.42410714285712*G27_14_15_1 - 7.23214285714284*G27_14_16_0 - 5.42410714285707*G27_14_16_1 - 3.61607142857136*G27_14_17_0 - 10.8482142857142*G27_14_17_1 + 12.6562499999999*G27_14_18_0 + 10.8482142857143*G27_14_18_1 + 2.4454396840845e-14*G27_14_19_0 - 2.1095104829616e-14*G27_14_19_1 + 20.0892857142857*G27_15_10_0 + 20.0892857142857*G27_15_10_1 - 0.200892857142887*G27_15_11_0 - 4.12326109676912e-14*G27_15_11_1 - 0.200892857142927*G27_15_12_1 - 3.61607142857137*G27_15_13_0 + 1.80803571428562*G27_15_13_1 + 1.8080357142857*G27_15_14_0 - 3.61607142857116*G27_15_14_1 + 36.1607142857142*G27_15_15_0 - 18.0803571428572*G27_15_15_1 - 1.80803571428571*G27_15_16_0 - 1.80803571428581*G27_15_16_1 - 18.0803571428572*G27_15_17_0 + 36.1607142857142*G27_15_17_1 - 1.80803571428556*G27_15_18_0 - 1.80803571428582*G27_15_18_1 - 32.5446428571428*G27_15_19_0 - 32.5446428571426*G27_15_19_1 - 10.0446428571428*G27_16_10_0 - 10.0446428571429*G27_16_10_1 - 2.61160714285711*G27_16_11_0 + 2.12826569117029e-14*G27_16_11_1 + 2.81250000000003*G27_16_12_1 + 1.80803571428566*G27_16_13_0 - 3.61607142857138*G27_16_13_1 + 1.80803571428572*G27_16_14_0 + 1.80803571428557*G27_16_14_1 - 12.65625*G27_16_15_0 + 14.4642857142857*G27_16_15_1 - 1.80803571428572*G27_16_16_0 - 7.23214285714277*G27_16_16_1 + 3.6160714285715*G27_16_17_0 - 23.5044642857142*G27_16_17_1 + 9.04017857142845*G27_16_18_0 + 3.61607142857148*G27_16_18_1 + 10.8482142857143*G27_16_19_0 + 21.6964285714284*G27_16_19_1 + 40.1785714285713*G27_17_10_0 + 40.1785714285714*G27_17_10_1 + 3.21428571428561*G27_17_11_0 - 3.33648151596851e-14*G27_17_11_1 - 14.8660714285716*G27_17_12_1 - 14.4642857142856*G27_17_13_0 - 10.8482142857146*G27_17_13_1 + 7.23214285714281*G27_17_14_0 + 21.6964285714291*G27_17_14_1 + 36.1607142857141*G27_17_15_0 - 72.3214285714285*G27_17_15_1 - 7.23214285714282*G27_17_16_0 + 47.0089285714282*G27_17_16_1 - 3.18631249704627e-13*G27_17_17_0 + 108.482142857142*G27_17_17_1 - 43.3928571428566*G27_17_18_0 + 10.8482142857141*G27_17_18_1 - 21.6964285714285*G27_17_19_0 - 130.178571428571*G27_17_19_1 - 14.0624999999999*G27_18_10_0 - 14.0625*G27_18_10_1 + 14.0624999999999*G27_18_11_0 + 1.40625000000005*G27_18_12_1 + 12.65625*G27_18_13_0 + 27.1205357142857*G27_18_13_1 - 3.61607142857142*G27_18_14_0 - 5.4241071428573*G27_18_14_1 - 12.65625*G27_18_15_0 + 14.4642857142858*G27_18_15_1 + 3.61607142857142*G27_18_16_0 - 1.80803571428564*G27_18_16_1 + 21.6964285714285*G27_18_17_0 - 5.4241071428573*G27_18_17_1 - 21.6964285714285*G27_18_18_0 - 27.1205357142854*G27_18_18_1 + 10.8482142857141*G27_18_19_1 + 12.0535714285715*G27_19_10_0 + 12.0535714285715*G27_19_10_1 + 9.64285714285705*G27_19_11_0 - 3.4959128296897e-14*G27_19_11_1 - 1.20535714285721*G27_19_12_1 + 21.6964285714286*G27_19_13_0 + 21.6964285714284*G27_19_13_1 + 10.8482142857142*G27_19_14_0 + 21.6964285714287*G27_19_14_1 + 43.392857142857*G27_19_15_0 - 10.8482142857144*G27_19_15_1 - 10.8482142857143*G27_19_16_0 + 3.56582710407671e-14*G27_19_16_1 + 10.8482142857139*G27_19_17_0 + 65.0892857142854*G27_19_17_1 - 32.5446428571425*G27_19_18_0 - 21.6964285714285*G27_19_18_1 - 65.0892857142855*G27_19_19_0 - 86.7857142857139*G27_19_19_1;
    A[18] = 0.674999999999998*G0_0_0_0 + 0.674999999999999*G0_0_0_1 - 1.34999999999999*G0_0_1_0 - 1.68749999999998*G0_0_3_1 + 0.337499999999998*G0_0_4_1 - 0.337500000000004*G0_0_5_1 - 0.337499999999998*G0_0_6_1 - 2.69999999999998*G0_0_7_0 - 2.36249999999998*G0_0_7_1 + 3.37499999999997*G0_0_8_0 + 1.68749999999998*G0_0_8_1 - 1.12119515061071e-14*G0_0_9_0 + 2.02499999999998*G0_0_9_1 + 0.0749999999999945*G0_1_0_0 + 0.0750000000000005*G0_1_0_1 - 1.42499999999998*G0_1_1_0 - 0.0750000000000001*G0_1_2_1 - 1.68749999999999*G0_1_3_0 - 3.37499999999998*G0_1_3_1 + 0.337500000000006*G0_1_4_0 + 0.675000000000012*G0_1_4_1 - 0.337500000000002*G0_1_5_0 - 1.24978152826749e-14*G0_1_5_1 - 0.337500000000005*G0_1_6_0 - 0.337499999999988*G0_1_7_0 - 0.674999999999982*G0_1_7_1 + 1.68749999999998*G0_1_8_0 + 3.37499999999996*G0_1_8_1 + 2.02499999999999*G0_1_9_0 + 0.674999999999998*G1_0_10_0 + 0.674999999999999*G1_0_10_1 - 1.34999999999999*G1_0_11_0 - 1.68749999999998*G1_0_13_1 + 0.337499999999998*G1_0_14_1 - 0.337500000000004*G1_0_15_1 - 0.337499999999998*G1_0_16_1 - 2.69999999999998*G1_0_17_0 - 2.36249999999998*G1_0_17_1 + 3.37499999999997*G1_0_18_0 + 1.68749999999998*G1_0_18_1 - 1.12119515061071e-14*G1_0_19_0 + 2.02499999999998*G1_0_19_1 + 0.0749999999999945*G1_1_10_0 + 0.0750000000000005*G1_1_10_1 - 1.42499999999998*G1_1_11_0 - 0.0750000000000001*G1_1_12_1 - 1.68749999999999*G1_1_13_0 - 3.37499999999998*G1_1_13_1 + 0.337500000000006*G1_1_14_0 + 0.675000000000012*G1_1_14_1 - 0.337500000000002*G1_1_15_0 - 1.24978152826749e-14*G1_1_15_1 - 0.337500000000005*G1_1_16_0 - 0.337499999999988*G1_1_17_0 - 0.674999999999982*G1_1_17_1 + 1.68749999999998*G1_1_18_0 + 3.37499999999996*G1_1_18_1 + 2.02499999999999*G1_1_19_0 - 0.337499999999999*G2_0_0_0 - 0.3375*G2_0_0_1 + 0.674999999999994*G2_0_1_0 + 0.843749999999992*G2_0_3_1 - 0.168749999999999*G2_0_4_1 + 0.168750000000002*G2_0_5_1 + 0.168749999999999*G2_0_6_1 + 1.34999999999999*G2_0_7_0 + 1.18124999999999*G2_0_7_1 - 1.68749999999999*G2_0_8_0 - 0.843749999999989*G2_0_8_1 - 1.01249999999999*G2_0_9_1 - 0.0374999999999972*G2_1_0_0 - 0.0375000000000003*G2_1_0_1 + 0.712499999999992*G2_1_1_0 + 0.0375000000000001*G2_1_2_1 + 0.843749999999993*G2_1_3_0 + 1.68749999999999*G2_1_3_1 - 0.168750000000003*G2_1_4_0 - 0.337500000000006*G2_1_4_1 + 0.168750000000001*G2_1_5_0 + 0.168750000000003*G2_1_6_0 + 0.168749999999994*G2_1_7_0 + 0.337499999999991*G2_1_7_1 - 0.843749999999989*G2_1_8_0 - 1.68749999999998*G2_1_8_1 - 1.01249999999999*G2_1_9_0 - 0.337499999999999*G3_0_10_0 - 0.3375*G3_0_10_1 + 0.674999999999994*G3_0_11_0 + 0.843749999999992*G3_0_13_1 - 0.168749999999999*G3_0_14_1 + 0.168750000000002*G3_0_15_1 + 0.168749999999999*G3_0_16_1 + 1.34999999999999*G3_0_17_0 + 1.18124999999999*G3_0_17_1 - 1.68749999999999*G3_0_18_0 - 0.843749999999989*G3_0_18_1 - 1.01249999999999*G3_0_19_1 - 0.0374999999999972*G3_1_10_0 - 0.0375000000000003*G3_1_10_1 + 0.712499999999992*G3_1_11_0 + 0.0375000000000001*G3_1_12_1 + 0.843749999999993*G3_1_13_0 + 1.68749999999999*G3_1_13_1 - 0.168750000000003*G3_1_14_0 - 0.337500000000006*G3_1_14_1 + 0.168750000000001*G3_1_15_0 + 0.168750000000003*G3_1_16_0 + 0.168749999999994*G3_1_17_0 + 0.337499999999991*G3_1_17_1 - 0.843749999999989*G3_1_18_0 - 1.68749999999998*G3_1_18_1 - 1.01249999999999*G3_1_19_0 + 0.674999999999998*G14_0_10_0 + 0.674999999999999*G14_0_10_1 - 1.34999999999999*G14_0_11_0 - 1.68749999999998*G14_0_13_1 + 0.337499999999998*G14_0_14_1 - 0.337500000000004*G14_0_15_1 - 0.337499999999998*G14_0_16_1 - 2.69999999999998*G14_0_17_0 - 2.36249999999998*G14_0_17_1 + 3.37499999999997*G14_0_18_0 + 1.68749999999998*G14_0_18_1 - 1.12119515061071e-14*G14_0_19_0 + 2.02499999999998*G14_0_19_1 + 0.0749999999999945*G14_1_10_0 + 0.0750000000000005*G14_1_10_1 - 1.42499999999998*G14_1_11_0 - 0.0750000000000001*G14_1_12_1 - 1.68749999999999*G14_1_13_0 - 3.37499999999998*G14_1_13_1 + 0.337500000000006*G14_1_14_0 + 0.675000000000012*G14_1_14_1 - 0.337500000000002*G14_1_15_0 - 1.24978152826749e-14*G14_1_15_1 - 0.337500000000005*G14_1_16_0 - 0.337499999999988*G14_1_17_0 - 0.674999999999982*G14_1_17_1 + 1.68749999999998*G14_1_18_0 + 3.37499999999996*G14_1_18_1 + 2.02499999999999*G14_1_19_0 + 0.674999999999998*G15_0_10_0 + 0.674999999999999*G15_0_10_1 - 1.34999999999999*G15_0_11_0 - 1.68749999999998*G15_0_13_1 + 0.337499999999998*G15_0_14_1 - 0.337500000000004*G15_0_15_1 - 0.337499999999998*G15_0_16_1 - 2.69999999999998*G15_0_17_0 - 2.36249999999998*G15_0_17_1 + 3.37499999999997*G15_0_18_0 + 1.68749999999998*G15_0_18_1 - 1.12119515061071e-14*G15_0_19_0 + 2.02499999999998*G15_0_19_1 + 0.0749999999999945*G15_1_10_0 + 0.0750000000000005*G15_1_10_1 - 1.42499999999998*G15_1_11_0 - 0.0750000000000001*G15_1_12_1 - 1.68749999999999*G15_1_13_0 - 3.37499999999998*G15_1_13_1 + 0.337500000000006*G15_1_14_0 + 0.675000000000012*G15_1_14_1 - 0.337500000000002*G15_1_15_0 - 1.24978152826749e-14*G15_1_15_1 - 0.337500000000005*G15_1_16_0 - 0.337499999999988*G15_1_17_0 - 0.674999999999982*G15_1_17_1 + 1.68749999999998*G15_1_18_0 + 3.37499999999996*G15_1_18_1 + 2.02499999999999*G15_1_19_0 + 0.0750000000000004*G16_0_20 + 0.224999999999998*G16_0_21 - 0.299999999999998*G16_0_25 - 0.0749999999999991*G16_1_20 + 0.299999999999998*G16_1_21 - 0.0749999999999997*G16_1_22 + 0.299999999999995*G16_1_23 + 0.299999999999996*G16_1_25 - 0.337499999999999*G17_0_10_0 - 0.3375*G17_0_10_1 + 0.674999999999994*G17_0_11_0 + 0.843749999999992*G17_0_13_1 - 0.168749999999999*G17_0_14_1 + 0.168750000000002*G17_0_15_1 + 0.168749999999999*G17_0_16_1 + 1.34999999999999*G17_0_17_0 + 1.18124999999999*G17_0_17_1 - 1.68749999999999*G17_0_18_0 - 0.843749999999989*G17_0_18_1 - 1.01249999999999*G17_0_19_1 - 0.0374999999999972*G17_1_10_0 - 0.0375000000000003*G17_1_10_1 + 0.712499999999992*G17_1_11_0 + 0.0375000000000001*G17_1_12_1 + 0.843749999999993*G17_1_13_0 + 1.68749999999999*G17_1_13_1 - 0.168750000000003*G17_1_14_0 - 0.337500000000006*G17_1_14_1 + 0.168750000000001*G17_1_15_0 + 0.168750000000003*G17_1_16_0 + 0.168749999999994*G17_1_17_0 + 0.337499999999991*G17_1_17_1 - 0.843749999999989*G17_1_18_0 - 1.68749999999998*G17_1_18_1 - 1.01249999999999*G17_1_19_0 - 0.337499999999999*G18_0_10_0 - 0.3375*G18_0_10_1 + 0.674999999999994*G18_0_11_0 + 0.843749999999992*G18_0_13_1 - 0.168749999999999*G18_0_14_1 + 0.168750000000002*G18_0_15_1 + 0.168749999999999*G18_0_16_1 + 1.34999999999999*G18_0_17_0 + 1.18124999999999*G18_0_17_1 - 1.68749999999999*G18_0_18_0 - 0.843749999999989*G18_0_18_1 - 1.01249999999999*G18_0_19_1 - 0.0374999999999972*G18_1_10_0 - 0.0375000000000003*G18_1_10_1 + 0.712499999999992*G18_1_11_0 + 0.0375000000000001*G18_1_12_1 + 0.843749999999993*G18_1_13_0 + 1.68749999999999*G18_1_13_1 - 0.168750000000003*G18_1_14_0 - 0.337500000000006*G18_1_14_1 + 0.168750000000001*G18_1_15_0 + 0.168750000000003*G18_1_16_0 + 0.168749999999994*G18_1_17_0 + 0.337499999999991*G18_1_17_1 - 0.843749999999989*G18_1_18_0 - 1.68749999999998*G18_1_18_1 - 1.01249999999999*G18_1_19_0 - 0.0375000000000002*G19_0_20 - 0.112499999999999*G19_0_21 + 0.149999999999999*G19_0_25 + 0.0374999999999996*G19_1_20 - 0.149999999999999*G19_1_21 + 0.0374999999999999*G19_1_22 - 0.149999999999998*G19_1_23 - 0.149999999999998*G19_1_25 + 12.0535714285714*G22_0_10_0 + 12.0535714285714*G22_0_10_1 + 5.22321428571422*G22_0_11_0 - 2.8125*G22_0_12_1 + 7.63392857142855*G22_0_13_0 + 15.267857142857*G22_0_13_1 - 0.803571428571424*G22_0_14_0 - 0.401785714285657*G22_0_14_1 + 2.00892857142855*G22_0_15_0 - 22.0982142857142*G22_0_15_1 + 0.803571428571421*G22_0_16_0 + 12.8571428571428*G22_0_16_1 - 14.0625*G22_0_17_0 + 10.0446428571427*G22_0_17_1 - 3.21428571428561*G22_0_18_0 - 15.267857142857*G22_0_18_1 - 9.6428571428571*G22_0_19_0 - 9.64285714285713*G22_0_19_1 - 0.669642857142802*G22_1_10_0 - 0.669642857142871*G22_1_10_1 + 26.7857142857141*G22_1_11_0 - 5.07226067866978e-14*G22_1_11_1 + 4.68749999999999*G22_1_12_1 + 4.01785714285714*G22_1_13_0 + 48.2142857142854*G22_1_13_1 - 2.00892857142856*G22_1_14_0 - 24.1071428571427*G22_1_14_1 + 8.03571428571425*G22_1_15_0 - 2.00892857142842*G22_1_15_1 + 2.00892857142855*G22_1_16_0 - 2.0089285714286*G22_1_16_1 + 14.0624999999998*G22_1_17_0 + 24.1071428571426*G22_1_17_1 - 40.1785714285711*G22_1_18_0 - 48.2142857142852*G22_1_18_1 - 12.0535714285714*G22_1_19_0 - 1.32051054119176e-13*G22_1_19_1 + 3.61607142857144*G22_2_10_0 + 3.61607142857141*G22_2_10_1 + 4.82142857142853*G22_2_11_0 + 1.29514454716428e-14*G22_2_12_1 + 7.63392857142857*G22_2_13_0 + 14.8660714285714*G22_2_13_1 - 2.00892857142857*G22_2_14_0 - 4.41964285714288*G22_2_14_1 - 0.401785714285704*G22_2_15_0 - 6.02678571428564*G22_2_15_1 + 2.00892857142857*G22_2_16_0 + 2.41071428571429*G22_2_16_1 - 8.43750000000002*G22_2_17_0 - 2.81250000000006*G22_2_17_1 + 4.20031847844782e-14*G22_2_18_0 - 14.8660714285713*G22_2_18_1 - 7.23214285714287*G22_2_19_0 + 7.23214285714278*G22_2_19_1 - 0.401785714285583*G22_3_10_0 - 0.40178571428581*G22_3_10_1 + 40.1785714285712*G22_3_11_0 - 1.70452359186991e-14*G22_3_11_1 + 0.401785714285845*G22_3_12_1 + 72.3214285714284*G22_3_13_0 + 108.482142857143*G22_3_13_1 - 3.61607142857141*G22_3_14_0 - 4.19746702673418e-13*G22_3_14_1 - 7.23214285714282*G22_3_15_0 - 10.8482142857139*G22_3_15_1 + 3.61607142857139*G22_3_16_0 + 10.8482142857145*G22_3_16_1 - 3.6160714285717*G22_3_17_0 - 6.38140798883691e-13*G22_3_17_1 - 36.1607142857139*G22_3_18_0 - 108.482142857142*G22_3_18_1 - 65.0892857142855*G22_3_19_0 - 3.88869492162769e-13*G22_3_19_1 - 5.22321428571432*G22_4_10_0 - 5.2232142857142*G22_4_10_1 - 20.0892857142856*G22_4_11_0 - 5.62500000000006*G22_4_12_1 - 25.3125*G22_4_13_0 - 54.2410714285713*G22_4_13_1 - 3.61607142857146*G22_4_14_0 + 10.8482142857144*G22_4_14_1 + 3.61607142857138*G22_4_15_0 + 10.848214285714*G22_4_15_1 + 3.61607142857147*G22_4_16_0 - 6.38551711507063e-14*G22_4_16_1 + 18.0803571428572*G22_4_17_0 + 10.8482142857145*G22_4_17_1 + 7.2321428571427*G22_4_18_0 + 54.2410714285709*G22_4_18_1 + 21.6964285714286*G22_4_19_0 - 21.6964285714282*G22_4_19_1 + 20.0892857142857*G22_5_10_0 + 20.0892857142858*G22_5_10_1 - 5.625*G22_5_11_0 - 3.98999081119768e-14*G22_5_11_1 + 5.22321428571421*G22_5_12_1 - 3.61607142857133*G22_5_13_0 - 3.61607142857145*G22_5_13_1 + 7.23214285714284*G22_5_14_0 - 3.61607142857118*G22_5_14_1 + 47.0089285714285*G22_5_15_0 - 7.23214285714296*G22_5_15_1 - 7.23214285714285*G22_5_16_0 - 18.0803571428572*G22_5_16_1 - 28.9285714285715*G22_5_17_0 + 25.3125*G22_5_17_1 + 14.4642857142858*G22_5_18_0 + 3.61607142857126*G22_5_18_1 - 43.3928571428571*G22_5_19_0 - 21.6964285714284*G22_5_19_1 - 13.6607142857143*G22_6_10_0 - 13.6607142857142*G22_6_10_1 - 4.41964285714284*G22_6_11_0 - 2.65814518476759e-14*G22_6_11_1 - 4.41964285714286*G22_6_12_1 - 3.61607142857145*G22_6_13_0 - 14.4642857142857*G22_6_13_1 - 14.4642857142857*G22_6_14_0 - 3.61607142857139*G22_6_14_1 + 3.61607142857138*G22_6_15_0 + 25.3124999999999*G22_6_15_1 + 14.4642857142857*G22_6_16_0 - 7.23214285714289*G22_6_16_1 + 25.3125*G22_6_17_0 + 3.61607142857152*G22_6_17_1 - 7.23214285714289*G22_6_18_0 + 14.4642857142856*G22_6_18_1 + 7.39860104605194e-14*G22_6_19_0 + 8.25270299147085e-14*G22_6_19_1 + 28.1249999999999*G22_7_10_0 + 28.125*G22_7_10_1 - 28.1249999999999*G22_7_11_0 + 1.29762121219297e-14*G22_7_11_1 - 2.81250000000009*G22_7_12_1 - 25.3124999999999*G22_7_13_0 - 54.2410714285714*G22_7_13_1 + 7.23214285714284*G22_7_14_0 + 10.8482142857146*G22_7_14_1 + 25.3124999999999*G22_7_15_0 - 28.9285714285716*G22_7_15_1 - 7.23214285714283*G22_7_16_0 + 3.61607142857128*G22_7_16_1 - 43.3928571428569*G22_7_17_0 + 10.8482142857146*G22_7_17_1 + 43.3928571428569*G22_7_18_0 + 54.2410714285709*G22_7_18_1 - 1.17355906622315e-14*G22_7_19_0 - 21.6964285714283*G22_7_19_1 + 6.42857142857159*G22_8_10_0 + 6.42857142857109*G22_8_10_1 + 80.3571428571423*G22_8_11_0 - 7.84038981703907e-14*G22_8_11_1 + 29.7321428571431*G22_8_12_1 + 72.3214285714284*G22_8_13_0 + 216.964285714285*G22_8_13_1 - 14.4642857142856*G22_8_14_0 - 108.482142857143*G22_8_14_1 - 28.9285714285714*G22_8_15_0 - 7.23214285714179*G22_8_15_1 + 14.4642857142856*G22_8_16_0 - 28.9285714285711*G22_8_16_1 - 86.7857142857143*G22_8_17_0 - 108.482142857144*G22_8_17_1 + 3.7043010286169e-13*G22_8_18_0 - 216.964285714283*G22_8_18_1 - 43.392857142857*G22_8_19_0 + 216.964285714284*G22_8_19_1 + 19.2857142857144*G22_9_10_0 + 19.2857142857142*G22_9_10_1 + 24.1071428571426*G22_9_11_0 - 8.34236841281747e-14*G22_9_11_1 + 2.4107142857144*G22_9_12_1 + 86.7857142857141*G22_9_13_0 + 108.482142857143*G22_9_13_1 - 21.6964285714285*G22_9_14_0 - 21.6964285714288*G22_9_14_1 + 43.392857142857*G22_9_15_0 + 2.80250947231817e-13*G22_9_15_1 + 21.6964285714285*G22_9_16_0 - 21.6964285714284*G22_9_16_1 - 65.0892857142859*G22_9_17_0 - 21.696428571429*G22_9_17_1 + 21.6964285714288*G22_9_18_0 - 108.482142857142*G22_9_18_1 - 130.178571428571*G22_9_19_0 + 43.3928571428567*G22_9_19_1 + 12.0535714285714*G23_10_10_0 + 12.0535714285714*G23_10_10_1 + 5.22321428571422*G23_10_11_0 - 2.8125*G23_10_12_1 + 7.63392857142855*G23_10_13_0 + 15.267857142857*G23_10_13_1 - 0.803571428571424*G23_10_14_0 - 0.401785714285657*G23_10_14_1 + 2.00892857142855*G23_10_15_0 - 22.0982142857142*G23_10_15_1 + 0.803571428571421*G23_10_16_0 + 12.8571428571428*G23_10_16_1 - 14.0625*G23_10_17_0 + 10.0446428571427*G23_10_17_1 - 3.21428571428561*G23_10_18_0 - 15.267857142857*G23_10_18_1 - 9.6428571428571*G23_10_19_0 - 9.64285714285713*G23_10_19_1 - 0.669642857142802*G23_11_10_0 - 0.669642857142871*G23_11_10_1 + 26.7857142857141*G23_11_11_0 - 5.07226067866978e-14*G23_11_11_1 + 4.68749999999999*G23_11_12_1 + 4.01785714285714*G23_11_13_0 + 48.2142857142854*G23_11_13_1 - 2.00892857142856*G23_11_14_0 - 24.1071428571427*G23_11_14_1 + 8.03571428571425*G23_11_15_0 - 2.00892857142842*G23_11_15_1 + 2.00892857142855*G23_11_16_0 - 2.0089285714286*G23_11_16_1 + 14.0624999999998*G23_11_17_0 + 24.1071428571426*G23_11_17_1 - 40.1785714285711*G23_11_18_0 - 48.2142857142852*G23_11_18_1 - 12.0535714285714*G23_11_19_0 - 1.32051054119176e-13*G23_11_19_1 + 3.61607142857144*G23_12_10_0 + 3.61607142857141*G23_12_10_1 + 4.82142857142853*G23_12_11_0 + 1.29514454716428e-14*G23_12_12_1 + 7.63392857142857*G23_12_13_0 + 14.8660714285714*G23_12_13_1 - 2.00892857142857*G23_12_14_0 - 4.41964285714288*G23_12_14_1 - 0.401785714285704*G23_12_15_0 - 6.02678571428564*G23_12_15_1 + 2.00892857142857*G23_12_16_0 + 2.41071428571429*G23_12_16_1 - 8.43750000000002*G23_12_17_0 - 2.81250000000006*G23_12_17_1 + 4.20031847844782e-14*G23_12_18_0 - 14.8660714285713*G23_12_18_1 - 7.23214285714287*G23_12_19_0 + 7.23214285714278*G23_12_19_1 - 0.401785714285583*G23_13_10_0 - 0.40178571428581*G23_13_10_1 + 40.1785714285712*G23_13_11_0 - 1.70452359186991e-14*G23_13_11_1 + 0.401785714285845*G23_13_12_1 + 72.3214285714284*G23_13_13_0 + 108.482142857143*G23_13_13_1 - 3.61607142857141*G23_13_14_0 - 4.19746702673418e-13*G23_13_14_1 - 7.23214285714282*G23_13_15_0 - 10.8482142857139*G23_13_15_1 + 3.61607142857139*G23_13_16_0 + 10.8482142857145*G23_13_16_1 - 3.6160714285717*G23_13_17_0 - 6.38140798883691e-13*G23_13_17_1 - 36.1607142857139*G23_13_18_0 - 108.482142857142*G23_13_18_1 - 65.0892857142855*G23_13_19_0 - 3.88869492162769e-13*G23_13_19_1 - 5.22321428571432*G23_14_10_0 - 5.2232142857142*G23_14_10_1 - 20.0892857142856*G23_14_11_0 - 5.62500000000006*G23_14_12_1 - 25.3125*G23_14_13_0 - 54.2410714285713*G23_14_13_1 - 3.61607142857146*G23_14_14_0 + 10.8482142857144*G23_14_14_1 + 3.61607142857138*G23_14_15_0 + 10.848214285714*G23_14_15_1 + 3.61607142857147*G23_14_16_0 - 6.38551711507063e-14*G23_14_16_1 + 18.0803571428572*G23_14_17_0 + 10.8482142857145*G23_14_17_1 + 7.2321428571427*G23_14_18_0 + 54.2410714285709*G23_14_18_1 + 21.6964285714286*G23_14_19_0 - 21.6964285714282*G23_14_19_1 + 20.0892857142857*G23_15_10_0 + 20.0892857142858*G23_15_10_1 - 5.625*G23_15_11_0 - 3.98999081119768e-14*G23_15_11_1 + 5.22321428571421*G23_15_12_1 - 3.61607142857133*G23_15_13_0 - 3.61607142857145*G23_15_13_1 + 7.23214285714284*G23_15_14_0 - 3.61607142857118*G23_15_14_1 + 47.0089285714285*G23_15_15_0 - 7.23214285714296*G23_15_15_1 - 7.23214285714285*G23_15_16_0 - 18.0803571428572*G23_15_16_1 - 28.9285714285715*G23_15_17_0 + 25.3125*G23_15_17_1 + 14.4642857142858*G23_15_18_0 + 3.61607142857126*G23_15_18_1 - 43.3928571428571*G23_15_19_0 - 21.6964285714284*G23_15_19_1 - 13.6607142857143*G23_16_10_0 - 13.6607142857142*G23_16_10_1 - 4.41964285714284*G23_16_11_0 - 2.65814518476759e-14*G23_16_11_1 - 4.41964285714286*G23_16_12_1 - 3.61607142857145*G23_16_13_0 - 14.4642857142857*G23_16_13_1 - 14.4642857142857*G23_16_14_0 - 3.61607142857139*G23_16_14_1 + 3.61607142857138*G23_16_15_0 + 25.3124999999999*G23_16_15_1 + 14.4642857142857*G23_16_16_0 - 7.23214285714289*G23_16_16_1 + 25.3125*G23_16_17_0 + 3.61607142857152*G23_16_17_1 - 7.23214285714289*G23_16_18_0 + 14.4642857142856*G23_16_18_1 + 7.39860104605194e-14*G23_16_19_0 + 8.25270299147085e-14*G23_16_19_1 + 28.1249999999999*G23_17_10_0 + 28.125*G23_17_10_1 - 28.1249999999999*G23_17_11_0 + 1.29762121219297e-14*G23_17_11_1 - 2.81250000000009*G23_17_12_1 - 25.3124999999999*G23_17_13_0 - 54.2410714285714*G23_17_13_1 + 7.23214285714284*G23_17_14_0 + 10.8482142857146*G23_17_14_1 + 25.3124999999999*G23_17_15_0 - 28.9285714285716*G23_17_15_1 - 7.23214285714283*G23_17_16_0 + 3.61607142857128*G23_17_16_1 - 43.3928571428569*G23_17_17_0 + 10.8482142857146*G23_17_17_1 + 43.3928571428569*G23_17_18_0 + 54.2410714285709*G23_17_18_1 - 1.17355906622315e-14*G23_17_19_0 - 21.6964285714283*G23_17_19_1 + 6.42857142857159*G23_18_10_0 + 6.42857142857109*G23_18_10_1 + 80.3571428571423*G23_18_11_0 - 7.84038981703907e-14*G23_18_11_1 + 29.7321428571431*G23_18_12_1 + 72.3214285714284*G23_18_13_0 + 216.964285714285*G23_18_13_1 - 14.4642857142856*G23_18_14_0 - 108.482142857143*G23_18_14_1 - 28.9285714285714*G23_18_15_0 - 7.23214285714179*G23_18_15_1 + 14.4642857142856*G23_18_16_0 - 28.9285714285711*G23_18_16_1 - 86.7857142857143*G23_18_17_0 - 108.482142857144*G23_18_17_1 + 3.7043010286169e-13*G23_18_18_0 - 216.964285714283*G23_18_18_1 - 43.392857142857*G23_18_19_0 + 216.964285714284*G23_18_19_1 + 19.2857142857144*G23_19_10_0 + 19.2857142857142*G23_19_10_1 + 24.1071428571426*G23_19_11_0 - 8.34236841281747e-14*G23_19_11_1 + 2.4107142857144*G23_19_12_1 + 86.7857142857141*G23_19_13_0 + 108.482142857143*G23_19_13_1 - 21.6964285714285*G23_19_14_0 - 21.6964285714288*G23_19_14_1 + 43.392857142857*G23_19_15_0 + 2.80250947231817e-13*G23_19_15_1 + 21.6964285714285*G23_19_16_0 - 21.6964285714284*G23_19_16_1 - 65.0892857142859*G23_19_17_0 - 21.696428571429*G23_19_17_1 + 21.6964285714288*G23_19_18_0 - 108.482142857142*G23_19_18_1 - 130.178571428571*G23_19_19_0 + 43.3928571428567*G23_19_19_1 - 6.0267857142857*G26_0_10_0 - 6.02678571428569*G26_0_10_1 - 2.61160714285711*G26_0_11_0 + 1.40625*G26_0_12_1 - 3.81696428571428*G26_0_13_0 - 7.6339285714285*G26_0_13_1 + 0.401785714285712*G26_0_14_0 + 0.200892857142828*G26_0_14_1 - 1.00446428571427*G26_0_15_0 + 11.0491071428571*G26_0_15_1 - 0.401785714285711*G26_0_16_0 - 6.42857142857141*G26_0_16_1 + 7.03125000000001*G26_0_17_0 - 5.02232142857137*G26_0_17_1 + 1.6071428571428*G26_0_18_0 + 7.63392857142849*G26_0_18_1 + 4.82142857142855*G26_0_19_0 + 4.82142857142857*G26_0_19_1 + 0.334821428571401*G26_1_10_0 + 0.334821428571435*G26_1_10_1 - 13.392857142857*G26_1_11_0 + 2.53613033933489e-14*G26_1_11_1 - 2.34375*G26_1_12_1 - 2.00892857142857*G26_1_13_0 - 24.1071428571427*G26_1_13_1 + 1.00446428571428*G26_1_14_0 + 12.0535714285714*G26_1_14_1 - 4.01785714285712*G26_1_15_0 + 1.00446428571421*G26_1_15_1 - 1.00446428571428*G26_1_16_0 + 1.0044642857143*G26_1_16_1 - 7.03124999999989*G26_1_17_0 - 12.0535714285713*G26_1_17_1 + 20.0892857142855*G26_1_18_0 + 24.1071428571426*G26_1_18_1 + 6.02678571428569*G26_1_19_0 + 6.60255270595878e-14*G26_1_19_1 - 1.80803571428572*G26_2_10_0 - 1.8080357142857*G26_2_10_1 - 2.41071428571427*G26_2_11_0 - 3.81696428571428*G26_2_13_0 - 7.4330357142857*G26_2_13_1 + 1.00446428571428*G26_2_14_0 + 2.20982142857144*G26_2_14_1 + 0.200892857142852*G26_2_15_0 + 3.01339285714282*G26_2_15_1 - 1.00446428571428*G26_2_16_0 - 1.20535714285715*G26_2_16_1 + 4.21875000000001*G26_2_17_0 + 1.40625000000003*G26_2_17_1 - 2.10015923922391e-14*G26_2_18_0 + 7.43303571428565*G26_2_18_1 + 3.61607142857143*G26_2_19_0 - 3.61607142857139*G26_2_19_1 + 0.200892857142792*G26_3_10_0 + 0.200892857142905*G26_3_10_1 - 20.0892857142856*G26_3_11_0 - 0.200892857142922*G26_3_12_1 - 36.1607142857142*G26_3_13_0 - 54.2410714285713*G26_3_13_1 + 1.80803571428571*G26_3_14_0 + 2.09873351336709e-13*G26_3_14_1 + 3.61607142857141*G26_3_15_0 + 5.42410714285694*G26_3_15_1 - 1.80803571428569*G26_3_16_0 - 5.42410714285724*G26_3_16_1 + 1.80803571428585*G26_3_17_0 + 3.19070399441845e-13*G26_3_17_1 + 18.080357142857*G26_3_18_0 + 54.2410714285709*G26_3_18_1 + 32.5446428571428*G26_3_19_0 + 1.94434746081384e-13*G26_3_19_1 + 2.61160714285716*G26_4_10_0 + 2.6116071428571*G26_4_10_1 + 10.0446428571428*G26_4_11_0 + 2.81250000000003*G26_4_12_1 + 12.65625*G26_4_13_0 + 27.1205357142856*G26_4_13_1 + 1.80803571428573*G26_4_14_0 - 5.42410714285719*G26_4_14_1 - 1.80803571428569*G26_4_15_0 - 5.42410714285701*G26_4_15_1 - 1.80803571428574*G26_4_16_0 + 3.19275855753531e-14*G26_4_16_1 - 9.0401785714286*G26_4_17_0 - 5.42410714285727*G26_4_17_1 - 3.61607142857135*G26_4_18_0 - 27.1205357142854*G26_4_18_1 - 10.8482142857143*G26_4_19_0 + 10.8482142857141*G26_4_19_1 - 10.0446428571429*G26_5_10_0 - 10.0446428571429*G26_5_10_1 + 2.8125*G26_5_11_0 + 1.99499540559884e-14*G26_5_11_1 - 2.61160714285711*G26_5_12_1 + 1.80803571428567*G26_5_13_0 + 1.80803571428573*G26_5_13_1 - 3.61607142857142*G26_5_14_0 + 1.80803571428559*G26_5_14_1 - 23.5044642857142*G26_5_15_0 + 3.61607142857148*G26_5_15_1 + 3.61607142857142*G26_5_16_0 + 9.0401785714286*G26_5_16_1 + 14.4642857142858*G26_5_17_0 - 12.65625*G26_5_17_1 - 7.23214285714291*G26_5_18_0 - 1.80803571428563*G26_5_18_1 + 21.6964285714286*G26_5_19_0 + 10.8482142857142*G26_5_19_1 + 6.83035714285713*G26_6_10_0 + 6.83035714285712*G26_6_10_1 + 2.20982142857142*G26_6_11_0 + 1.32907259238379e-14*G26_6_11_1 + 2.20982142857143*G26_6_12_1 + 1.80803571428573*G26_6_13_0 + 7.23214285714283*G26_6_13_1 + 7.23214285714284*G26_6_14_0 + 1.80803571428569*G26_6_14_1 - 1.80803571428569*G26_6_15_0 - 12.6562499999999*G26_6_15_1 - 7.23214285714285*G26_6_16_0 + 3.61607142857145*G26_6_16_1 - 12.65625*G26_6_17_0 - 1.80803571428576*G26_6_17_1 + 3.61607142857144*G26_6_18_0 - 7.23214285714279*G26_6_18_1 - 3.69930052302597e-14*G26_6_19_0 - 4.12635149573543e-14*G26_6_19_1 - 14.0624999999999*G26_7_10_0 - 14.0625*G26_7_10_1 + 14.0624999999999*G26_7_11_0 + 1.40625000000005*G26_7_12_1 + 12.65625*G26_7_13_0 + 27.1205357142857*G26_7_13_1 - 3.61607142857142*G26_7_14_0 - 5.4241071428573*G26_7_14_1 - 12.65625*G26_7_15_0 + 14.4642857142858*G26_7_15_1 + 3.61607142857142*G26_7_16_0 - 1.80803571428564*G26_7_16_1 + 21.6964285714285*G26_7_17_0 - 5.4241071428573*G26_7_17_1 - 21.6964285714285*G26_7_18_0 - 27.1205357142854*G26_7_18_1 + 10.8482142857141*G26_7_19_1 - 3.21428571428579*G26_8_10_0 - 3.21428571428554*G26_8_10_1 - 40.1785714285711*G26_8_11_0 + 3.92019490851954e-14*G26_8_11_1 - 14.8660714285716*G26_8_12_1 - 36.1607142857142*G26_8_13_0 - 108.482142857143*G26_8_13_1 + 7.23214285714281*G26_8_14_0 + 54.2410714285717*G26_8_14_1 + 14.4642857142857*G26_8_15_0 + 3.61607142857089*G26_8_15_1 - 7.2321428571428*G26_8_16_0 + 14.4642857142856*G26_8_16_1 + 43.3928571428571*G26_8_17_0 + 54.2410714285718*G26_8_17_1 - 1.85215051430845e-13*G26_8_18_0 + 108.482142857142*G26_8_18_1 + 21.6964285714285*G26_8_19_0 - 108.482142857142*G26_8_19_1 - 9.6428571428572*G26_9_10_0 - 9.64285714285711*G26_9_10_1 - 12.0535714285713*G26_9_11_0 + 4.17118420640874e-14*G26_9_11_1 - 1.2053571428572*G26_9_12_1 - 43.3928571428571*G26_9_13_0 - 54.2410714285713*G26_9_13_1 + 10.8482142857143*G26_9_14_0 + 10.8482142857144*G26_9_14_1 - 21.6964285714285*G26_9_15_0 - 1.40125473615908e-13*G26_9_15_1 - 10.8482142857142*G26_9_16_0 + 10.8482142857142*G26_9_16_1 + 32.5446428571429*G26_9_17_0 + 10.8482142857145*G26_9_17_1 - 10.8482142857144*G26_9_18_0 + 54.241071428571*G26_9_18_1 + 65.0892857142855*G26_9_19_0 - 21.6964285714283*G26_9_19_1 - 6.0267857142857*G27_10_10_0 - 6.02678571428569*G27_10_10_1 - 2.61160714285711*G27_10_11_0 + 1.40625*G27_10_12_1 - 3.81696428571428*G27_10_13_0 - 7.6339285714285*G27_10_13_1 + 0.401785714285712*G27_10_14_0 + 0.200892857142828*G27_10_14_1 - 1.00446428571427*G27_10_15_0 + 11.0491071428571*G27_10_15_1 - 0.401785714285711*G27_10_16_0 - 6.42857142857141*G27_10_16_1 + 7.03125000000001*G27_10_17_0 - 5.02232142857137*G27_10_17_1 + 1.6071428571428*G27_10_18_0 + 7.63392857142849*G27_10_18_1 + 4.82142857142855*G27_10_19_0 + 4.82142857142857*G27_10_19_1 + 0.334821428571401*G27_11_10_0 + 0.334821428571435*G27_11_10_1 - 13.392857142857*G27_11_11_0 + 2.53613033933489e-14*G27_11_11_1 - 2.34375*G27_11_12_1 - 2.00892857142857*G27_11_13_0 - 24.1071428571427*G27_11_13_1 + 1.00446428571428*G27_11_14_0 + 12.0535714285714*G27_11_14_1 - 4.01785714285712*G27_11_15_0 + 1.00446428571421*G27_11_15_1 - 1.00446428571428*G27_11_16_0 + 1.0044642857143*G27_11_16_1 - 7.03124999999989*G27_11_17_0 - 12.0535714285713*G27_11_17_1 + 20.0892857142855*G27_11_18_0 + 24.1071428571426*G27_11_18_1 + 6.02678571428569*G27_11_19_0 + 6.60255270595878e-14*G27_11_19_1 - 1.80803571428572*G27_12_10_0 - 1.8080357142857*G27_12_10_1 - 2.41071428571427*G27_12_11_0 - 3.81696428571428*G27_12_13_0 - 7.4330357142857*G27_12_13_1 + 1.00446428571428*G27_12_14_0 + 2.20982142857144*G27_12_14_1 + 0.200892857142852*G27_12_15_0 + 3.01339285714282*G27_12_15_1 - 1.00446428571428*G27_12_16_0 - 1.20535714285715*G27_12_16_1 + 4.21875000000001*G27_12_17_0 + 1.40625000000003*G27_12_17_1 - 2.10015923922391e-14*G27_12_18_0 + 7.43303571428565*G27_12_18_1 + 3.61607142857143*G27_12_19_0 - 3.61607142857139*G27_12_19_1 + 0.200892857142792*G27_13_10_0 + 0.200892857142905*G27_13_10_1 - 20.0892857142856*G27_13_11_0 - 0.200892857142922*G27_13_12_1 - 36.1607142857142*G27_13_13_0 - 54.2410714285713*G27_13_13_1 + 1.80803571428571*G27_13_14_0 + 2.09873351336709e-13*G27_13_14_1 + 3.61607142857141*G27_13_15_0 + 5.42410714285694*G27_13_15_1 - 1.80803571428569*G27_13_16_0 - 5.42410714285724*G27_13_16_1 + 1.80803571428585*G27_13_17_0 + 3.19070399441845e-13*G27_13_17_1 + 18.080357142857*G27_13_18_0 + 54.2410714285709*G27_13_18_1 + 32.5446428571428*G27_13_19_0 + 1.94434746081384e-13*G27_13_19_1 + 2.61160714285716*G27_14_10_0 + 2.6116071428571*G27_14_10_1 + 10.0446428571428*G27_14_11_0 + 2.81250000000003*G27_14_12_1 + 12.65625*G27_14_13_0 + 27.1205357142856*G27_14_13_1 + 1.80803571428573*G27_14_14_0 - 5.42410714285719*G27_14_14_1 - 1.80803571428569*G27_14_15_0 - 5.42410714285701*G27_14_15_1 - 1.80803571428574*G27_14_16_0 + 3.19275855753531e-14*G27_14_16_1 - 9.0401785714286*G27_14_17_0 - 5.42410714285727*G27_14_17_1 - 3.61607142857135*G27_14_18_0 - 27.1205357142854*G27_14_18_1 - 10.8482142857143*G27_14_19_0 + 10.8482142857141*G27_14_19_1 - 10.0446428571429*G27_15_10_0 - 10.0446428571429*G27_15_10_1 + 2.8125*G27_15_11_0 + 1.99499540559884e-14*G27_15_11_1 - 2.61160714285711*G27_15_12_1 + 1.80803571428567*G27_15_13_0 + 1.80803571428573*G27_15_13_1 - 3.61607142857142*G27_15_14_0 + 1.80803571428559*G27_15_14_1 - 23.5044642857142*G27_15_15_0 + 3.61607142857148*G27_15_15_1 + 3.61607142857142*G27_15_16_0 + 9.0401785714286*G27_15_16_1 + 14.4642857142858*G27_15_17_0 - 12.65625*G27_15_17_1 - 7.23214285714291*G27_15_18_0 - 1.80803571428563*G27_15_18_1 + 21.6964285714286*G27_15_19_0 + 10.8482142857142*G27_15_19_1 + 6.83035714285713*G27_16_10_0 + 6.83035714285712*G27_16_10_1 + 2.20982142857142*G27_16_11_0 + 1.32907259238379e-14*G27_16_11_1 + 2.20982142857143*G27_16_12_1 + 1.80803571428573*G27_16_13_0 + 7.23214285714283*G27_16_13_1 + 7.23214285714284*G27_16_14_0 + 1.80803571428569*G27_16_14_1 - 1.80803571428569*G27_16_15_0 - 12.6562499999999*G27_16_15_1 - 7.23214285714285*G27_16_16_0 + 3.61607142857145*G27_16_16_1 - 12.65625*G27_16_17_0 - 1.80803571428576*G27_16_17_1 + 3.61607142857144*G27_16_18_0 - 7.23214285714279*G27_16_18_1 - 3.69930052302597e-14*G27_16_19_0 - 4.12635149573543e-14*G27_16_19_1 - 14.0624999999999*G27_17_10_0 - 14.0625*G27_17_10_1 + 14.0624999999999*G27_17_11_0 + 1.40625000000005*G27_17_12_1 + 12.65625*G27_17_13_0 + 27.1205357142857*G27_17_13_1 - 3.61607142857142*G27_17_14_0 - 5.4241071428573*G27_17_14_1 - 12.65625*G27_17_15_0 + 14.4642857142858*G27_17_15_1 + 3.61607142857142*G27_17_16_0 - 1.80803571428564*G27_17_16_1 + 21.6964285714285*G27_17_17_0 - 5.4241071428573*G27_17_17_1 - 21.6964285714285*G27_17_18_0 - 27.1205357142854*G27_17_18_1 + 10.8482142857141*G27_17_19_1 - 3.21428571428579*G27_18_10_0 - 3.21428571428554*G27_18_10_1 - 40.1785714285711*G27_18_11_0 + 3.92019490851954e-14*G27_18_11_1 - 14.8660714285716*G27_18_12_1 - 36.1607142857142*G27_18_13_0 - 108.482142857143*G27_18_13_1 + 7.23214285714281*G27_18_14_0 + 54.2410714285717*G27_18_14_1 + 14.4642857142857*G27_18_15_0 + 3.61607142857089*G27_18_15_1 - 7.2321428571428*G27_18_16_0 + 14.4642857142856*G27_18_16_1 + 43.3928571428571*G27_18_17_0 + 54.2410714285718*G27_18_17_1 - 1.85215051430845e-13*G27_18_18_0 + 108.482142857142*G27_18_18_1 + 21.6964285714285*G27_18_19_0 - 108.482142857142*G27_18_19_1 - 9.6428571428572*G27_19_10_0 - 9.64285714285711*G27_19_10_1 - 12.0535714285713*G27_19_11_0 + 4.17118420640874e-14*G27_19_11_1 - 1.2053571428572*G27_19_12_1 - 43.3928571428571*G27_19_13_0 - 54.2410714285713*G27_19_13_1 + 10.8482142857143*G27_19_14_0 + 10.8482142857144*G27_19_14_1 - 21.6964285714285*G27_19_15_0 - 1.40125473615908e-13*G27_19_15_1 - 10.8482142857142*G27_19_16_0 + 10.8482142857142*G27_19_16_1 + 32.5446428571429*G27_19_17_0 + 10.8482142857145*G27_19_17_1 - 10.8482142857144*G27_19_18_0 + 54.241071428571*G27_19_18_1 + 65.0892857142855*G27_19_19_0 - 21.6964285714283*G27_19_19_1;
    A[19] = -4.04999999999999*G0_0_3_0 - 2.025*G0_0_3_1 - 2.02499999999999*G0_0_4_1 - 4.04999999999999*G0_0_5_0 - 2.02499999999999*G0_0_5_1 + 2.02499999999999*G0_0_6_1 + 1.6454719531378e-14*G0_0_7_0 - 2.02499999999998*G0_0_7_1 - 1.12119515061071e-14*G0_0_8_0 + 2.02499999999999*G0_0_8_1 + 8.09999999999997*G0_0_9_0 + 4.04999999999998*G0_0_9_1 - 2.025*G0_1_3_0 - 2.025*G0_1_4_0 - 4.04999999999999*G0_1_4_1 - 2.02499999999999*G0_1_5_0 + 1.00058850094342e-14*G0_1_5_1 + 2.025*G0_1_6_0 - 1.26287869051112e-14*G0_1_6_1 - 2.02499999999998*G0_1_7_0 - 4.04999999999998*G0_1_7_1 + 2.02499999999998*G0_1_8_0 + 4.04999999999998*G0_1_9_0 + 8.09999999999997*G0_1_9_1 - 4.04999999999999*G1_0_13_0 - 2.025*G1_0_13_1 - 2.02499999999999*G1_0_14_1 - 4.04999999999999*G1_0_15_0 - 2.02499999999999*G1_0_15_1 + 2.02499999999999*G1_0_16_1 + 1.6454719531378e-14*G1_0_17_0 - 2.02499999999998*G1_0_17_1 - 1.12119515061071e-14*G1_0_18_0 + 2.02499999999999*G1_0_18_1 + 8.09999999999997*G1_0_19_0 + 4.04999999999998*G1_0_19_1 - 2.025*G1_1_13_0 - 2.025*G1_1_14_0 - 4.04999999999999*G1_1_14_1 - 2.02499999999999*G1_1_15_0 + 1.00058850094342e-14*G1_1_15_1 + 2.025*G1_1_16_0 - 1.26287869051112e-14*G1_1_16_1 - 2.02499999999998*G1_1_17_0 - 4.04999999999998*G1_1_17_1 + 2.02499999999998*G1_1_18_0 + 4.04999999999998*G1_1_19_0 + 8.09999999999997*G1_1_19_1 + 2.025*G2_0_3_0 + 1.0125*G2_0_3_1 + 1.01249999999999*G2_0_4_1 + 2.02499999999999*G2_0_5_0 + 1.01249999999999*G2_0_5_1 - 1.01249999999999*G2_0_6_1 + 1.01249999999999*G2_0_7_1 - 1.01249999999999*G2_0_8_1 - 4.04999999999999*G2_0_9_0 - 2.02499999999999*G2_0_9_1 + 1.0125*G2_1_3_0 + 1.0125*G2_1_4_0 + 2.025*G2_1_4_1 + 1.01249999999999*G2_1_5_0 - 1.0125*G2_1_6_0 + 1.01249999999999*G2_1_7_0 + 2.02499999999999*G2_1_7_1 - 1.01249999999999*G2_1_8_0 - 2.02499999999999*G2_1_9_0 - 4.04999999999998*G2_1_9_1 + 2.025*G3_0_13_0 + 1.0125*G3_0_13_1 + 1.01249999999999*G3_0_14_1 + 2.02499999999999*G3_0_15_0 + 1.01249999999999*G3_0_15_1 - 1.01249999999999*G3_0_16_1 + 1.01249999999999*G3_0_17_1 - 1.01249999999999*G3_0_18_1 - 4.04999999999999*G3_0_19_0 - 2.02499999999999*G3_0_19_1 + 1.0125*G3_1_13_0 + 1.0125*G3_1_14_0 + 2.025*G3_1_14_1 + 1.01249999999999*G3_1_15_0 - 1.0125*G3_1_16_0 + 1.01249999999999*G3_1_17_0 + 2.02499999999999*G3_1_17_1 - 1.01249999999999*G3_1_18_0 - 2.02499999999999*G3_1_19_0 - 4.04999999999998*G3_1_19_1 - 4.04999999999999*G14_0_13_0 - 2.025*G14_0_13_1 - 2.02499999999999*G14_0_14_1 - 4.04999999999999*G14_0_15_0 - 2.02499999999999*G14_0_15_1 + 2.02499999999999*G14_0_16_1 + 1.6454719531378e-14*G14_0_17_0 - 2.02499999999998*G14_0_17_1 - 1.12119515061071e-14*G14_0_18_0 + 2.02499999999999*G14_0_18_1 + 8.09999999999997*G14_0_19_0 + 4.04999999999998*G14_0_19_1 - 2.025*G14_1_13_0 - 2.025*G14_1_14_0 - 4.04999999999999*G14_1_14_1 - 2.02499999999999*G14_1_15_0 + 1.00058850094342e-14*G14_1_15_1 + 2.025*G14_1_16_0 - 1.26287869051112e-14*G14_1_16_1 - 2.02499999999998*G14_1_17_0 - 4.04999999999998*G14_1_17_1 + 2.02499999999998*G14_1_18_0 + 4.04999999999998*G14_1_19_0 + 8.09999999999997*G14_1_19_1 - 4.04999999999999*G15_0_13_0 - 2.025*G15_0_13_1 - 2.02499999999999*G15_0_14_1 - 4.04999999999999*G15_0_15_0 - 2.02499999999999*G15_0_15_1 + 2.02499999999999*G15_0_16_1 + 1.6454719531378e-14*G15_0_17_0 - 2.02499999999998*G15_0_17_1 - 1.12119515061071e-14*G15_0_18_0 + 2.02499999999999*G15_0_18_1 + 8.09999999999997*G15_0_19_0 + 4.04999999999998*G15_0_19_1 - 2.025*G15_1_13_0 - 2.025*G15_1_14_0 - 4.04999999999999*G15_1_14_1 - 2.02499999999999*G15_1_15_0 + 1.00058850094342e-14*G15_1_15_1 + 2.025*G15_1_16_0 - 1.26287869051112e-14*G15_1_16_1 - 2.02499999999998*G15_1_17_0 - 4.04999999999998*G15_1_17_1 + 2.02499999999998*G15_1_18_0 + 4.04999999999998*G15_1_19_0 + 8.09999999999997*G15_1_19_1 - 0.149999999999999*G16_0_20 + 0.15*G16_0_21 + 0.599999999999997*G16_0_23 - 0.599999999999998*G16_0_24 - 0.149999999999999*G16_1_20 + 0.149999999999999*G16_1_22 + 0.6*G16_1_23 - 0.599999999999995*G16_1_25 + 2.025*G17_0_13_0 + 1.0125*G17_0_13_1 + 1.01249999999999*G17_0_14_1 + 2.02499999999999*G17_0_15_0 + 1.01249999999999*G17_0_15_1 - 1.01249999999999*G17_0_16_1 + 1.01249999999999*G17_0_17_1 - 1.01249999999999*G17_0_18_1 - 4.04999999999999*G17_0_19_0 - 2.02499999999999*G17_0_19_1 + 1.0125*G17_1_13_0 + 1.0125*G17_1_14_0 + 2.025*G17_1_14_1 + 1.01249999999999*G17_1_15_0 - 1.0125*G17_1_16_0 + 1.01249999999999*G17_1_17_0 + 2.02499999999999*G17_1_17_1 - 1.01249999999999*G17_1_18_0 - 2.02499999999999*G17_1_19_0 - 4.04999999999998*G17_1_19_1 + 2.025*G18_0_13_0 + 1.0125*G18_0_13_1 + 1.01249999999999*G18_0_14_1 + 2.02499999999999*G18_0_15_0 + 1.01249999999999*G18_0_15_1 - 1.01249999999999*G18_0_16_1 + 1.01249999999999*G18_0_17_1 - 1.01249999999999*G18_0_18_1 - 4.04999999999999*G18_0_19_0 - 2.02499999999999*G18_0_19_1 + 1.0125*G18_1_13_0 + 1.0125*G18_1_14_0 + 2.025*G18_1_14_1 + 1.01249999999999*G18_1_15_0 - 1.0125*G18_1_16_0 + 1.01249999999999*G18_1_17_0 + 2.02499999999999*G18_1_17_1 - 1.01249999999999*G18_1_18_0 - 2.02499999999999*G18_1_19_0 - 4.04999999999998*G18_1_19_1 + 0.0749999999999997*G19_0_20 - 0.0749999999999998*G19_0_21 - 0.299999999999999*G19_0_23 + 0.3*G19_0_24 + 0.0749999999999997*G19_1_20 - 0.0749999999999997*G19_1_22 - 0.3*G19_1_23 + 0.299999999999997*G19_1_25 - 5.35714285714283*G22_0_10_0 - 5.35714285714285*G22_0_10_1 + 2.94642857142856*G22_0_11_0 + 2.94642857142857*G22_0_12_1 + 16.8749999999999*G22_0_13_0 + 9.64285714285711*G22_0_13_1 + 9.64285714285709*G22_0_14_0 + 16.8749999999998*G22_0_14_1 + 12.0535714285714*G22_0_15_0 + 12.0535714285714*G22_0_15_1 - 9.64285714285709*G22_0_16_0 - 9.64285714285705*G22_0_16_1 + 12.0535714285714*G22_0_17_0 + 12.0535714285713*G22_0_17_1 - 9.6428571428571*G22_0_18_0 - 9.64285714285703*G22_0_18_1 - 28.9285714285713*G22_0_19_0 - 28.9285714285714*G22_0_19_1 - 2.94642857142859*G22_1_10_0 - 2.9464285714286*G22_1_10_1 + 5.35714285714283*G22_1_11_0 + 2.39611284170569e-14*G22_1_11_1 + 2.94642857142857*G22_1_12_1 - 12.0535714285715*G22_1_13_0 - 8.55052790724176e-14*G22_1_13_1 + 9.64285714285712*G22_1_14_0 - 4.21503110192845e-14*G22_1_14_1 - 16.8749999999999*G22_1_15_0 - 7.23214285714277*G22_1_15_1 - 9.64285714285712*G22_1_16_0 + 7.23214285714284*G22_1_16_1 + 9.64285714285719*G22_1_17_0 + 2.46281944490945e-14*G22_1_17_1 - 12.0535714285714*G22_1_18_0 + 1.03470834331154e-13*G22_1_18_1 + 28.9285714285714*G22_1_19_0 - 6.63245500187593e-14*G22_1_19_1 - 2.94642857142856*G22_2_10_0 - 2.94642857142858*G22_2_10_1 + 2.94642857142855*G22_2_11_0 + 5.35714285714285*G22_2_12_1 + 6.83481049534862e-14*G22_2_13_0 + 9.64285714285718*G22_2_13_1 - 12.0535714285714*G22_2_14_1 - 5.08065811644087e-14*G22_2_15_0 + 9.64285714285713*G22_2_15_1 - 12.0535714285713*G22_2_16_1 - 7.23214285714283*G22_2_17_0 - 16.875*G22_2_17_1 + 7.23214285714283*G22_2_18_0 - 9.64285714285707*G22_2_18_1 - 1.68753899743024e-14*G22_2_19_0 + 28.9285714285713*G22_2_19_1 - 2.41071428571407*G22_3_10_0 - 2.41071428571425*G22_3_10_1 + 24.1071428571427*G22_3_11_0 - 9.44335582115648e-14*G22_3_11_1 - 19.2857142857141*G22_3_12_1 + 130.178571428571*G22_3_13_0 + 108.482142857143*G22_3_13_1 - 43.392857142857*G22_3_14_0 + 21.6964285714282*G22_3_14_1 + 43.3928571428569*G22_3_15_0 + 21.6964285714286*G22_3_15_1 + 43.3928571428569*G22_3_16_0 + 2.42680875395251e-13*G22_3_16_1 - 4.15785461616025e-13*G22_3_17_0 + 21.6964285714279*G22_3_17_1 - 21.6964285714282*G22_3_18_0 - 108.482142857142*G22_3_18_1 - 173.571428571428*G22_3_19_0 - 43.3928571428573*G22_3_19_1 - 2.41071428571434*G22_4_10_0 - 2.41071428571433*G22_4_10_1 - 19.2857142857142*G22_4_11_0 + 1.96889461695947e-13*G22_4_11_1 + 24.1071428571426*G22_4_12_1 + 21.6964285714284*G22_4_13_0 - 43.3928571428574*G22_4_13_1 + 108.482142857142*G22_4_14_0 + 130.178571428571*G22_4_14_1 + 21.6964285714286*G22_4_15_0 - 1.58900670399476e-13*G22_4_15_1 - 108.482142857142*G22_4_16_0 - 21.6964285714279*G22_4_16_1 + 21.6964285714285*G22_4_17_0 + 43.3928571428569*G22_4_17_1 + 4.53335285977019e-14*G22_4_18_0 + 43.3928571428572*G22_4_18_1 - 43.392857142857*G22_4_19_0 - 173.571428571428*G22_4_19_1 - 24.107142857143*G22_5_10_0 - 24.107142857143*G22_5_10_1 + 2.41071428571437*G22_5_11_0 + 6.45874451709362e-14*G22_5_11_1 - 19.2857142857141*G22_5_12_1 - 43.3928571428571*G22_5_13_0 - 21.6964285714284*G22_5_13_1 - 43.392857142857*G22_5_14_0 - 43.3928571428573*G22_5_14_1 - 130.178571428571*G22_5_15_0 - 21.6964285714282*G22_5_15_1 + 43.392857142857*G22_5_16_0 + 65.0892857142855*G22_5_16_1 + 21.696428571429*G22_5_17_0 - 86.7857142857139*G22_5_17_1 - 4.28234298065558e-13*G22_5_18_0 + 21.6964285714285*G22_5_18_1 + 173.571428571428*G22_5_19_0 + 130.178571428571*G22_5_19_1 + 19.2857142857142*G22_6_10_0 + 19.2857142857142*G22_6_10_1 + 2.41071428571426*G22_6_11_0 + 2.04961862571895e-13*G22_6_11_1 + 24.1071428571427*G22_6_12_1 - 21.6964285714287*G22_6_13_0 - 21.696428571429*G22_6_13_1 + 108.482142857142*G22_6_14_0 + 86.7857142857139*G22_6_14_1 - 21.6964285714283*G22_6_15_0 - 65.0892857142855*G22_6_15_1 - 108.482142857142*G22_6_16_0 + 21.6964285714289*G22_6_16_1 - 2.0905369449431e-14*G22_6_17_0 + 43.3928571428569*G22_6_17_1 - 21.6964285714284*G22_6_18_0 + 21.6964285714288*G22_6_18_1 + 43.392857142857*G22_6_19_0 - 130.178571428571*G22_6_19_1 - 24.1071428571429*G22_7_10_0 - 24.107142857143*G22_7_10_1 - 19.2857142857141*G22_7_11_0 + 6.9918256593794e-14*G22_7_11_1 + 2.41071428571442*G22_7_12_1 - 43.3928571428572*G22_7_13_0 - 43.3928571428568*G22_7_13_1 - 21.6964285714285*G22_7_14_0 - 43.3928571428574*G22_7_14_1 - 86.785714285714*G22_7_15_0 + 21.6964285714288*G22_7_15_1 + 21.6964285714285*G22_7_16_0 - 7.12887865059186e-14*G22_7_16_1 - 21.6964285714279*G22_7_17_0 - 130.178571428571*G22_7_17_1 + 65.0892857142849*G22_7_18_0 + 43.392857142857*G22_7_18_1 + 130.178571428571*G22_7_19_0 + 173.571428571428*G22_7_19_1 + 19.2857142857144*G22_8_10_0 + 19.2857142857142*G22_8_10_1 + 24.1071428571426*G22_8_11_0 - 8.34236841281747e-14*G22_8_11_1 + 2.4107142857144*G22_8_12_1 + 86.7857142857141*G22_8_13_0 + 108.482142857143*G22_8_13_1 - 21.6964285714285*G22_8_14_0 - 21.6964285714288*G22_8_14_1 + 43.392857142857*G22_8_15_0 + 2.80306458383048e-13*G22_8_15_1 + 21.6964285714285*G22_8_16_0 - 21.6964285714284*G22_8_16_1 - 65.0892857142859*G22_8_17_0 - 21.696428571429*G22_8_17_1 + 21.6964285714288*G22_8_18_0 - 108.482142857142*G22_8_18_1 - 130.178571428571*G22_8_19_0 + 43.3928571428567*G22_8_19_1 + 57.8571428571426*G22_9_10_0 + 57.8571428571417*G22_9_10_1 - 57.8571428571427*G22_9_11_0 + 8.40064163166811e-13*G22_9_11_1 - 57.8571428571422*G22_9_12_1 + 347.142857142856*G22_9_13_0 + 86.7857142857139*G22_9_13_1 + 86.7857142857138*G22_9_14_0 + 347.142857142853*G22_9_14_1 - 347.142857142856*G22_9_15_0 - 260.357142857141*G22_9_15_1 - 86.7857142857139*G22_9_16_0 + 260.357142857144*G22_9_16_1 - 260.357142857141*G22_9_17_0 - 347.142857142858*G22_9_17_1 + 260.357142857141*G22_9_18_0 - 86.7857142857114*G22_9_18_1 + 8.42883705540198e-14*G22_9_19_0 - 1.68388642873135e-12*G22_9_19_1 - 5.35714285714283*G23_10_10_0 - 5.35714285714285*G23_10_10_1 + 2.94642857142856*G23_10_11_0 + 2.94642857142857*G23_10_12_1 + 16.8749999999999*G23_10_13_0 + 9.64285714285711*G23_10_13_1 + 9.64285714285709*G23_10_14_0 + 16.8749999999998*G23_10_14_1 + 12.0535714285714*G23_10_15_0 + 12.0535714285714*G23_10_15_1 - 9.64285714285709*G23_10_16_0 - 9.64285714285705*G23_10_16_1 + 12.0535714285714*G23_10_17_0 + 12.0535714285713*G23_10_17_1 - 9.6428571428571*G23_10_18_0 - 9.64285714285703*G23_10_18_1 - 28.9285714285713*G23_10_19_0 - 28.9285714285714*G23_10_19_1 - 2.94642857142859*G23_11_10_0 - 2.9464285714286*G23_11_10_1 + 5.35714285714283*G23_11_11_0 + 2.39611284170569e-14*G23_11_11_1 + 2.94642857142857*G23_11_12_1 - 12.0535714285715*G23_11_13_0 - 8.55052790724176e-14*G23_11_13_1 + 9.64285714285712*G23_11_14_0 - 4.21503110192845e-14*G23_11_14_1 - 16.8749999999999*G23_11_15_0 - 7.23214285714277*G23_11_15_1 - 9.64285714285712*G23_11_16_0 + 7.23214285714284*G23_11_16_1 + 9.64285714285719*G23_11_17_0 + 2.46281944490945e-14*G23_11_17_1 - 12.0535714285714*G23_11_18_0 + 1.03470834331154e-13*G23_11_18_1 + 28.9285714285714*G23_11_19_0 - 6.63245500187593e-14*G23_11_19_1 - 2.94642857142856*G23_12_10_0 - 2.94642857142858*G23_12_10_1 + 2.94642857142855*G23_12_11_0 + 5.35714285714285*G23_12_12_1 + 6.83481049534862e-14*G23_12_13_0 + 9.64285714285718*G23_12_13_1 - 12.0535714285714*G23_12_14_1 - 5.08065811644087e-14*G23_12_15_0 + 9.64285714285713*G23_12_15_1 - 12.0535714285713*G23_12_16_1 - 7.23214285714283*G23_12_17_0 - 16.875*G23_12_17_1 + 7.23214285714283*G23_12_18_0 - 9.64285714285707*G23_12_18_1 - 1.68753899743024e-14*G23_12_19_0 + 28.9285714285713*G23_12_19_1 - 2.41071428571407*G23_13_10_0 - 2.41071428571425*G23_13_10_1 + 24.1071428571427*G23_13_11_0 - 9.44335582115648e-14*G23_13_11_1 - 19.2857142857141*G23_13_12_1 + 130.178571428571*G23_13_13_0 + 108.482142857143*G23_13_13_1 - 43.392857142857*G23_13_14_0 + 21.6964285714282*G23_13_14_1 + 43.3928571428569*G23_13_15_0 + 21.6964285714286*G23_13_15_1 + 43.3928571428569*G23_13_16_0 + 2.42680875395251e-13*G23_13_16_1 - 4.15785461616025e-13*G23_13_17_0 + 21.6964285714279*G23_13_17_1 - 21.6964285714282*G23_13_18_0 - 108.482142857142*G23_13_18_1 - 173.571428571428*G23_13_19_0 - 43.3928571428573*G23_13_19_1 - 2.41071428571434*G23_14_10_0 - 2.41071428571433*G23_14_10_1 - 19.2857142857142*G23_14_11_0 + 1.96889461695947e-13*G23_14_11_1 + 24.1071428571426*G23_14_12_1 + 21.6964285714284*G23_14_13_0 - 43.3928571428574*G23_14_13_1 + 108.482142857142*G23_14_14_0 + 130.178571428571*G23_14_14_1 + 21.6964285714286*G23_14_15_0 - 1.58900670399476e-13*G23_14_15_1 - 108.482142857142*G23_14_16_0 - 21.6964285714279*G23_14_16_1 + 21.6964285714285*G23_14_17_0 + 43.3928571428569*G23_14_17_1 + 4.53335285977019e-14*G23_14_18_0 + 43.3928571428572*G23_14_18_1 - 43.392857142857*G23_14_19_0 - 173.571428571428*G23_14_19_1 - 24.107142857143*G23_15_10_0 - 24.107142857143*G23_15_10_1 + 2.41071428571437*G23_15_11_0 + 6.45874451709362e-14*G23_15_11_1 - 19.2857142857141*G23_15_12_1 - 43.3928571428571*G23_15_13_0 - 21.6964285714284*G23_15_13_1 - 43.392857142857*G23_15_14_0 - 43.3928571428573*G23_15_14_1 - 130.178571428571*G23_15_15_0 - 21.6964285714282*G23_15_15_1 + 43.392857142857*G23_15_16_0 + 65.0892857142855*G23_15_16_1 + 21.696428571429*G23_15_17_0 - 86.7857142857139*G23_15_17_1 - 4.28234298065558e-13*G23_15_18_0 + 21.6964285714285*G23_15_18_1 + 173.571428571428*G23_15_19_0 + 130.178571428571*G23_15_19_1 + 19.2857142857142*G23_16_10_0 + 19.2857142857142*G23_16_10_1 + 2.41071428571426*G23_16_11_0 + 2.04961862571895e-13*G23_16_11_1 + 24.1071428571427*G23_16_12_1 - 21.6964285714287*G23_16_13_0 - 21.696428571429*G23_16_13_1 + 108.482142857142*G23_16_14_0 + 86.7857142857139*G23_16_14_1 - 21.6964285714283*G23_16_15_0 - 65.0892857142855*G23_16_15_1 - 108.482142857142*G23_16_16_0 + 21.6964285714289*G23_16_16_1 - 2.0905369449431e-14*G23_16_17_0 + 43.3928571428569*G23_16_17_1 - 21.6964285714284*G23_16_18_0 + 21.6964285714288*G23_16_18_1 + 43.392857142857*G23_16_19_0 - 130.178571428571*G23_16_19_1 - 24.1071428571429*G23_17_10_0 - 24.107142857143*G23_17_10_1 - 19.2857142857141*G23_17_11_0 + 6.9918256593794e-14*G23_17_11_1 + 2.41071428571442*G23_17_12_1 - 43.3928571428572*G23_17_13_0 - 43.3928571428568*G23_17_13_1 - 21.6964285714285*G23_17_14_0 - 43.3928571428574*G23_17_14_1 - 86.785714285714*G23_17_15_0 + 21.6964285714288*G23_17_15_1 + 21.6964285714285*G23_17_16_0 - 7.12887865059186e-14*G23_17_16_1 - 21.6964285714279*G23_17_17_0 - 130.178571428571*G23_17_17_1 + 65.0892857142849*G23_17_18_0 + 43.392857142857*G23_17_18_1 + 130.178571428571*G23_17_19_0 + 173.571428571428*G23_17_19_1 + 19.2857142857144*G23_18_10_0 + 19.2857142857142*G23_18_10_1 + 24.1071428571426*G23_18_11_0 - 8.34236841281747e-14*G23_18_11_1 + 2.4107142857144*G23_18_12_1 + 86.7857142857141*G23_18_13_0 + 108.482142857143*G23_18_13_1 - 21.6964285714285*G23_18_14_0 - 21.6964285714288*G23_18_14_1 + 43.392857142857*G23_18_15_0 + 2.80306458383048e-13*G23_18_15_1 + 21.6964285714285*G23_18_16_0 - 21.6964285714284*G23_18_16_1 - 65.0892857142859*G23_18_17_0 - 21.696428571429*G23_18_17_1 + 21.6964285714288*G23_18_18_0 - 108.482142857142*G23_18_18_1 - 130.178571428571*G23_18_19_0 + 43.3928571428567*G23_18_19_1 + 57.8571428571426*G23_19_10_0 + 57.8571428571417*G23_19_10_1 - 57.8571428571427*G23_19_11_0 + 8.40064163166811e-13*G23_19_11_1 - 57.8571428571422*G23_19_12_1 + 347.142857142856*G23_19_13_0 + 86.7857142857139*G23_19_13_1 + 86.7857142857138*G23_19_14_0 + 347.142857142853*G23_19_14_1 - 347.142857142856*G23_19_15_0 - 260.357142857141*G23_19_15_1 - 86.7857142857139*G23_19_16_0 + 260.357142857144*G23_19_16_1 - 260.357142857141*G23_19_17_0 - 347.142857142858*G23_19_17_1 + 260.357142857141*G23_19_18_0 - 86.7857142857114*G23_19_18_1 + 8.42883705540198e-14*G23_19_19_0 - 1.68388642873135e-12*G23_19_19_1 + 2.67857142857142*G26_0_10_0 + 2.67857142857143*G26_0_10_1 - 1.47321428571428*G26_0_11_0 - 1.47321428571428*G26_0_12_1 - 8.43749999999996*G26_0_13_0 - 4.82142857142855*G26_0_13_1 - 4.82142857142854*G26_0_14_0 - 8.43749999999992*G26_0_14_1 - 6.02678571428572*G26_0_15_0 - 6.02678571428571*G26_0_15_1 + 4.82142857142855*G26_0_16_0 + 4.82142857142853*G26_0_16_1 - 6.02678571428569*G26_0_17_0 - 6.02678571428567*G26_0_17_1 + 4.82142857142855*G26_0_18_0 + 4.82142857142851*G26_0_18_1 + 14.4642857142857*G26_0_19_0 + 14.4642857142857*G26_0_19_1 + 1.4732142857143*G26_1_10_0 + 1.4732142857143*G26_1_10_1 - 2.67857142857142*G26_1_11_0 - 1.19805642085284e-14*G26_1_11_1 - 1.47321428571429*G26_1_12_1 + 6.02678571428574*G26_1_13_0 + 4.27526395362088e-14*G26_1_13_1 - 4.82142857142856*G26_1_14_0 + 2.10751555096422e-14*G26_1_14_1 + 8.43749999999996*G26_1_15_0 + 3.61607142857138*G26_1_15_1 + 4.82142857142856*G26_1_16_0 - 3.61607142857142*G26_1_16_1 - 4.82142857142859*G26_1_17_0 - 1.23140972245472e-14*G26_1_17_1 + 6.02678571428571*G26_1_18_0 - 5.17354171655771e-14*G26_1_18_1 - 14.4642857142857*G26_1_19_0 + 3.31622750093796e-14*G26_1_19_1 + 1.47321428571428*G26_2_10_0 + 1.47321428571429*G26_2_10_1 - 1.47321428571428*G26_2_11_0 - 2.67857142857143*G26_2_12_1 - 3.41740524767431e-14*G26_2_13_0 - 4.82142857142859*G26_2_13_1 + 6.02678571428571*G26_2_14_1 + 2.54032905822044e-14*G26_2_15_0 - 4.82142857142857*G26_2_15_1 + 6.02678571428567*G26_2_16_1 + 3.61607142857142*G26_2_17_0 + 8.43750000000001*G26_2_17_1 - 3.61607142857142*G26_2_18_0 + 4.82142857142853*G26_2_18_1 - 14.4642857142856*G26_2_19_1 + 1.20535714285704*G26_3_10_0 + 1.20535714285713*G26_3_10_1 - 12.0535714285713*G26_3_11_0 + 4.72167791057824e-14*G26_3_11_1 + 9.64285714285706*G26_3_12_1 - 65.0892857142856*G26_3_13_0 - 54.2410714285714*G26_3_13_1 + 21.6964285714285*G26_3_14_0 - 10.8482142857141*G26_3_14_1 - 21.6964285714284*G26_3_15_0 - 10.8482142857143*G26_3_15_1 - 21.6964285714285*G26_3_16_0 - 1.21340437697626e-13*G26_3_16_1 + 2.07892730808013e-13*G26_3_17_0 - 10.8482142857139*G26_3_17_1 + 10.8482142857141*G26_3_18_0 + 54.2410714285711*G26_3_18_1 + 86.785714285714*G26_3_19_0 + 21.6964285714286*G26_3_19_1 + 1.20535714285717*G26_4_10_0 + 1.20535714285716*G26_4_10_1 + 9.64285714285711*G26_4_11_0 - 9.84447308479733e-14*G26_4_11_1 - 12.0535714285713*G26_4_12_1 - 10.8482142857142*G26_4_13_0 + 21.6964285714287*G26_4_13_1 - 54.2410714285712*G26_4_14_0 - 65.0892857142855*G26_4_14_1 - 10.8482142857143*G26_4_15_0 + 7.94503351997378e-14*G26_4_15_1 + 54.2410714285712*G26_4_16_0 + 10.848214285714*G26_4_16_1 - 10.8482142857142*G26_4_17_0 - 21.6964285714285*G26_4_17_1 - 2.26667642988509e-14*G26_4_18_0 - 21.6964285714286*G26_4_18_1 + 21.6964285714285*G26_4_19_0 + 86.785714285714*G26_4_19_1 + 12.0535714285715*G26_5_10_0 + 12.0535714285715*G26_5_10_1 - 1.20535714285718*G26_5_11_0 - 3.22937225854681e-14*G26_5_11_1 + 9.64285714285704*G26_5_12_1 + 21.6964285714286*G26_5_13_0 + 10.8482142857142*G26_5_13_1 + 21.6964285714285*G26_5_14_0 + 21.6964285714286*G26_5_14_1 + 65.0892857142856*G26_5_15_0 + 10.8482142857141*G26_5_15_1 - 21.6964285714285*G26_5_16_0 - 32.5446428571427*G26_5_16_1 - 10.8482142857145*G26_5_17_0 + 43.392857142857*G26_5_17_1 + 2.14117149032779e-13*G26_5_18_0 - 10.8482142857143*G26_5_18_1 - 86.7857142857141*G26_5_19_0 - 65.0892857142854*G26_5_19_1 - 9.64285714285709*G26_6_10_0 - 9.64285714285708*G26_6_10_1 - 1.20535714285713*G26_6_11_0 - 1.02480931285948e-13*G26_6_11_1 - 12.0535714285713*G26_6_12_1 + 10.8482142857144*G26_6_13_0 + 10.8482142857145*G26_6_13_1 - 54.2410714285712*G26_6_14_0 - 43.3928571428569*G26_6_14_1 + 10.8482142857142*G26_6_15_0 + 32.5446428571428*G26_6_15_1 + 54.2410714285712*G26_6_16_0 - 10.8482142857144*G26_6_16_1 + 1.04526847247155e-14*G26_6_17_0 - 21.6964285714285*G26_6_17_1 + 10.8482142857142*G26_6_18_0 - 10.8482142857144*G26_6_18_1 - 21.6964285714285*G26_6_19_0 + 65.0892857142855*G26_6_19_1 + 12.0535714285715*G26_7_10_0 + 12.0535714285715*G26_7_10_1 + 9.64285714285705*G26_7_11_0 - 3.4959128296897e-14*G26_7_11_1 - 1.20535714285721*G26_7_12_1 + 21.6964285714286*G26_7_13_0 + 21.6964285714284*G26_7_13_1 + 10.8482142857142*G26_7_14_0 + 21.6964285714287*G26_7_14_1 + 43.392857142857*G26_7_15_0 - 10.8482142857144*G26_7_15_1 - 10.8482142857143*G26_7_16_0 + 3.56443932529593e-14*G26_7_16_1 + 10.8482142857139*G26_7_17_0 + 65.0892857142854*G26_7_17_1 - 32.5446428571425*G26_7_18_0 - 21.6964285714285*G26_7_18_1 - 65.0892857142855*G26_7_19_0 - 86.7857142857139*G26_7_19_1 - 9.6428571428572*G26_8_10_0 - 9.64285714285711*G26_8_10_1 - 12.0535714285713*G26_8_11_0 + 4.17118420640874e-14*G26_8_11_1 - 1.2053571428572*G26_8_12_1 - 43.3928571428571*G26_8_13_0 - 54.2410714285713*G26_8_13_1 + 10.8482142857143*G26_8_14_0 + 10.8482142857144*G26_8_14_1 - 21.6964285714285*G26_8_15_0 - 1.40153229191524e-13*G26_8_15_1 - 10.8482142857142*G26_8_16_0 + 10.8482142857142*G26_8_16_1 + 32.5446428571429*G26_8_17_0 + 10.8482142857145*G26_8_17_1 - 10.8482142857144*G26_8_18_0 + 54.241071428571*G26_8_18_1 + 65.0892857142855*G26_8_19_0 - 21.6964285714283*G26_8_19_1 - 28.9285714285713*G26_9_10_0 - 28.9285714285708*G26_9_10_1 + 28.9285714285713*G26_9_11_0 - 4.20032081583405e-13*G26_9_11_1 + 28.9285714285711*G26_9_12_1 - 173.571428571428*G26_9_13_0 - 43.3928571428569*G26_9_13_1 - 43.3928571428569*G26_9_14_0 - 173.571428571427*G26_9_14_1 + 173.571428571428*G26_9_15_0 + 130.17857142857*G26_9_15_1 + 43.3928571428569*G26_9_16_0 - 130.178571428572*G26_9_16_1 + 130.178571428571*G26_9_17_0 + 173.571428571429*G26_9_17_1 - 130.178571428571*G26_9_18_0 + 43.3928571428557*G26_9_18_1 - 4.21441852770099e-14*G26_9_19_0 + 8.41943214365676e-13*G26_9_19_1 + 2.67857142857142*G27_10_10_0 + 2.67857142857143*G27_10_10_1 - 1.47321428571428*G27_10_11_0 - 1.47321428571428*G27_10_12_1 - 8.43749999999996*G27_10_13_0 - 4.82142857142855*G27_10_13_1 - 4.82142857142854*G27_10_14_0 - 8.43749999999992*G27_10_14_1 - 6.02678571428572*G27_10_15_0 - 6.02678571428571*G27_10_15_1 + 4.82142857142855*G27_10_16_0 + 4.82142857142853*G27_10_16_1 - 6.02678571428569*G27_10_17_0 - 6.02678571428567*G27_10_17_1 + 4.82142857142855*G27_10_18_0 + 4.82142857142851*G27_10_18_1 + 14.4642857142857*G27_10_19_0 + 14.4642857142857*G27_10_19_1 + 1.4732142857143*G27_11_10_0 + 1.4732142857143*G27_11_10_1 - 2.67857142857142*G27_11_11_0 - 1.19805642085284e-14*G27_11_11_1 - 1.47321428571429*G27_11_12_1 + 6.02678571428574*G27_11_13_0 + 4.27526395362088e-14*G27_11_13_1 - 4.82142857142856*G27_11_14_0 + 2.10751555096422e-14*G27_11_14_1 + 8.43749999999996*G27_11_15_0 + 3.61607142857138*G27_11_15_1 + 4.82142857142856*G27_11_16_0 - 3.61607142857142*G27_11_16_1 - 4.82142857142859*G27_11_17_0 - 1.23140972245472e-14*G27_11_17_1 + 6.02678571428571*G27_11_18_0 - 5.17354171655771e-14*G27_11_18_1 - 14.4642857142857*G27_11_19_0 + 3.31622750093796e-14*G27_11_19_1 + 1.47321428571428*G27_12_10_0 + 1.47321428571429*G27_12_10_1 - 1.47321428571428*G27_12_11_0 - 2.67857142857143*G27_12_12_1 - 3.41740524767431e-14*G27_12_13_0 - 4.82142857142859*G27_12_13_1 + 6.02678571428571*G27_12_14_1 + 2.54032905822044e-14*G27_12_15_0 - 4.82142857142857*G27_12_15_1 + 6.02678571428567*G27_12_16_1 + 3.61607142857142*G27_12_17_0 + 8.43750000000001*G27_12_17_1 - 3.61607142857142*G27_12_18_0 + 4.82142857142853*G27_12_18_1 - 14.4642857142856*G27_12_19_1 + 1.20535714285704*G27_13_10_0 + 1.20535714285713*G27_13_10_1 - 12.0535714285713*G27_13_11_0 + 4.72167791057824e-14*G27_13_11_1 + 9.64285714285706*G27_13_12_1 - 65.0892857142856*G27_13_13_0 - 54.2410714285714*G27_13_13_1 + 21.6964285714285*G27_13_14_0 - 10.8482142857141*G27_13_14_1 - 21.6964285714284*G27_13_15_0 - 10.8482142857143*G27_13_15_1 - 21.6964285714285*G27_13_16_0 - 1.21340437697626e-13*G27_13_16_1 + 2.07892730808013e-13*G27_13_17_0 - 10.8482142857139*G27_13_17_1 + 10.8482142857141*G27_13_18_0 + 54.2410714285711*G27_13_18_1 + 86.785714285714*G27_13_19_0 + 21.6964285714286*G27_13_19_1 + 1.20535714285717*G27_14_10_0 + 1.20535714285716*G27_14_10_1 + 9.64285714285711*G27_14_11_0 - 9.84447308479733e-14*G27_14_11_1 - 12.0535714285713*G27_14_12_1 - 10.8482142857142*G27_14_13_0 + 21.6964285714287*G27_14_13_1 - 54.2410714285712*G27_14_14_0 - 65.0892857142855*G27_14_14_1 - 10.8482142857143*G27_14_15_0 + 7.94503351997378e-14*G27_14_15_1 + 54.2410714285712*G27_14_16_0 + 10.848214285714*G27_14_16_1 - 10.8482142857142*G27_14_17_0 - 21.6964285714285*G27_14_17_1 - 2.26667642988509e-14*G27_14_18_0 - 21.6964285714286*G27_14_18_1 + 21.6964285714285*G27_14_19_0 + 86.785714285714*G27_14_19_1 + 12.0535714285715*G27_15_10_0 + 12.0535714285715*G27_15_10_1 - 1.20535714285718*G27_15_11_0 - 3.22937225854681e-14*G27_15_11_1 + 9.64285714285704*G27_15_12_1 + 21.6964285714286*G27_15_13_0 + 10.8482142857142*G27_15_13_1 + 21.6964285714285*G27_15_14_0 + 21.6964285714286*G27_15_14_1 + 65.0892857142856*G27_15_15_0 + 10.8482142857141*G27_15_15_1 - 21.6964285714285*G27_15_16_0 - 32.5446428571427*G27_15_16_1 - 10.8482142857145*G27_15_17_0 + 43.392857142857*G27_15_17_1 + 2.14117149032779e-13*G27_15_18_0 - 10.8482142857143*G27_15_18_1 - 86.7857142857141*G27_15_19_0 - 65.0892857142854*G27_15_19_1 - 9.64285714285709*G27_16_10_0 - 9.64285714285708*G27_16_10_1 - 1.20535714285713*G27_16_11_0 - 1.02480931285948e-13*G27_16_11_1 - 12.0535714285713*G27_16_12_1 + 10.8482142857144*G27_16_13_0 + 10.8482142857145*G27_16_13_1 - 54.2410714285712*G27_16_14_0 - 43.3928571428569*G27_16_14_1 + 10.8482142857142*G27_16_15_0 + 32.5446428571428*G27_16_15_1 + 54.2410714285712*G27_16_16_0 - 10.8482142857144*G27_16_16_1 + 1.04526847247155e-14*G27_16_17_0 - 21.6964285714285*G27_16_17_1 + 10.8482142857142*G27_16_18_0 - 10.8482142857144*G27_16_18_1 - 21.6964285714285*G27_16_19_0 + 65.0892857142855*G27_16_19_1 + 12.0535714285715*G27_17_10_0 + 12.0535714285715*G27_17_10_1 + 9.64285714285705*G27_17_11_0 - 3.4959128296897e-14*G27_17_11_1 - 1.20535714285721*G27_17_12_1 + 21.6964285714286*G27_17_13_0 + 21.6964285714284*G27_17_13_1 + 10.8482142857142*G27_17_14_0 + 21.6964285714287*G27_17_14_1 + 43.392857142857*G27_17_15_0 - 10.8482142857144*G27_17_15_1 - 10.8482142857143*G27_17_16_0 + 3.56443932529593e-14*G27_17_16_1 + 10.8482142857139*G27_17_17_0 + 65.0892857142854*G27_17_17_1 - 32.5446428571425*G27_17_18_0 - 21.6964285714285*G27_17_18_1 - 65.0892857142855*G27_17_19_0 - 86.7857142857139*G27_17_19_1 - 9.6428571428572*G27_18_10_0 - 9.64285714285711*G27_18_10_1 - 12.0535714285713*G27_18_11_0 + 4.17118420640874e-14*G27_18_11_1 - 1.2053571428572*G27_18_12_1 - 43.3928571428571*G27_18_13_0 - 54.2410714285713*G27_18_13_1 + 10.8482142857143*G27_18_14_0 + 10.8482142857144*G27_18_14_1 - 21.6964285714285*G27_18_15_0 - 1.40153229191524e-13*G27_18_15_1 - 10.8482142857142*G27_18_16_0 + 10.8482142857142*G27_18_16_1 + 32.5446428571429*G27_18_17_0 + 10.8482142857145*G27_18_17_1 - 10.8482142857144*G27_18_18_0 + 54.241071428571*G27_18_18_1 + 65.0892857142855*G27_18_19_0 - 21.6964285714283*G27_18_19_1 - 28.9285714285713*G27_19_10_0 - 28.9285714285708*G27_19_10_1 + 28.9285714285713*G27_19_11_0 - 4.20032081583405e-13*G27_19_11_1 + 28.9285714285711*G27_19_12_1 - 173.571428571428*G27_19_13_0 - 43.3928571428569*G27_19_13_1 - 43.3928571428569*G27_19_14_0 - 173.571428571427*G27_19_14_1 + 173.571428571428*G27_19_15_0 + 130.17857142857*G27_19_15_1 + 43.3928571428569*G27_19_16_0 - 130.178571428572*G27_19_16_1 + 130.178571428571*G27_19_17_0 + 173.571428571429*G27_19_17_1 - 130.178571428571*G27_19_18_0 + 43.3928571428557*G27_19_18_1 - 4.21441852770099e-14*G27_19_19_0 + 8.41943214365676e-13*G27_19_19_1;
    A[20] = 0.0749999999999998*G28_0_0 + 0.0749999999999997*G28_0_1 + 0.0374999999999999*G28_3_0 + 0.0374999999999995*G28_3_1 + 0.0374999999999998*G28_4_0 + 0.0375000000000001*G28_4_1 + 0.0374999999999998*G28_5_0 - 0.1125*G28_5_1 - 0.0374999999999999*G28_6_0 + 0.0375*G28_6_1 - 0.1125*G28_7_0 + 0.0374999999999995*G28_7_1 + 0.0375000000000002*G28_8_0 - 0.0374999999999996*G28_8_1 - 0.0749999999999997*G28_9_0 - 0.0749999999999997*G28_9_1 + 0.0749999999999998*G29_10_0 + 0.0749999999999997*G29_10_1 + 0.0374999999999999*G29_13_0 + 0.0374999999999995*G29_13_1 + 0.0374999999999998*G29_14_0 + 0.0375000000000001*G29_14_1 + 0.0374999999999998*G29_15_0 - 0.1125*G29_15_1 - 0.0374999999999999*G29_16_0 + 0.0375*G29_16_1 - 0.1125*G29_17_0 + 0.0374999999999995*G29_17_1 + 0.0375000000000002*G29_18_0 - 0.0374999999999996*G29_18_1 - 0.0749999999999997*G29_19_0 - 0.0749999999999997*G29_19_1;
    A[21] = -0.0749999999999995*G28_1_0 - 0.0375*G28_3_0 - 0.15*G28_3_1 + 0.0374999999999998*G28_4_0 + 0.0749999999999998*G28_4_1 - 0.0374999999999998*G28_5_0 - 0.0374999999999998*G28_6_0 - 0.0374999999999993*G28_7_0 - 0.0749999999999992*G28_7_1 + 0.112499999999999*G28_8_0 + 0.149999999999999*G28_8_1 + 0.0749999999999998*G28_9_0 - 0.0749999999999995*G29_11_0 - 0.0375*G29_13_0 - 0.15*G29_13_1 + 0.0374999999999998*G29_14_0 + 0.0749999999999998*G29_14_1 - 0.0374999999999998*G29_15_0 - 0.0374999999999998*G29_16_0 - 0.0374999999999993*G29_17_0 - 0.0749999999999992*G29_17_1 + 0.112499999999999*G29_18_0 + 0.149999999999999*G29_18_1 + 0.0749999999999998*G29_19_0;
    A[22] = -0.0749999999999995*G28_2_1 + 0.0749999999999997*G28_3_0 + 0.0375000000000002*G28_3_1 - 0.149999999999999*G28_4_0 - 0.0375000000000001*G28_4_1 - 0.0749999999999998*G28_5_0 - 0.0374999999999996*G28_5_1 + 0.149999999999999*G28_6_0 + 0.112499999999999*G28_6_1 - 0.0375*G28_7_1 - 0.0374999999999999*G28_8_1 + 0.0749999999999997*G28_9_1 - 0.0749999999999995*G29_12_1 + 0.0749999999999997*G29_13_0 + 0.0375000000000002*G29_13_1 - 0.149999999999999*G29_14_0 - 0.0375000000000001*G29_14_1 - 0.0749999999999998*G29_15_0 - 0.0374999999999996*G29_15_1 + 0.149999999999999*G29_16_0 + 0.112499999999999*G29_16_1 - 0.0375*G29_17_1 - 0.0374999999999999*G29_18_1 + 0.0749999999999997*G29_19_1;
    A[23] = 0.0166666666666664*G28_0_0 + 0.016666666666667*G28_0_1 - 0.0166666666666664*G28_1_0 - 0.0166666666666667*G28_2_1 - 0.299999999999999*G28_3_0 - 0.149999999999999*G28_3_1 - 0.149999999999999*G28_4_0 - 0.299999999999997*G28_4_1 + 0.149999999999999*G28_6_0 + 0.149999999999998*G28_8_1 + 0.299999999999999*G28_9_0 + 0.3*G28_9_1 + 0.0166666666666664*G29_10_0 + 0.016666666666667*G29_10_1 - 0.0166666666666664*G29_11_0 - 0.0166666666666667*G29_12_1 - 0.299999999999999*G29_13_0 - 0.149999999999999*G29_13_1 - 0.149999999999999*G29_14_0 - 0.299999999999997*G29_14_1 + 0.149999999999999*G29_16_0 + 0.149999999999998*G29_18_1 + 0.299999999999999*G29_19_0 + 0.3*G29_19_1;
    A[24] = 0.0166666666666668*G28_0_0 + 0.0166666666666672*G28_0_1 - 0.0166666666666667*G28_1_0 - 0.0166666666666668*G28_2_1 - 0.149999999999999*G28_4_0 - 0.149999999999998*G28_4_1 + 0.299999999999999*G28_5_0 + 0.149999999999999*G28_5_1 + 0.149999999999999*G28_6_0 - 0.150000000000001*G28_6_1 + 0.15*G28_7_1 - 0.3*G28_9_0 + 0.0166666666666668*G29_10_0 + 0.0166666666666672*G29_10_1 - 0.0166666666666667*G29_11_0 - 0.0166666666666668*G29_12_1 - 0.149999999999999*G29_14_0 - 0.149999999999998*G29_14_1 + 0.299999999999999*G29_15_0 + 0.149999999999999*G29_15_1 + 0.149999999999999*G29_16_0 - 0.150000000000001*G29_16_1 + 0.15*G29_17_1 - 0.3*G29_19_0;
    A[25] = 0.0166666666666665*G28_0_0 + 0.0166666666666672*G28_0_1 - 0.0166666666666666*G28_1_0 - 0.0166666666666672*G28_2_1 - 0.149999999999999*G28_3_0 - 0.15*G28_3_1 + 0.149999999999999*G28_5_0 + 0.149999999999999*G28_7_0 + 0.3*G28_7_1 - 0.149999999999999*G28_8_0 + 0.149999999999998*G28_8_1 - 0.299999999999997*G28_9_1 + 0.0166666666666665*G29_10_0 + 0.0166666666666672*G29_10_1 - 0.0166666666666666*G29_11_0 - 0.0166666666666672*G29_12_1 - 0.149999999999999*G29_13_0 - 0.15*G29_13_1 + 0.149999999999999*G29_15_0 + 0.149999999999999*G29_17_0 + 0.3*G29_17_1 - 0.149999999999999*G29_18_0 + 0.149999999999998*G29_18_1 - 0.299999999999997*G29_19_1;
  }

};


class ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0: public ufc::form
{
public:

  ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0();

  ~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0() override;

  const char * signature() const final override;

  std::size_t rank() const final override;

  std::size_t num_coefficients() const final override;

  std::size_t original_coefficient_position(std::size_t i) const final override;

  ufc::finite_element * create_coordinate_finite_element() const final override;

  ufc::dofmap * create_coordinate_dofmap() const final override;

  ufc::coordinate_mapping * create_coordinate_mapping() const final override;

  ufc::finite_element * create_finite_element(std::size_t i) const final override;

  ufc::dofmap * create_dofmap(std::size_t i) const final override;

  std::size_t max_cell_subdomain_id() const final override;

  std::size_t max_exterior_facet_subdomain_id() const final override;

  std::size_t max_interior_facet_subdomain_id() const final override;

  std::size_t max_vertex_subdomain_id() const final override;

  std::size_t max_custom_subdomain_id() const final override;

  std::size_t max_cutcell_subdomain_id() const final override;

  std::size_t max_interface_subdomain_id() const final override;

  std::size_t max_overlap_subdomain_id() const final override;

  bool has_cell_integrals() const final override;

  bool has_exterior_facet_integrals() const final override;

  bool has_interior_facet_integrals() const final override;

  bool has_vertex_integrals() const final override;

  bool has_custom_integrals() const final override;

  bool has_cutcell_integrals() const final override;

  bool has_interface_integrals() const final override;

  bool has_overlap_integrals() const final override;

  ufc::cell_integral * create_cell_integral(std::size_t i) const final override;

  ufc::exterior_facet_integral * create_exterior_facet_integral(std::size_t i) const final override;

  ufc::interior_facet_integral * create_interior_facet_integral(std::size_t i) const final override;

  ufc::vertex_integral * create_vertex_integral(std::size_t i) const final override;

  ufc::custom_integral * create_custom_integral(std::size_t i) const final override;

  ufc::cutcell_integral * create_cutcell_integral(std::size_t i) const final override;

  ufc::interface_integral * create_interface_integral(std::size_t i) const final override;

  ufc::overlap_integral * create_overlap_integral(std::size_t i) const final override;

  ufc::cell_integral * create_default_cell_integral() const final override;

  ufc::exterior_facet_integral * create_default_exterior_facet_integral() const final override;

  ufc::interior_facet_integral * create_default_interior_facet_integral() const final override;

  ufc::vertex_integral * create_default_vertex_integral() const final override;

  ufc::custom_integral * create_default_custom_integral() const final override;

  ufc::cutcell_integral * create_default_cutcell_integral() const final override;

  ufc::interface_integral * create_default_interface_integral() const final override;

  ufc::overlap_integral * create_default_overlap_integral() const final override;

};

extern "C" DLL_EXPORT ufc::form * create_ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0()
{
  return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0();
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0() : ufc::form()
{
    // Do nothing
}

ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::~ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0()
{
    // Do nothing
}

const char * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::signature() const
{
    return "6e73157d1a8539b382a269bd822efa657feebd6f5eae964a6bd08b7e13fb80ed3182c55233a7c19cb5010238b70ea60b1c5f8b85aeefb8275819f0140df97ae7";
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::rank() const
{
    return 1;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::num_coefficients() const
{
    return 2;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::original_coefficient_position(std::size_t i) const
{
    static const std::vector<std::size_t> position({0, 1});
    return position[i];
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_coordinate_finite_element() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_1();
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_coordinate_dofmap() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_1();
}

ufc::coordinate_mapping * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_coordinate_mapping() const
{
    return nullptr;
}

ufc::finite_element * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_finite_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5();
        break;
      }
    case 2:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_finite_element_5();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5();
        break;
      }
    case 1:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5();
        break;
      }
    case 2:
      {
        return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_dofmap_5();
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_cell_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_exterior_facet_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_interior_facet_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_vertex_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_custom_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_cutcell_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_interface_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::max_overlap_subdomain_id() const
{
    return 0;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_cell_integrals() const
{
    return true;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_exterior_facet_integrals() const
{
    return false;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_interior_facet_integrals() const
{
    return false;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_vertex_integrals() const
{
    return false;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_custom_integrals() const
{
    return false;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_cutcell_integrals() const
{
    return false;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_interface_integrals() const
{
    return false;
}

bool ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::has_overlap_integrals() const
{
    return false;
}

ufc::cell_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_cell_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::exterior_facet_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_exterior_facet_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::interior_facet_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_interior_facet_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::vertex_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_vertex_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::custom_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_custom_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::cutcell_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_cutcell_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::interface_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_interface_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::overlap_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_overlap_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::cell_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_cell_integral() const
{
    return new ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_cell_integral_0_otherwise();
}

ufc::exterior_facet_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_exterior_facet_integral() const
{
    return 0;
}

ufc::interior_facet_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_interior_facet_integral() const
{
    return 0;
}

ufc::vertex_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_vertex_integral() const
{
    return 0;
}

ufc::custom_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_custom_integral() const
{
    return 0;
}

ufc::cutcell_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_cutcell_integral() const
{
    return 0;
}

ufc::interface_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_interface_integral() const
{
    return 0;
}

ufc::overlap_integral * ffc_form_8229aae54bc481bac5dc8bd28e24bc340561b9ba_form_0::create_default_overlap_integral() const
{
    return 0;
}

